{"ast":null,"code":"var _jsxFileName = \"/Users/USER/Desktop/MuunganoMoney/src/Profil/Input.js\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport './Input.css';\nimport Media from 'react-media';\nimport { useForm } from 'react-hook-form';\nimport { useNavigate } from 'react-router-dom';\nimport { phoneX } from '../Sign/Input';\nimport { collection, getDocs, doc, updateDoc } from 'firebase/firestore';\nimport { db } from '../firebase';\nimport Button from '@mui/material/Button';\nimport Dialog from '@mui/material/Dialog';\nimport DialogActions from '@mui/material/DialogActions';\nimport DialogContent from '@mui/material/DialogContent';\nimport DialogTitle from '@mui/material/DialogTitle';\nimport DialogContentText from '@mui/material/DialogContentText'; // View Form Update view\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport default function ReturnFormUpdate() {\n  return /*#__PURE__*/_jsxDEV(Media, {\n    queries: {\n      small: '(max-width: 599px)',\n      medium: '(min-width: 600px) and (max-width:1199px)',\n      large: '(min-width: 1200px)'\n    },\n    children: matches => /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [matches.small && /*#__PURE__*/_jsxDEV(ScreenSmall, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 24\n      }, this), matches.medium && /*#__PURE__*/_jsxDEV(ScreenLarge, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 25\n      }, this), matches.large && /*#__PURE__*/_jsxDEV(ScreenLarge, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 24\n      }, this)]\n    }, void 0, true)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 23,\n    columnNumber: 3\n  }, this);\n}\n_c = ReturnFormUpdate;\n;\nexport const ScreenLarge = () => /*#__PURE__*/_jsxDEV(\"div\", {\n  className: \"wrp-form-input-update-code\",\n  children: /*#__PURE__*/_jsxDEV(FormInputField, {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 42,\n    columnNumber: 3\n  }, this)\n}, void 0, false, {\n  fileName: _jsxFileName,\n  lineNumber: 41,\n  columnNumber: 2\n}, this);\n_c2 = ScreenLarge;\nexport const ScreenSmall = () => /*#__PURE__*/_jsxDEV(\"div\", {\n  className: \"wrp-form-input-update-code-sm\",\n  children: /*#__PURE__*/_jsxDEV(FormInputField, {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 47,\n    columnNumber: 3\n  }, this)\n}, void 0, false, {\n  fileName: _jsxFileName,\n  lineNumber: 46,\n  columnNumber: 2\n}, this);\n_c3 = ScreenSmall;\nexport const FormInputField = () => {\n  _s();\n\n  let pushDocs = new Array();\n  const navigation = useNavigate();\n  const {\n    register,\n    handleSubmit,\n    reset\n  } = useForm();\n  const [checked, setChecked] = React.useState(true);\n  const [open, setOpen] = React.useState(false);\n  const [fullWidth, setFullWidth] = React.useState(true);\n  const [maxWidth, setMaxWidth] = React.useState('sm');\n\n  const handleClickOpen = () => {\n    setOpen(true);\n  };\n\n  const handleClose = () => {\n    setOpen(false);\n  };\n\n  React.useEffect(async () => {\n    const querySnapshot = await getDocs(collection(db, \"client\"));\n    querySnapshot.forEach(doc => {\n      pushDocs.push(doc.id);\n    });\n  }, []);\n\n  const onSubmit = async data => {\n    if (data.code.length != 6) {\n      // window.alert('6 lettres accepter.');\n      setOpen(true);\n      reset();\n    } else {\n      const verifierCollection = pushDocs.some(value => value == phoneX);\n      updatePinInWithDocs(verifierCollection, data.code, phoneX);\n      setTimeout(() => {\n        navigation('/dash');\n      }, -3000);\n    }\n\n    ;\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    onSubmit: handleSubmit(onSubmit),\n    children: [/*#__PURE__*/_jsxDEV(\"input\", {\n      type: 'password',\n      placeholder: \"\\u2022\\u2022\\u2022\\u2022\\u2022\\u2022\",\n      ...register('code')\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 4\n    }, this), /*#__PURE__*/_jsxDEV(Dialog, {\n      fullWidth: fullWidth,\n      maxWidth: maxWidth,\n      open: open,\n      onClose: handleClose,\n      children: [/*#__PURE__*/_jsxDEV(DialogTitle, {\n        children: \"MuunganoMoney\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 107,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(DialogContent, {\n        children: /*#__PURE__*/_jsxDEV(DialogContentText, {\n          children: \"Le code pin est valid\\xE9 avec un minimum de 6 caract\\xE8res\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 110,\n          columnNumber: 6\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 108,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(DialogActions, {\n        children: /*#__PURE__*/_jsxDEV(Button, {\n          onClick: handleClose,\n          children: \"Fermer\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 116,\n          columnNumber: 6\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 115,\n        columnNumber: 5\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 101,\n      columnNumber: 4\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"Btn\",\n      children: \"Enregistre\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 120,\n      columnNumber: 4\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 98,\n    columnNumber: 3\n  }, this);\n};\n\n_s(FormInputField, \"l5cNuvnlRvhfI4qH4CTNWOnyPdA=\", false, function () {\n  return [useNavigate, useForm];\n});\n\n_c4 = FormInputField;\n\nasync function updatePinInWithDocs(verifierCollection, newPin, numPhone) {\n  const washingtonRef = doc(db, verifierCollection ? \"client\" : \"agent\", numPhone); // Set the \"capital\" field of the city 'DC'\n\n  await updateDoc(washingtonRef, {\n    code: newPin\n  });\n}\n\n;\n\nvar _c, _c2, _c3, _c4;\n\n$RefreshReg$(_c, \"ReturnFormUpdate\");\n$RefreshReg$(_c2, \"ScreenLarge\");\n$RefreshReg$(_c3, \"ScreenSmall\");\n$RefreshReg$(_c4, \"FormInputField\");","map":{"version":3,"sources":["/Users/USER/Desktop/MuunganoMoney/src/Profil/Input.js"],"names":["React","Media","useForm","useNavigate","phoneX","collection","getDocs","doc","updateDoc","db","Button","Dialog","DialogActions","DialogContent","DialogTitle","DialogContentText","ReturnFormUpdate","small","medium","large","matches","ScreenLarge","ScreenSmall","FormInputField","pushDocs","Array","navigation","register","handleSubmit","reset","checked","setChecked","useState","open","setOpen","fullWidth","setFullWidth","maxWidth","setMaxWidth","handleClickOpen","handleClose","useEffect","querySnapshot","forEach","push","id","onSubmit","data","code","length","verifierCollection","some","value","updatePinInWithDocs","setTimeout","newPin","numPhone","washingtonRef"],"mappings":"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","sourcesContent":["\nimport React from 'react';\nimport './Input.css';\nimport Media from 'react-media';\nimport { useForm } from 'react-hook-form';\nimport { useNavigate } from 'react-router-dom';\nimport { phoneX } from '../Sign/Input';\n\nimport { collection, getDocs, doc, updateDoc } from 'firebase/firestore';\nimport { db } from '../firebase';\n\nimport Button from '@mui/material/Button';\nimport Dialog from '@mui/material/Dialog';\nimport DialogActions from '@mui/material/DialogActions';\nimport DialogContent from '@mui/material/DialogContent';\nimport DialogTitle from '@mui/material/DialogTitle';\nimport DialogContentText from '@mui/material/DialogContentText';\n\n\n// View Form Update view\nexport default function ReturnFormUpdate() {\n return (\n  <Media\n   queries={{\n    small: '(max-width: 599px)',\n    medium: '(min-width: 600px) and (max-width:1199px)',\n    large: '(min-width: 1200px)',\n   }}>\n   {matches => (\n    <>\n     {matches.small && <ScreenSmall />}\n     {matches.medium && <ScreenLarge />}\n     {matches.large && <ScreenLarge />}\n    </>\n   )}\n  </Media>\n );\n};\n\nexport const ScreenLarge = () => (\n <div className='wrp-form-input-update-code'>\n  <FormInputField />\n </div>\n);\nexport const ScreenSmall = () => (\n <div className='wrp-form-input-update-code-sm'>\n  <FormInputField />\n </div>\n);\nexport const FormInputField = () => {\n\n let pushDocs = new Array();\n const navigation = useNavigate();\n const { register, handleSubmit, reset } = useForm();\n\n const [checked, setChecked] = React.useState(true);\n const [open, setOpen] = React.useState(false);\n const [fullWidth, setFullWidth] = React.useState(true);\n const [maxWidth, setMaxWidth] = React.useState('sm');\n\n const handleClickOpen = () => {\n  setOpen(true);\n };\n const handleClose = () => {\n  setOpen(false);\n };\n\n React.useEffect(async () => {\n\n  const querySnapshot = await getDocs(collection(db, \"client\"));\n  querySnapshot.forEach((doc) => {\n   pushDocs.push(doc.id);\n  });\n\n }, []);\n\n const onSubmit = async (data) => {\n\n  if (data.code.length != 6) {\n\n   // window.alert('6 lettres accepter.');\n   setOpen(true);\n   reset();\n\n  } else {\n\n   const verifierCollection = pushDocs.some((value) => value == phoneX);\n   updatePinInWithDocs(verifierCollection, data.code, phoneX);\n\n   setTimeout(() => {\n    navigation('/dash');\n   }, -3000);\n\n  };\n };\n\n return (\n  <form onSubmit={handleSubmit(onSubmit)}>\n   <input type={'password'} placeholder='••••••' {...register('code')} />\n\n   <Dialog\n    fullWidth={fullWidth}\n    maxWidth={maxWidth}\n    open={open}\n    onClose={handleClose}\n   >\n    <DialogTitle>MuunganoMoney</DialogTitle>\n    <DialogContent>\n\n     <DialogContentText>\n      Le code pin est validé avec un minimum de 6 caractères\n     </DialogContentText>\n\n    </DialogContent>\n    <DialogActions>\n     <Button onClick={handleClose}>Fermer</Button>\n    </DialogActions>\n   </Dialog>\n\n   <button className='Btn'>Enregistre</button>\n  </form>\n );\n};\nasync function updatePinInWithDocs(verifierCollection, newPin, numPhone) {\n const washingtonRef = doc(db, verifierCollection ? \"client\" : \"agent\", numPhone);\n // Set the \"capital\" field of the city 'DC'\n await updateDoc(washingtonRef, { code: newPin });\n};\n"]},"metadata":{},"sourceType":"module"}