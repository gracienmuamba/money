{"ast":null,"code":"var _jsxFileName = \"/Users/USER/Desktop/Agent/src/Test.js\",\n    _s = $RefreshSig$();\n\nimport * as React from 'react';\nimport dayjs from 'dayjs';\nimport Stack from '@mui/material/Stack';\nimport TextField from '@mui/material/TextField';\nimport { LocalizationProvider } from '@mui/x-date-pickers/LocalizationProvider';\nimport { AdapterDayjs } from '@mui/x-date-pickers/AdapterDayjs';\nimport { DesktopDatePicker } from '@mui/x-date-pickers/DesktopDatePicker';\nimport moment from 'moment';\nimport MomentUtils from \"@date-io/moment\";\nimport { useForm, Controller } from 'react-hook-form';\nimport { DatePicker, MuiPickersUtilsProvider } from '@material-ui/pickers';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport default function MaterialUIPickers() {\n  _s();\n\n  const [value, setValue] = React.useState(dayjs('2006-08-18T21:11:54'));\n  const [locale, setLocale] = React.useState(\"fr\");\n\n  const handleChange = newValue => {\n    setValue(newValue);\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(Controller, {\n      name: \"birth\",\n      control: control,\n      render: ({\n        field\n      }) => /*#__PURE__*/_jsxDEV(LocalizationProvider, {\n        libInstance: moment,\n        utils: MomentUtils,\n        locale: locale,\n        children: /*#__PURE__*/_jsxDEV(DatePicker, {\n          disableFuture: true,\n          openTo: \"year\",\n          format: \"dd/MM/yyyy\",\n          label: \"Date de naissance\",\n          views: [\"year\", \"month\", \"date\"],\n          value: selectedDate,\n          onChange: handleDateChange,\n          ...field\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 38,\n          columnNumber: 7\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 6\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 4\n    }, this)\n  }, void 0, false);\n}\n\n_s(MaterialUIPickers, \"VKEA9snNCZUgGXliffuq9FxhQZY=\");\n\n_c = MaterialUIPickers;\n\nvar _c;\n\n$RefreshReg$(_c, \"MaterialUIPickers\");","map":{"version":3,"sources":["/Users/USER/Desktop/Agent/src/Test.js"],"names":["React","dayjs","Stack","TextField","LocalizationProvider","AdapterDayjs","DesktopDatePicker","moment","MomentUtils","useForm","Controller","DatePicker","MuiPickersUtilsProvider","MaterialUIPickers","value","setValue","useState","locale","setLocale","handleChange","newValue","control","field","selectedDate","handleDateChange"],"mappings":";;;AAAA,OAAO,KAAKA,KAAZ,MAAuB,OAAvB;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,OAAOC,KAAP,MAAkB,qBAAlB;AACA,OAAOC,SAAP,MAAsB,yBAAtB;AACA,SAASC,oBAAT,QAAqC,0CAArC;AACA,SAASC,YAAT,QAA6B,kCAA7B;AACA,SAASC,iBAAT,QAAkC,uCAAlC;AACA,OAAOC,MAAP,MAAmB,QAAnB;AACA,OAAOC,WAAP,MAAwB,iBAAxB;AACA,SAASC,OAAT,EAAkBC,UAAlB,QAAoC,iBAApC;AACA,SACCC,UADD,EAECC,uBAFD,QAGO,sBAHP;;;AAMA,eAAe,SAASC,iBAAT,GAA6B;AAAA;;AAE3C,QAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBf,KAAK,CAACgB,QAAN,CAAef,KAAK,CAAC,qBAAD,CAApB,CAA1B;AACA,QAAM,CAACgB,MAAD,EAASC,SAAT,IAAsBlB,KAAK,CAACgB,QAAN,CAAe,IAAf,CAA5B;;AAEA,QAAMG,YAAY,GAAIC,QAAD,IAAc;AAClCL,IAAAA,QAAQ,CAACK,QAAD,CAAR;AACA,GAFD;;AAIA,sBACC;AAAA,2BAEC,QAAC,UAAD;AACC,MAAA,IAAI,EAAC,OADN;AAEC,MAAA,OAAO,EAAEC,OAFV;AAGC,MAAA,MAAM,EAAE,CAAC;AAAEC,QAAAA;AAAF,OAAD,kBAGP,QAAC,oBAAD;AACC,QAAA,WAAW,EAAEf,MADd;AACsB,QAAA,KAAK,EAAEC,WAD7B;AAC0C,QAAA,MAAM,EAAES,MADlD;AAAA,+BAGC,QAAC,UAAD;AACC,UAAA,aAAa,MADd;AAEC,UAAA,MAAM,EAAC,MAFR;AAGC,UAAA,MAAM,EAAC,YAHR;AAIC,UAAA,KAAK,EAAC,mBAJP;AAKC,UAAA,KAAK,EAAE,CAAC,MAAD,EAAS,OAAT,EAAkB,MAAlB,CALR;AAMC,UAAA,KAAK,EAAEM,YANR;AAOC,UAAA,QAAQ,EAAEC,gBAPX;AAAA,aAQKF;AARL;AAAA;AAAA;AAAA;AAAA;AAHD;AAAA;AAAA;AAAA;AAAA;AANF;AAAA;AAAA;AAAA;AAAA;AAFD,mBADD;AA8BA;;GAvCuBT,iB;;KAAAA,iB","sourcesContent":["import * as React from 'react';\nimport dayjs from 'dayjs';\nimport Stack from '@mui/material/Stack';\nimport TextField from '@mui/material/TextField';\nimport { LocalizationProvider } from '@mui/x-date-pickers/LocalizationProvider';\nimport { AdapterDayjs } from '@mui/x-date-pickers/AdapterDayjs';\nimport { DesktopDatePicker } from '@mui/x-date-pickers/DesktopDatePicker';\nimport moment from 'moment';\nimport MomentUtils from \"@date-io/moment\";\nimport { useForm, Controller } from 'react-hook-form';\nimport {\n DatePicker,\n MuiPickersUtilsProvider,\n} from '@material-ui/pickers';\n\n\nexport default function MaterialUIPickers() {\n\n const [value, setValue] = React.useState(dayjs('2006-08-18T21:11:54'));\n const [locale, setLocale] = React.useState(\"fr\");\n\n const handleChange = (newValue) => {\n  setValue(newValue);\n };\n\n return (\n  <>\n\n   <Controller\n    name=\"birth\"\n    control={control}\n    render={({ field }) =>\n\n\n     <LocalizationProvider\n      libInstance={moment} utils={MomentUtils} locale={locale}>\n\n      <DatePicker\n       disableFuture\n       openTo=\"year\"\n       format=\"dd/MM/yyyy\"\n       label=\"Date de naissance\"\n       views={[\"year\", \"month\", \"date\"]}\n       value={selectedDate}\n       onChange={handleDateChange}\n       {...field}\n      />\n\n\n     </LocalizationProvider>}\n   />\n\n\n  </>\n );\n}\n"]},"metadata":{},"sourceType":"module"}