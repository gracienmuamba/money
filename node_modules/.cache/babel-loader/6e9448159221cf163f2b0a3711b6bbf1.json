{"ast":null,"code":"var _jsxFileName = \"/Users/USER/Desktop/MuunganoMoney/src/Dash/Home/Body/Avatar.js\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport './Avatar.css';\nimport Media from 'react-media';\nimport ReturnName from './Name';\nimport { collection, getDocs, doc, getDoc, onSnapshot } from \"firebase/firestore\";\nimport { db } from '../../../firebase';\nimport { phoneX } from '../../../Sign/Input'; // Avatar IMAGE VIew\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport default function ReturnAvataR() {\n  return /*#__PURE__*/_jsxDEV(Media, {\n    queries: {\n      small: '(max-width: 599px)',\n      medium: '(min-width: 600px) and (max-width:1199px)',\n      large: '(min-width: 1200px)'\n    },\n    children: matches => /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [matches.small && /*#__PURE__*/_jsxDEV(ScreenSmall, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 23,\n        columnNumber: 24\n      }, this), matches.medium && /*#__PURE__*/_jsxDEV(ScreenLarge, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 24,\n        columnNumber: 25\n      }, this), matches.large && /*#__PURE__*/_jsxDEV(ScreenLarge, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 25,\n        columnNumber: 24\n      }, this)]\n    }, void 0, true)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 15,\n    columnNumber: 3\n  }, this);\n}\n_c = ReturnAvataR;\n;\nexport const ScreenLarge = () => {\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"wrp-avatar-profil-dash\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"avatar-circle-profil-dash\",\n      children: /*#__PURE__*/_jsxDEV(FirstLetteR, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 5\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 4\n    }, this), /*#__PURE__*/_jsxDEV(ReturnName, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 4\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 34,\n    columnNumber: 3\n  }, this);\n};\n_c2 = ScreenLarge;\nexport const ScreenSmall = () => /*#__PURE__*/_jsxDEV(\"div\", {\n  className: \"wrp-avatar-profil-dash-sm\",\n  children: [/*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"avatar-circle-profil-dash-sm\",\n    children: /*#__PURE__*/_jsxDEV(FirstLetteR, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 4\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 44,\n    columnNumber: 3\n  }, this), /*#__PURE__*/_jsxDEV(ReturnName, {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 47,\n    columnNumber: 3\n  }, this)]\n}, void 0, true, {\n  fileName: _jsxFileName,\n  lineNumber: 43,\n  columnNumber: 2\n}, this);\n_c3 = ScreenSmall;\nexport const FirstLetteR = () => {\n  _s();\n\n  let arrayClient = new Array();\n  const [letter, setLetter] = React.useState('M');\n  React.useEffect(async () => {\n    const querySnapshot = await getDocs(collection(db, \"client\"));\n    querySnapshot.forEach(doc => {\n      arrayClient.push(doc.id);\n    });\n    const collections = arrayClient.some(value => value == phoneX);\n    const unsub = onSnapshot(doc(db, collections ? \"client\" : \"agent\", phoneX), doc => {\n      setLetter(doc.data().firstname);\n    });\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"h1\", {\n    children: letter[0].toUpperCase()\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 70,\n    columnNumber: 3\n  }, this);\n};\n\n_s(FirstLetteR, \"CcVaNPC17ZZdujQX7i6eStioGEg=\");\n\n_c4 = FirstLetteR;\n\nvar _c, _c2, _c3, _c4;\n\n$RefreshReg$(_c, \"ReturnAvataR\");\n$RefreshReg$(_c2, \"ScreenLarge\");\n$RefreshReg$(_c3, \"ScreenSmall\");\n$RefreshReg$(_c4, \"FirstLetteR\");","map":{"version":3,"sources":["/Users/USER/Desktop/MuunganoMoney/src/Dash/Home/Body/Avatar.js"],"names":["React","Media","ReturnName","collection","getDocs","doc","getDoc","onSnapshot","db","phoneX","ReturnAvataR","small","medium","large","matches","ScreenLarge","ScreenSmall","FirstLetteR","arrayClient","Array","letter","setLetter","useState","useEffect","querySnapshot","forEach","push","id","collections","some","value","unsub","data","firstname","toUpperCase"],"mappings":";;;AACA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAO,cAAP;AACA,OAAOC,KAAP,MAAkB,aAAlB;AACA,OAAOC,UAAP,MAAuB,QAAvB;AAEA,SAASC,UAAT,EAAqBC,OAArB,EAA8BC,GAA9B,EAAmCC,MAAnC,EAA2CC,UAA3C,QAA6D,oBAA7D;AACA,SAASC,EAAT,QAAmB,mBAAnB;AACA,SAASC,MAAT,QAAuB,qBAAvB,C,CAGA;;;;AACA,eAAe,SAASC,YAAT,GAAwB;AACtC,sBACC,QAAC,KAAD;AACC,IAAA,OAAO,EAAE;AACRC,MAAAA,KAAK,EAAE,oBADC;AAERC,MAAAA,MAAM,EAAE,2CAFA;AAGRC,MAAAA,KAAK,EAAE;AAHC,KADV;AAAA,cAMEC,OAAO,iBACP;AAAA,iBACEA,OAAO,CAACH,KAAR,iBAAiB,QAAC,WAAD;AAAA;AAAA;AAAA;AAAA,cADnB,EAEEG,OAAO,CAACF,MAAR,iBAAkB,QAAC,WAAD;AAAA;AAAA;AAAA;AAAA,cAFpB,EAGEE,OAAO,CAACD,KAAR,iBAAiB,QAAC,WAAD;AAAA;AAAA;AAAA;AAAA,cAHnB;AAAA;AAPF;AAAA;AAAA;AAAA;AAAA,UADD;AAgBA;KAjBuBH,Y;AAiBvB;AAED,OAAO,MAAMK,WAAW,GAAG,MAAM;AAChC,sBACC;AAAK,IAAA,SAAS,EAAC,wBAAf;AAAA,4BACC;AAAK,MAAA,SAAS,EAAC,2BAAf;AAAA,6BACC,QAAC,WAAD;AAAA;AAAA;AAAA;AAAA;AADD;AAAA;AAAA;AAAA;AAAA,YADD,eAIC,QAAC,UAAD;AAAA;AAAA;AAAA;AAAA,YAJD;AAAA;AAAA;AAAA;AAAA;AAAA,UADD;AAQA,CATM;MAAMA,W;AAUb,OAAO,MAAMC,WAAW,GAAG,mBAC1B;AAAK,EAAA,SAAS,EAAC,2BAAf;AAAA,0BACC;AAAK,IAAA,SAAS,EAAC,8BAAf;AAAA,2BACC,QAAC,WAAD;AAAA;AAAA;AAAA;AAAA;AADD;AAAA;AAAA;AAAA;AAAA,UADD,eAIC,QAAC,UAAD;AAAA;AAAA;AAAA;AAAA,UAJD;AAAA;AAAA;AAAA;AAAA;AAAA,QADM;MAAMA,W;AAQb,OAAO,MAAMC,WAAW,GAAG,MAAM;AAAA;;AAEhC,MAAIC,WAAW,GAAG,IAAIC,KAAJ,EAAlB;AACA,QAAM,CAACC,MAAD,EAASC,SAAT,IAAsBrB,KAAK,CAACsB,QAAN,CAAe,GAAf,CAA5B;AAEAtB,EAAAA,KAAK,CAACuB,SAAN,CAAgB,YAAY;AAE3B,UAAMC,aAAa,GAAG,MAAMpB,OAAO,CAACD,UAAU,CAACK,EAAD,EAAK,QAAL,CAAX,CAAnC;AACAgB,IAAAA,aAAa,CAACC,OAAd,CAAuBpB,GAAD,IAAS;AAC9Ba,MAAAA,WAAW,CAACQ,IAAZ,CAAiBrB,GAAG,CAACsB,EAArB;AACA,KAFD;AAIA,UAAMC,WAAW,GAAGV,WAAW,CAACW,IAAZ,CAAiBC,KAAK,IAAIA,KAAK,IAAIrB,MAAnC,CAApB;AACA,UAAMsB,KAAK,GAAGxB,UAAU,CAACF,GAAG,CAACG,EAAD,EAAKoB,WAAW,GAAG,QAAH,GAAc,OAA9B,EAAuCnB,MAAvC,CAAJ,EAAqDJ,GAAD,IAAS;AACpFgB,MAAAA,SAAS,CAAChB,GAAG,CAAC2B,IAAJ,GAAWC,SAAZ,CAAT;AACA,KAFuB,CAAxB;AAIA,GAZD,EAYG,EAZH;AAcA,sBACC;AAAA,cAAKb,MAAM,CAAC,CAAD,CAAN,CAAUc,WAAV;AAAL;AAAA;AAAA;AAAA;AAAA,UADD;AAGA,CAtBM;;GAAMjB,W;;MAAAA,W","sourcesContent":["\nimport React from 'react';\nimport './Avatar.css';\nimport Media from 'react-media';\nimport ReturnName from './Name';\n\nimport { collection, getDocs, doc, getDoc, onSnapshot } from \"firebase/firestore\";\nimport { db } from '../../../firebase';\nimport { phoneX } from '../../../Sign/Input';\n\n\n// Avatar IMAGE VIew\nexport default function ReturnAvataR() {\n return (\n  <Media\n   queries={{\n    small: '(max-width: 599px)',\n    medium: '(min-width: 600px) and (max-width:1199px)',\n    large: '(min-width: 1200px)',\n   }}>\n   {matches => (\n    <>\n     {matches.small && <ScreenSmall />}\n     {matches.medium && <ScreenLarge />}\n     {matches.large && <ScreenLarge />}\n    </>\n   )}\n  </Media>\n );\n};\n\nexport const ScreenLarge = () => {\n return (\n  <div className='wrp-avatar-profil-dash'>\n   <div className='avatar-circle-profil-dash'>\n    <FirstLetteR />\n   </div>\n   <ReturnName />\n  </div>\n );\n}\nexport const ScreenSmall = () => (\n <div className='wrp-avatar-profil-dash-sm'>\n  <div className='avatar-circle-profil-dash-sm'>\n   <FirstLetteR />\n  </div>\n  <ReturnName />\n </div>\n);\nexport const FirstLetteR = () => {\n\n let arrayClient = new Array();\n const [letter, setLetter] = React.useState('M');\n\n React.useEffect(async () => {\n\n  const querySnapshot = await getDocs(collection(db, \"client\"));\n  querySnapshot.forEach((doc) => {\n   arrayClient.push(doc.id);\n  });\n\n  const collections = arrayClient.some(value => value == phoneX);\n  const unsub = onSnapshot(doc(db, collections ? \"client\" : \"agent\", phoneX), (doc) => {\n   setLetter(doc.data().firstname);\n  });\n\n }, []);\n\n return (\n  <h1>{letter[0].toUpperCase()}</h1>\n );\n}\n"]},"metadata":{},"sourceType":"module"}