{"ast":null,"code":"var _jsxFileName = \"/Users/USER/Desktop/Agent/src/Register/SignIn/Input.js\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport './Input.css';\nimport Media from 'react-media';\nimport { useForm, Controller } from 'react-hook-form';\nimport { useNavigate } from 'react-router-dom';\nimport { doc, setDoc, updateDoc, increment, onSnapshot } from 'firebase/firestore';\nimport { db } from '../../firebase';\nimport dayjs from 'dayjs';\nimport MomentUtils from \"@date-io/moment\";\nimport { phoneX } from '../Phone/Input';\nimport moment from 'moment';\nimport \"moment/locale/fr\";\nimport DateFnsUtils from '@date-io/date-fns'; // choose your lib\n\nimport { DatePicker, MuiPickersUtilsProvider } from '@material-ui/pickers';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport let nowField = moment().date(); // Input Field Component \n\nexport default function ReturnInput() {\n  return /*#__PURE__*/_jsxDEV(Media, {\n    queries: {\n      small: '(max-width: 599px)',\n      medium: '(min-width: 600px) and (max-width:1199px)',\n      large: '(min-width: 1200px)'\n    },\n    children: matches => /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [matches.small && /*#__PURE__*/_jsxDEV(ScreenSmall, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 24\n      }, this), matches.medium && /*#__PURE__*/_jsxDEV(SreenLarge, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 25\n      }, this), matches.large && /*#__PURE__*/_jsxDEV(SreenLarge, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 24\n      }, this)]\n    }, void 0, true)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 25,\n    columnNumber: 3\n  }, this);\n}\n_c = ReturnInput;\n;\nexport const SreenLarge = () => {\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"view-input-signin-register\",\n    children: /*#__PURE__*/_jsxDEV(FormInput, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 4\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 44,\n    columnNumber: 3\n  }, this);\n};\n_c2 = SreenLarge;\nexport const ScreenSmall = () => {\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"view-input-signin-register-sm\",\n    children: /*#__PURE__*/_jsxDEV(FormInput, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 4\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 52,\n    columnNumber: 3\n  }, this);\n};\n_c3 = ScreenSmall;\nexport const FormInput = () => {\n  _s();\n\n  let regular = /[a-z]+/;\n  const [locale, setLocale] = React.useState(\"fr\");\n  const [tablepartner, setTablepartner] = React.useState();\n  const [selectedDate, handleDateChange] = React.useState(new Date());\n  const navigation = useNavigate();\n  const existing = {\n    state: \"agent\",\n    cdf: 0,\n    usd: 0,\n    thriftcdf: 0,\n    thriftusd: 0,\n    accountdate: moment().format(),\n    delay: '',\n    code: 'muuganomoney',\n    phoneclient: '',\n    unite: '',\n    solde: 0,\n    money: 0,\n    frais: 0,\n    user: '',\n    swap: []\n  };\n  const {\n    register,\n    handleSubmit,\n    control\n  } = useForm({\n    defaultValues: {\n      phone: '+243'\n    }\n  }); // Ref collection database!\n\n  React.useEffect(async () => {\n    try {\n      await onSnapshot(doc(db, \"muungano\", \"partner\"), doc => {\n        setTablepartner(doc.data().agent);\n      });\n    } catch {\n      window.console.log('erreur disponible');\n    }\n  }, []);\n\n  const onSubmit = async data => {\n    if (data.phone.length != 13 || regular.test(data.phone)) {\n      window.alert('Numéro de téléphone est Incorrect!');\n    } else {\n      let valuePartner = Number(tablepartner[nowField]) + 1;\n      let arrayPartner = tablepartner;\n\n      for (let i = nowField; i <= 31; i++) {\n        arrayPartner[i] = valuePartner;\n      }\n\n      let dateBirth = data.birth.format('LL');\n      Object.defineProperty(data, 'birth', {\n        value: dateBirth,\n        writable: true,\n        configuration: true,\n        enumerable: true\n      });\n      const clone = Object.assign(data, existing);\n      saveInfoInWithDocs(phoneX, clone);\n      incrementPartner(arrayPartner);\n      navigation('/register/success');\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    onSubmit: handleSubmit(onSubmit),\n    children: [/*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      placeholder: \"Nom\",\n      name: \"firstname\",\n      ...register('firstname', {\n        required: true\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 125,\n      columnNumber: 4\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      placeholder: \"Pr\\xE8nom\",\n      name: \"lastname\",\n      ...register('lastname', {\n        required: true\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 126,\n      columnNumber: 4\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"email\",\n      placeholder: \"Email\",\n      name: \"email\",\n      ...register('email', {\n        required: false\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 127,\n      columnNumber: 4\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"phone\",\n      placeholder: \"Phone\",\n      name: \"phone\",\n      ...register('phone', {\n        required: true\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 128,\n      columnNumber: 4\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      placeholder: \"Nom du Business\",\n      name: \"job\",\n      ...register('job', {\n        required: true\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 129,\n      columnNumber: 4\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      placeholder: \"Ville\",\n      name: \"ville\",\n      ...register('ville', {\n        required: true\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 130,\n      columnNumber: 4\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      placeholder: \"Addresse\",\n      name: \"addresse\",\n      ...register('addresse', {\n        required: true\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 131,\n      columnNumber: 4\n    }, this), /*#__PURE__*/_jsxDEV(Controller, {\n      name: \"birth\",\n      control: control,\n      render: ({\n        field\n      }) => /*#__PURE__*/_jsxDEV(MuiPickersUtilsProvider, {\n        libInstance: moment,\n        utils: MomentUtils,\n        locale: locale,\n        children: /*#__PURE__*/_jsxDEV(DatePicker, {\n          disableFuture: true,\n          openTo: \"year\",\n          format: \"dd/MM/yyyy\",\n          label: \"Date de naissance\",\n          views: [\"year\", \"month\", \"date\"],\n          value: selectedDate,\n          onChange: handleDateChange,\n          ...field\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 140,\n          columnNumber: 7\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 137,\n        columnNumber: 6\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 133,\n      columnNumber: 4\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"Btn\",\n      children: \"Enregistre\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 152,\n      columnNumber: 4\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 124,\n    columnNumber: 3\n  }, this);\n};\n\n_s(FormInput, \"2ewDOB2fh3ib+4HBfTol2rHg3Jc=\", false, function () {\n  return [useNavigate, useForm];\n});\n\n_c4 = FormInput;\n\nasync function saveInfoInWithDocs(phoneInDocs, user) {\n  await setDoc(doc(db, \"agent\", phoneInDocs), user);\n}\n\n;\n\nasync function incrementPartner(arrayPartner) {\n  const washingtonRef = doc(db, \"muungano\", \"partner\");\n  await updateDoc(washingtonRef, {\n    agent: arrayPartner\n  });\n  const partnerRef = doc(db, \"muunganomoney\", \"partner\");\n  await updateDoc(partnerRef, {\n    agent: increment(1)\n  });\n}\n\n;\n\nvar _c, _c2, _c3, _c4;\n\n$RefreshReg$(_c, \"ReturnInput\");\n$RefreshReg$(_c2, \"SreenLarge\");\n$RefreshReg$(_c3, \"ScreenSmall\");\n$RefreshReg$(_c4, \"FormInput\");","map":{"version":3,"sources":["/Users/USER/Desktop/Agent/src/Register/SignIn/Input.js"],"names":["React","Media","useForm","Controller","useNavigate","doc","setDoc","updateDoc","increment","onSnapshot","db","dayjs","MomentUtils","phoneX","moment","DateFnsUtils","DatePicker","MuiPickersUtilsProvider","nowField","date","ReturnInput","small","medium","large","matches","SreenLarge","ScreenSmall","FormInput","regular","locale","setLocale","useState","tablepartner","setTablepartner","selectedDate","handleDateChange","Date","navigation","existing","state","cdf","usd","thriftcdf","thriftusd","accountdate","format","delay","code","phoneclient","unite","solde","money","frais","user","swap","register","handleSubmit","control","defaultValues","phone","useEffect","data","agent","window","console","log","onSubmit","length","test","alert","valuePartner","Number","arrayPartner","i","dateBirth","birth","Object","defineProperty","value","writable","configuration","enumerable","clone","assign","saveInfoInWithDocs","incrementPartner","required","field","phoneInDocs","washingtonRef","partnerRef"],"mappings":"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","sourcesContent":["import React from 'react';\nimport './Input.css';\nimport Media from 'react-media';\nimport { useForm, Controller } from 'react-hook-form';\nimport { useNavigate } from 'react-router-dom';\nimport { doc, setDoc, updateDoc, increment, onSnapshot } from 'firebase/firestore';\nimport { db } from '../../firebase';\nimport dayjs from 'dayjs';\nimport MomentUtils from \"@date-io/moment\";\nimport { phoneX } from '../Phone/Input';\nimport moment from 'moment';\nimport \"moment/locale/fr\";\n\nimport DateFnsUtils from '@date-io/date-fns'; // choose your lib\nimport {\n DatePicker,\n MuiPickersUtilsProvider,\n} from '@material-ui/pickers';\n\nexport let nowField = moment().date();\n\n// Input Field Component \nexport default function ReturnInput() {\n return (\n  <Media\n   queries={{\n    small: '(max-width: 599px)',\n    medium: '(min-width: 600px) and (max-width:1199px)',\n    large: '(min-width: 1200px)',\n   }}>\n   {matches => (\n    <>\n     {matches.small && <ScreenSmall />}\n     {matches.medium && <SreenLarge />}\n     {matches.large && <SreenLarge />}\n    </>\n   )}\n  </Media>\n );\n};\n\nexport const SreenLarge = () => {\n return (\n  <div className='view-input-signin-register'>\n   <FormInput />\n\n  </div>\n )\n}\nexport const ScreenSmall = () => {\n return (\n  <div className='view-input-signin-register-sm'>\n   <FormInput />\n\n  </div>\n )\n};\nexport const FormInput = () => {\n\n let regular = /[a-z]+/;\n const [locale, setLocale] = React.useState(\"fr\");\n const [tablepartner, setTablepartner] = React.useState();\n const [selectedDate, handleDateChange] = React.useState(new Date());\n\n const navigation = useNavigate();\n\n const existing = { state: \"agent\", cdf: 0, usd: 0, thriftcdf: 0, thriftusd: 0, accountdate: moment().format(), delay: '', code: 'muuganomoney', phoneclient: '', unite: '', solde: 0, money: 0, frais: 0, user: '', swap: [] }\n const { register, handleSubmit, control } = useForm({\n  defaultValues: {\n   phone: '+243'\n  }\n });\n\n\n // Ref collection database!\n React.useEffect(async () => {\n\n  try {\n   await onSnapshot(doc(db, \"muungano\", \"partner\"), (doc) => {\n    setTablepartner(doc.data().agent);\n   });\n  } catch {\n   window.console.log('erreur disponible');\n  }\n\n }, []);\n\n const onSubmit = async (data) => {\n\n  if (data.phone.length != 13 || regular.test(data.phone)) {\n   window.alert('Numéro de téléphone est Incorrect!');\n\n  } else {\n\n   let valuePartner = Number(tablepartner[nowField]) + 1;\n   let arrayPartner = tablepartner;\n\n   for (let i = nowField; i <= 31; i++) {\n    arrayPartner[i] = valuePartner;\n   }\n\n\n   let dateBirth = data.birth.format('LL');\n   Object.defineProperty(data, 'birth', {\n\n    value: dateBirth,\n    writable: true,\n    configuration: true,\n    enumerable: true\n\n   })\n\n   const clone = Object.assign(data, existing);\n\n   saveInfoInWithDocs(phoneX, clone);\n   incrementPartner(arrayPartner);\n   navigation('/register/success');\n\n  }\n\n };\n\n return (\n  <form onSubmit={handleSubmit(onSubmit)}>\n   <input type='text' placeholder='Nom' name='firstname' {...register('firstname', { required: true })} />\n   <input type='text' placeholder='Prènom' name='lastname' {...register('lastname', { required: true })} />\n   <input type='email' placeholder='Email' name='email' {...register('email', { required: false })} />\n   <input type='phone' placeholder='Phone' name='phone' {...register('phone', { required: true })} />\n   <input type='text' placeholder='Nom du Business' name='job' {...register('job', { required: true })} />\n   <input type='text' placeholder='Ville' name='ville' {...register('ville', { required: true })} />\n   <input type='text' placeholder='Addresse' name='addresse' {...register('addresse', { required: true })} />\n\n   <Controller\n    name=\"birth\"\n    control={control}\n    render={({ field }) =>\n     <MuiPickersUtilsProvider\n      libInstance={moment} utils={MomentUtils} locale={locale}>\n\n      <DatePicker\n       disableFuture\n       openTo=\"year\"\n       format=\"dd/MM/yyyy\"\n       label=\"Date de naissance\"\n       views={[\"year\", \"month\", \"date\"]}\n       value={selectedDate}\n       onChange={handleDateChange}\n       {...field}\n      />\n     </MuiPickersUtilsProvider>}\n   />\n   <button className='Btn'>Enregistre</button>\n  </form>\n )\n};\n\n\nasync function saveInfoInWithDocs(phoneInDocs, user) {\n await setDoc(doc(db, \"agent\", phoneInDocs), user);\n};\nasync function incrementPartner(arrayPartner) {\n\n const washingtonRef = doc(db, \"muungano\", \"partner\");\n await updateDoc(washingtonRef, {\n  agent: arrayPartner,\n });\n\n const partnerRef = doc(db, \"muunganomoney\", \"partner\");\n await updateDoc(partnerRef, {\n  agent: increment(1),\n });\n\n};"]},"metadata":{},"sourceType":"module"}