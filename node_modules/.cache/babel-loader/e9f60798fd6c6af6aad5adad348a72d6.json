{"ast":null,"code":"var _jsxFileName = \"/Users/USER/Documents/Money/src/Brokers/Fiat/Input.js\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport Media from 'react-media';\nimport { useForm, Controller } from 'react-hook-form';\nimport { useNavigate } from 'react-router-dom';\nimport Input from '@mui/material/Input';\nimport InputLabel from '@mui/material/InputLabel';\nimport FormControl from '@mui/material/FormControl';\nimport PropTypes from 'prop-types';\nimport { IMaskInput } from 'react-imask';\nimport { NumericFormat } from 'react-number-format';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst TextMaskCustom = /*#__PURE__*/React.forwardRef(_c = function TextMaskCustom(props, ref) {\n  const {\n    onChange,\n    ...other\n  } = props;\n  return /*#__PURE__*/_jsxDEV(IMaskInput, { ...other,\n    mask: \"(#00) 000-0000\",\n    definitions: {\n      '#': /[0-9]/\n    },\n    inputmode: \"tel\",\n    pattern: \"[0-9]*\",\n    inputRef: ref,\n    onAccept: value => onChange({\n      target: {\n        name: props.name,\n        value\n      }\n    }),\n    overwrite: true\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 19,\n    columnNumber: 3\n  }, this);\n});\n_c2 = TextMaskCustom;\nTextMaskCustom.propTypes = {\n  name: PropTypes.string.isRequired,\n  onChange: PropTypes.func.isRequired\n};\nconst NumericFormatCustom = /*#__PURE__*/React.forwardRef(_c3 = function NumericFormatCustom(props, ref) {\n  const {\n    onChange,\n    ...other\n  } = props;\n  return /*#__PURE__*/_jsxDEV(NumericFormat, { ...other,\n    getInputRef: ref,\n    onValueChange: values => {\n      onChange({\n        target: {\n          name: props.name,\n          value: values.value\n        }\n      });\n    },\n    thousandSeparator: true,\n    inputmode: \"tel\",\n    valueIsNumericString: true,\n    prefix: \"\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 45,\n    columnNumber: 3\n  }, this);\n});\n_c4 = NumericFormatCustom;\nNumericFormatCustom.propTypes = {\n  name: PropTypes.string.isRequired,\n  onChange: PropTypes.func.isRequired\n}; // Input Field Component \n\nexport default function ReturnInput() {\n  return /*#__PURE__*/_jsxDEV(Media, {\n    queries: {\n      small: '(max-width: 599px)',\n      medium: '(min-width: 600px) and (max-width:1199px)',\n      large: '(min-width: 1200px)'\n    },\n    children: matches => /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [matches.small && /*#__PURE__*/_jsxDEV(ScreenSmall, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 24\n      }, this), matches.medium && /*#__PURE__*/_jsxDEV(SreenLarge, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 25\n      }, this), matches.large && /*#__PURE__*/_jsxDEV(SreenLarge, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 24\n      }, this)]\n    }, void 0, true)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 72,\n    columnNumber: 3\n  }, this);\n}\n_c5 = ReturnInput;\n;\nexport const SreenLarge = () => {\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"wrp-input-signin-user\",\n    children: /*#__PURE__*/_jsxDEV(FormInput, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 4\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 91,\n    columnNumber: 3\n  }, this);\n};\n_c6 = SreenLarge;\nexport const ScreenSmall = () => {\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"wrp-input-signin-user-sm\",\n    children: /*#__PURE__*/_jsxDEV(FormInput, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 4\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 98,\n    columnNumber: 3\n  }, this);\n};\n_c7 = ScreenSmall;\nexport const FormInput = () => {\n  _s();\n\n  const navigation = useNavigate();\n  const {\n    register,\n    handleSubmit,\n    control\n  } = useForm({});\n  const [values, setValues] = React.useState({\n    textmask: '(100) 000-0000',\n    numberformat: '1320'\n  });\n\n  const handleChange = event => {\n    setValues({ ...values,\n      [event.target.name]: event.target.value\n    });\n  }; // Ref collection database!\n\n\n  const onSubmit = async data => {\n    if (data.phone === undefined) {\n      window.console.log('Erroe');\n    } else {\n      let num = data.phone.match(/\\d+/g);\n      let numPhone = '';\n      num.map(index => {\n        numPhone += index;\n      });\n      let first = data.firstname.toLowerCase();\n      let last = data.lastname.toLowerCase();\n      let staf = data.staf.toLowerCase();\n      let residence = data.residence.toLowerCase();\n      let dwelling = data.dwelling.toLowerCase();\n      let user = first.concat(last, staf);\n      window.localStorage.setItem('user^@&&', user);\n      window.localStorage.setItem('userobj11first^@&&', first);\n      window.localStorage.setItem('userobj11last^@&&', last);\n      window.localStorage.setItem('userobj11staf^@&&', staf);\n      window.localStorage.setItem('userobj11residence^@&&', residence);\n      window.localStorage.setItem('userobj11dwelling^@&&', dwelling);\n      window.localStorage.setItem('userobj11contact^@&&', numPhone);\n      window.localStorage.setItem('@%^**fiatpath*>', JSON.stringify(true));\n      navigation('/brokers/save');\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    style: {\n      marginTop: '3vh'\n    },\n    onSubmit: handleSubmit(onSubmit),\n    autocomplete: \"off\",\n    children: [/*#__PURE__*/_jsxDEV(FormControl, {\n      sx: {\n        width: '100%'\n      },\n      variant: \"standard\",\n      children: [/*#__PURE__*/_jsxDEV(InputLabel, {\n        htmlFor: \"formatted-text-mask-input\",\n        children: /*#__PURE__*/_jsxDEV(\"h1\", {\n          className: \"pop-up\",\n          children: \"Nom\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 163,\n          columnNumber: 53\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 163,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(Controller, {\n        name: \"firstname\",\n        control: control,\n        render: ({\n          field\n        }) => /*#__PURE__*/_jsxDEV(Input, {\n          inputProps: {\n            autoComplete: \"off\"\n          },\n          name: \"firstname\",\n          ...field\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 170,\n          columnNumber: 7\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 165,\n        columnNumber: 5\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 162,\n      columnNumber: 4\n    }, this), /*#__PURE__*/_jsxDEV(FormControl, {\n      sx: {\n        width: '100%'\n      },\n      variant: \"standard\",\n      children: [/*#__PURE__*/_jsxDEV(InputLabel, {\n        htmlFor: \"formatted-text-mask-input\",\n        children: /*#__PURE__*/_jsxDEV(\"h1\", {\n          className: \"pop-up\",\n          children: \"Pr\\xE8nom\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 181,\n          columnNumber: 53\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 181,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(Controller, {\n        name: \"lastname\",\n        control: control,\n        render: ({\n          field\n        }) => /*#__PURE__*/_jsxDEV(Input, {\n          inputProps: {\n            autoComplete: \"off\"\n          },\n          name: \"lastname\",\n          ...field\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 188,\n          columnNumber: 7\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 183,\n        columnNumber: 5\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 180,\n      columnNumber: 4\n    }, this), /*#__PURE__*/_jsxDEV(FormControl, {\n      sx: {\n        width: '100%'\n      },\n      variant: \"standard\",\n      children: [/*#__PURE__*/_jsxDEV(InputLabel, {\n        htmlFor: \"formatted-text-mask-input\",\n        children: /*#__PURE__*/_jsxDEV(\"h1\", {\n          className: \"pop-up\",\n          children: \"Staf\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 199,\n          columnNumber: 53\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 199,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(Controller, {\n        name: \"staf\",\n        control: control,\n        render: ({\n          field\n        }) => /*#__PURE__*/_jsxDEV(Input, {\n          inputProps: {\n            autoComplete: \"off\"\n          },\n          name: \"staf\",\n          ...field\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 206,\n          columnNumber: 7\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 201,\n        columnNumber: 5\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 198,\n      columnNumber: 4\n    }, this), /*#__PURE__*/_jsxDEV(FormControl, {\n      sx: {\n        width: '100%'\n      },\n      variant: \"standard\",\n      children: [/*#__PURE__*/_jsxDEV(InputLabel, {\n        htmlFor: \"formatted-text-mask-input\",\n        children: /*#__PURE__*/_jsxDEV(\"h1\", {\n          className: \"pop-up\",\n          children: \"R\\xE9sidence actuelle\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 217,\n          columnNumber: 53\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 217,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(Controller, {\n        name: \"residence\",\n        control: control,\n        render: ({\n          field\n        }) => /*#__PURE__*/_jsxDEV(Input, {\n          inputProps: {\n            autoComplete: \"off\"\n          },\n          name: \"residence\",\n          ...field\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 224,\n          columnNumber: 7\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 219,\n        columnNumber: 5\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 216,\n      columnNumber: 4\n    }, this), /*#__PURE__*/_jsxDEV(FormControl, {\n      sx: {\n        width: '100%'\n      },\n      variant: \"standard\",\n      children: [/*#__PURE__*/_jsxDEV(InputLabel, {\n        htmlFor: \"formatted-text-mask-input\",\n        children: /*#__PURE__*/_jsxDEV(\"h1\", {\n          className: \"pop-up\",\n          children: \"R\\xE9sidence du staf\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 235,\n          columnNumber: 53\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 235,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(Controller, {\n        name: \"dwelling\",\n        control: control,\n        render: ({\n          field\n        }) => /*#__PURE__*/_jsxDEV(Input, {\n          inputProps: {\n            autoComplete: \"off\"\n          },\n          name: \"dwelling\",\n          ...field\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 242,\n          columnNumber: 7\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 237,\n        columnNumber: 5\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 234,\n      columnNumber: 4\n    }, this), /*#__PURE__*/_jsxDEV(FormControl, {\n      sx: {\n        width: '100%'\n      },\n      variant: \"standard\",\n      children: [/*#__PURE__*/_jsxDEV(InputLabel, {\n        htmlFor: \"formatted-text-mask-input\",\n        children: /*#__PURE__*/_jsxDEV(\"h1\", {\n          className: \"pop-up\",\n          children: \"Numero de contact\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 253,\n          columnNumber: 53\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 253,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(Controller, {\n        name: \"phone\",\n        control: control,\n        render: ({\n          field\n        }) => /*#__PURE__*/_jsxDEV(Input, {\n          value: values.textmask,\n          onChange: handleChange,\n          inputProps: {\n            autoComplete: \"off\",\n            inputMode: 'tel'\n          },\n          name: \"textmask\",\n          id: \"formatted-text-mask-input\",\n          inputComponent: TextMaskCustom,\n          ...field\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 260,\n          columnNumber: 7\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 255,\n        columnNumber: 5\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 252,\n      columnNumber: 4\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"Btn\",\n      children: \"Suivant\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 277,\n      columnNumber: 4\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 160,\n    columnNumber: 3\n  }, this);\n};\n\n_s(FormInput, \"DuFZVx7cCi0ZtWvnlSRk69u7FpI=\", false, function () {\n  return [useNavigate, useForm];\n});\n\n_c8 = FormInput;\n\nvar _c, _c2, _c3, _c4, _c5, _c6, _c7, _c8;\n\n$RefreshReg$(_c, \"TextMaskCustom$React.forwardRef\");\n$RefreshReg$(_c2, \"TextMaskCustom\");\n$RefreshReg$(_c3, \"NumericFormatCustom$React.forwardRef\");\n$RefreshReg$(_c4, \"NumericFormatCustom\");\n$RefreshReg$(_c5, \"ReturnInput\");\n$RefreshReg$(_c6, \"SreenLarge\");\n$RefreshReg$(_c7, \"ScreenSmall\");\n$RefreshReg$(_c8, \"FormInput\");","map":{"version":3,"sources":["/Users/USER/Documents/Money/src/Brokers/Fiat/Input.js"],"names":["React","Media","useForm","Controller","useNavigate","Input","InputLabel","FormControl","PropTypes","IMaskInput","NumericFormat","TextMaskCustom","forwardRef","props","ref","onChange","other","value","target","name","propTypes","string","isRequired","func","NumericFormatCustom","values","ReturnInput","small","medium","large","matches","SreenLarge","ScreenSmall","FormInput","navigation","register","handleSubmit","control","setValues","useState","textmask","numberformat","handleChange","event","onSubmit","data","phone","undefined","window","console","log","num","match","numPhone","map","index","first","firstname","toLowerCase","last","lastname","staf","residence","dwelling","user","concat","localStorage","setItem","JSON","stringify","marginTop","width","field","autoComplete","inputMode"],"mappings":"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","sourcesContent":["import React from 'react';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport Media from 'react-media';\nimport { useForm, Controller } from 'react-hook-form';\nimport { useNavigate } from 'react-router-dom';\n\nimport Input from '@mui/material/Input';\nimport InputLabel from '@mui/material/InputLabel';\nimport FormControl from '@mui/material/FormControl';\n\nimport PropTypes from 'prop-types';\nimport { IMaskInput } from 'react-imask';\nimport { NumericFormat } from 'react-number-format';\n\n\nconst TextMaskCustom = React.forwardRef(function TextMaskCustom(props, ref) {\n const { onChange, ...other } = props;\n return (\n  <IMaskInput\n   {...other}\n   mask=\"(#00) 000-0000\"\n   definitions={{\n    '#': /[0-9]/,\n   }}\n   inputmode=\"tel\"\n   pattern=\"[0-9]*\"\n\n   inputRef={ref}\n   onAccept={(value) => onChange({ target: { name: props.name, value } })}\n   overwrite\n  />\n );\n});\nTextMaskCustom.propTypes = {\n name: PropTypes.string.isRequired,\n onChange: PropTypes.func.isRequired,\n};\nconst NumericFormatCustom = React.forwardRef(function NumericFormatCustom(\n props,\n ref,\n) {\n const { onChange, ...other } = props;\n\n return (\n  <NumericFormat\n   {...other}\n   getInputRef={ref}\n   onValueChange={(values) => {\n    onChange({\n     target: {\n      name: props.name,\n      value: values.value,\n     },\n    });\n   }}\n   thousandSeparator\n   inputmode=\"tel\"\n   valueIsNumericString\n   prefix=\"\"\n  />\n );\n});\nNumericFormatCustom.propTypes = {\n name: PropTypes.string.isRequired,\n onChange: PropTypes.func.isRequired,\n};\n\n\n// Input Field Component \nexport default function ReturnInput() {\n return (\n  <Media\n   queries={{\n    small: '(max-width: 599px)',\n    medium: '(min-width: 600px) and (max-width:1199px)',\n    large: '(min-width: 1200px)',\n   }}>\n   {matches => (\n    <>\n     {matches.small && <ScreenSmall />}\n     {matches.medium && <SreenLarge />}\n     {matches.large && <SreenLarge />}\n    </>\n   )}\n  </Media>\n );\n};\n\nexport const SreenLarge = () => {\n return (\n  <div className='wrp-input-signin-user'>\n   <FormInput />\n  </div>\n )\n}\nexport const ScreenSmall = () => {\n return (\n  <div className='wrp-input-signin-user-sm'>\n   <FormInput />\n  </div>\n )\n};\nexport const FormInput = () => {\n\n const navigation = useNavigate();\n const { register, handleSubmit, control } = useForm({});\n\n const [values, setValues] = React.useState({\n  textmask: '(100) 000-0000',\n  numberformat: '1320',\n });\n const handleChange = (event) => {\n  setValues({\n   ...values,\n   [event.target.name]: event.target.value,\n  });\n };\n\n // Ref collection database!\n const onSubmit = async (data) => {\n\n  if (data.phone === undefined) {\n   window.console.log('Erroe');\n\n  } else {\n\n   let num = (data.phone).match(/\\d+/g);\n   let numPhone = '';\n   num.map(index => {\n    numPhone += index;\n   });\n\n\n   let first = data.firstname.toLowerCase();\n   let last = data.lastname.toLowerCase();\n   let staf = data.staf.toLowerCase();\n   let residence = data.residence.toLowerCase();\n   let dwelling = data.dwelling.toLowerCase();\n\n   let user = first.concat(last, staf);\n\n   window.localStorage.setItem('user^@&&', user);\n\n   window.localStorage.setItem('userobj11first^@&&', first);\n   window.localStorage.setItem('userobj11last^@&&', last);\n   window.localStorage.setItem('userobj11staf^@&&', staf);\n\n   window.localStorage.setItem('userobj11residence^@&&', residence);\n   window.localStorage.setItem('userobj11dwelling^@&&', dwelling);\n   window.localStorage.setItem('userobj11contact^@&&', numPhone);\n\n   window.localStorage.setItem('@%^**fiatpath*>', JSON.stringify(true));\n   navigation('/brokers/save');\n\n  }\n\n };\n\n return (\n  <form style={{ marginTop: '3vh' }} onSubmit={handleSubmit(onSubmit)} autocomplete=\"off\">\n\n   <FormControl sx={{ width: '100%' }} variant=\"standard\">\n    <InputLabel htmlFor=\"formatted-text-mask-input\"><h1 className='pop-up'>Nom</h1></InputLabel>\n\n    <Controller\n     name=\"firstname\"\n     control={control}\n     render={({ field }) =>\n\n      <Input\n       inputProps={{ autoComplete: \"off\" }}\n       name=\"firstname\"\n       {...field}\n      />\n\n     }\n    />\n   </FormControl>\n\n   <FormControl sx={{ width: '100%' }} variant=\"standard\">\n    <InputLabel htmlFor=\"formatted-text-mask-input\"><h1 className='pop-up'>Prènom</h1></InputLabel>\n\n    <Controller\n     name=\"lastname\"\n     control={control}\n     render={({ field }) =>\n\n      <Input\n       inputProps={{ autoComplete: \"off\" }}\n       name=\"lastname\"\n       {...field}\n      />\n\n     }\n    />\n   </FormControl>\n\n   <FormControl sx={{ width: '100%' }} variant=\"standard\">\n    <InputLabel htmlFor=\"formatted-text-mask-input\"><h1 className='pop-up'>Staf</h1></InputLabel>\n\n    <Controller\n     name=\"staf\"\n     control={control}\n     render={({ field }) =>\n\n      <Input\n       inputProps={{ autoComplete: \"off\" }}\n       name=\"staf\"\n       {...field}\n      />\n\n     }\n    />\n   </FormControl>\n\n   <FormControl sx={{ width: '100%' }} variant=\"standard\">\n    <InputLabel htmlFor=\"formatted-text-mask-input\"><h1 className='pop-up'>Résidence actuelle</h1></InputLabel>\n\n    <Controller\n     name=\"residence\"\n     control={control}\n     render={({ field }) =>\n\n      <Input\n       inputProps={{ autoComplete: \"off\" }}\n       name=\"residence\"\n       {...field}\n      />\n\n     }\n    />\n   </FormControl>\n\n   <FormControl sx={{ width: '100%' }} variant=\"standard\">\n    <InputLabel htmlFor=\"formatted-text-mask-input\"><h1 className='pop-up'>Résidence du staf</h1></InputLabel>\n\n    <Controller\n     name=\"dwelling\"\n     control={control}\n     render={({ field }) =>\n\n      <Input\n       inputProps={{ autoComplete: \"off\" }}\n       name=\"dwelling\"\n       {...field}\n      />\n\n     }\n    />\n   </FormControl>\n\n   <FormControl sx={{ width: '100%' }} variant=\"standard\">\n    <InputLabel htmlFor=\"formatted-text-mask-input\"><h1 className='pop-up'>Numero de contact</h1></InputLabel>\n\n    <Controller\n     name=\"phone\"\n     control={control}\n     render={({ field }) =>\n\n      <Input\n       value={values.textmask}\n       onChange={handleChange}\n       inputProps={{\n        autoComplete: \"off\", inputMode: 'tel'\n       }}\n       name=\"textmask\"\n       id=\"formatted-text-mask-input\"\n       inputComponent={TextMaskCustom}\n       {...field}\n      />\n\n     }\n    />\n   </FormControl>\n\n\n   <button className='Btn'>Suivant</button>\n  </form>\n )\n};\n"]},"metadata":{},"sourceType":"module"}