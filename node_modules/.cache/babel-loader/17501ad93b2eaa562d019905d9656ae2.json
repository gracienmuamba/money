{"ast":null,"code":"var _jsxFileName = \"/Users/USER/Desktop/Agent/src/Send/Blocked/Input.js\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport './Input.css';\nimport { useForm } from 'react-hook-form';\nimport Media from 'react-media';\nimport { useNavigate } from 'react-router-dom';\nimport { phoneX } from '../Phone/Input';\nimport { doc, updateDoc, increment, onSnapshot, arrayUnion } from \"firebase/firestore\";\nimport { db } from '../../firebase';\nimport Button from '@mui/material/Button';\nimport Dialog from '@mui/material/Dialog';\nimport DialogActions from '@mui/material/DialogActions';\nimport DialogContent from '@mui/material/DialogContent';\nimport DialogTitle from '@mui/material/DialogTitle';\nimport DialogContentText from '@mui/material/DialogContentText';\nimport moment from 'moment';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport let nowField = moment().date();\nexport let now = moment().date();\nexport let prixSuccess = 0;\nvar regular = /[a-z]+/; // withdraw input\n\nexport default function ReturnBlockedWithdrAw() {\n  return /*#__PURE__*/_jsxDEV(Media, {\n    queries: {\n      small: '(max-width: 599px)',\n      medium: '(min-width: 600px) and (max-width:1199px)',\n      large: '(min-width: 1200px)'\n    },\n    children: matches => /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [matches.small && /*#__PURE__*/_jsxDEV(ScreenSmall, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 24\n      }, this), matches.medium && /*#__PURE__*/_jsxDEV(ScreenLarge, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 25\n      }, this), matches.large && /*#__PURE__*/_jsxDEV(ScreenLarge, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 24\n      }, this)]\n    }, void 0, true)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 30,\n    columnNumber: 3\n  }, this);\n}\n_c = ReturnBlockedWithdrAw;\n;\nexport const ScreenLarge = () => /*#__PURE__*/_jsxDEV(\"div\", {\n  className: \"wrp-withdraw-input\",\n  children: /*#__PURE__*/_jsxDEV(FormInput, {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 49,\n    columnNumber: 3\n  }, this)\n}, void 0, false, {\n  fileName: _jsxFileName,\n  lineNumber: 48,\n  columnNumber: 2\n}, this);\n_c2 = ScreenLarge;\nexport const ScreenSmall = () => /*#__PURE__*/_jsxDEV(\"div\", {\n  className: \"wrp-withdraw-input-sm\",\n  children: /*#__PURE__*/_jsxDEV(FormInput, {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 54,\n    columnNumber: 3\n  }, this)\n}, void 0, false, {\n  fileName: _jsxFileName,\n  lineNumber: 53,\n  columnNumber: 2\n}, this);\n_c3 = ScreenSmall;\nexport const FormInput = () => {\n  _s();\n\n  const navigation = useNavigate();\n  const {\n    handleSubmit,\n    register,\n    reset\n  } = useForm();\n  const [getPin, setGetPin] = React.useState('');\n  const [solde, setSolde] = React.useState(null); //  order notebook\n\n  const [tableEmCdf, setTableEmCdf] = React.useState();\n  const [tableAgentCdf, setTableAgentCdf] = React.useState();\n  const [open, setOpen] = React.useState(false);\n  const [phone, setPhone] = React.useState(false);\n  const [fullWidth, setFullWidth] = React.useState(true);\n  const [maxWidth, setMaxWidth] = React.useState('sm');\n\n  const handleClickOpen = () => {\n    setOpen(true);\n  };\n\n  const handleClose = () => {\n    setOpen(false);\n  };\n\n  React.useEffect(async () => {\n    try {\n      await onSnapshot(doc(db, \"muunganomoney\", \"money\"), doc => {\n        setGetPin(doc.data().code);\n        setSolde(doc.data().cdf);\n      }); // await onSnapshot(doc(db, \"agent\", phoneX), (doc) => {\n      //  setFirst(doc.data().firstname);\n      //  setLast(doc.data().lastname);\n      // });\n\n      await onSnapshot(doc(db, \"muungano\", \"emoney\"), doc => {\n        setTableEmCdf(doc.data().cdf);\n      });\n      await onSnapshot(doc(db, \"agents\", \"emoney\"), doc => {\n        setTableAgentCdf(doc.data().cdf);\n      });\n    } catch {\n      window.console.log('erreur disponible');\n    }\n  }, []);\n\n  const onSubmit = async data => {\n    const phoneItem = window.localStorage.getItem('PHONE_SEND');\n    const sendEMCdf = window.localStorage.getItem('SEND_EM_CDF');\n    const sendEMAgentCdf = window.localStorage.getItem('SEND_EM_AGENT_CDF');\n    const sendUser = window.localStorage.getItem('SEND_USER');\n\n    if (getPin == data.code) {\n      if (data.count > 500000 || data.count <= 0 || solde < 1000 || data.count > solde || regular.test(data.count)) {\n        setOpen(true);\n        reset();\n      } else {\n        // let User = first + ' ' + last;\n        sendAgentMoney(Math.floor(Number(data.count)), JSON.parse(phoneItem));\n        updateAdmin(Number(data.count), Math.floor(Number(data.count)), JSON.parse(sendUser));\n        let arraySendEMCdf = JSON.parse(sendEMCdf);\n        let arraySendEMAgentCdf = JSON.parse(sendEMAgentCdf);\n        let soldeEmCDF = Number(Math.max(...arraySendEMCdf)) + Number(data.count);\n        let soldeAgentCDF = Number(Math.max(...arraySendEMAgentCdf)) + Number(data.count);\n        let arrayEmCdf = arraySendEMCdf;\n        let arrayAgentCdf = arraySendEMAgentCdf;\n\n        for (let i = now; i <= 31; i++) {\n          arrayEmCdf[i] = soldeEmCDF;\n          arrayAgentCdf[i] = soldeAgentCDF;\n        }\n\n        prixSuccess = data.count;\n        updateMuungano(arrayEmCdf, arrayAgentCdf);\n        window.localStorage.setItem('PHONE_SEND', JSON.stringify(null));\n        window.localStorage.setItem('SEND_EM_CDF', JSON.stringify(null));\n        window.localStorage.setItem('SEND_EM_AGENT_CDF', JSON.stringify(null));\n        navigation('/send/success');\n      }\n    } else {\n      prixSuccess = data.count;\n      setOpen(true);\n      reset();\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    onSubmit: handleSubmit(onSubmit),\n    children: [/*#__PURE__*/_jsxDEV(\"input\", {\n      type: 'text',\n      ...register('count', {\n        required: true\n      }),\n      name: \"count\",\n      placeholder: 'CDF'\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 163,\n      columnNumber: 4\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: 'password',\n      ...register('code', {\n        required: true\n      }),\n      name: \"code\",\n      placeholder: '••••••'\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 168,\n      columnNumber: 4\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"Btn\",\n      children: \"Envoyer\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 174,\n      columnNumber: 4\n    }, this), /*#__PURE__*/_jsxDEV(Dialog, {\n      fullWidth: fullWidth,\n      maxWidth: maxWidth,\n      open: open,\n      onClose: handleClose,\n      children: [/*#__PURE__*/_jsxDEV(DialogTitle, {\n        children: \"MuunganoMoney\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 182,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(DialogContent, {\n        children: /*#__PURE__*/_jsxDEV(DialogContentText, {\n          children: \"Le solde entre n'est pas valide, veuillez v\\xE9rifier, Ou code d'acc\\xE8s erron\\xE9\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 185,\n          columnNumber: 6\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 183,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(DialogActions, {\n        children: /*#__PURE__*/_jsxDEV(Button, {\n          onClick: handleClose,\n          children: \"Fermer\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 191,\n          columnNumber: 6\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 190,\n        columnNumber: 5\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 176,\n      columnNumber: 4\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 161,\n    columnNumber: 3\n  }, this);\n};\n\n_s(FormInput, \"jcxeE1qf9ucGTRgzEQo2KuDwB0w=\", false, function () {\n  return [useNavigate, useForm];\n});\n\n_c4 = FormInput;\n\nasync function sendAgentMoney(solde, numPhone) {\n  let time = moment().format('LLL');\n  let send = {\n    date: time,\n    solde: `${solde} CDF`,\n    phone: numPhone,\n    user: 'muunganomoney',\n    type: 'réussi'\n  };\n  const washingtonRef = doc(db, \"agent\", numPhone); // Set the \"capital\" field of the city 'DC'\n\n  await updateDoc(washingtonRef, {\n    thriftcdf: increment(solde),\n    money: solde,\n    unite: 'CDF',\n    user: 'muunganomoney',\n    delay: moment().format(),\n    swap: arrayUnion(send)\n  });\n}\n\n;\n\nasync function updateAdmin(solde, money, User) {\n  const washingtonRef = doc(db, \"muunganomoney\", \"money\"); // Set the \"capital\" field of the city 'DC'\n\n  await updateDoc(washingtonRef, {\n    cdf: increment(-solde),\n    money: money,\n    thrift: solde,\n    unite: 'CDF',\n    user: User,\n    delay: moment().format()\n  });\n  const emoneyRef = doc(db, \"muunganomoney\", \"e-money\");\n  await updateDoc(emoneyRef, {\n    cdf: solde\n  });\n  const moneyRef = doc(db, \"muunganomoney\", \"money\");\n  await updateDoc(moneyRef, {\n    cdf: increment(-solde)\n  });\n}\n\n;\n\nasync function updateMuungano(emCdf, agentCdf) {\n  const emoneyRef = doc(db, \"muungano\", \"emoney\");\n  await updateDoc(emoneyRef, {\n    cdf: emCdf\n  });\n  const agentsemoneyRef = doc(db, \"agents\", \"emoney\");\n  await updateDoc(agentsemoneyRef, {\n    cdf: agentCdf\n  });\n}\n\n;\n\nvar _c, _c2, _c3, _c4;\n\n$RefreshReg$(_c, \"ReturnBlockedWithdrAw\");\n$RefreshReg$(_c2, \"ScreenLarge\");\n$RefreshReg$(_c3, \"ScreenSmall\");\n$RefreshReg$(_c4, \"FormInput\");","map":{"version":3,"sources":["/Users/USER/Desktop/Agent/src/Send/Blocked/Input.js"],"names":["React","useForm","Media","useNavigate","phoneX","doc","updateDoc","increment","onSnapshot","arrayUnion","db","Button","Dialog","DialogActions","DialogContent","DialogTitle","DialogContentText","moment","nowField","date","now","prixSuccess","regular","ReturnBlockedWithdrAw","small","medium","large","matches","ScreenLarge","ScreenSmall","FormInput","navigation","handleSubmit","register","reset","getPin","setGetPin","useState","solde","setSolde","tableEmCdf","setTableEmCdf","tableAgentCdf","setTableAgentCdf","open","setOpen","phone","setPhone","fullWidth","setFullWidth","maxWidth","setMaxWidth","handleClickOpen","handleClose","useEffect","data","code","cdf","window","console","log","onSubmit","phoneItem","localStorage","getItem","sendEMCdf","sendEMAgentCdf","sendUser","count","test","sendAgentMoney","Math","floor","Number","JSON","parse","updateAdmin","arraySendEMCdf","arraySendEMAgentCdf","soldeEmCDF","max","soldeAgentCDF","arrayEmCdf","arrayAgentCdf","i","updateMuungano","setItem","stringify","required","numPhone","time","format","send","user","type","washingtonRef","thriftcdf","money","unite","delay","swap","User","thrift","emoneyRef","moneyRef","emCdf","agentCdf","agentsemoneyRef"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAO,aAAP;AACA,SAASC,OAAT,QAAwB,iBAAxB;AACA,OAAOC,KAAP,MAAkB,aAAlB;AACA,SAASC,WAAT,QAA4B,kBAA5B;AACA,SAASC,MAAT,QAAuB,gBAAvB;AACA,SAASC,GAAT,EAAcC,SAAd,EAAyBC,SAAzB,EAAoCC,UAApC,EAAgDC,UAAhD,QAAkE,oBAAlE;AAEA,SAASC,EAAT,QAAmB,gBAAnB;AAEA,OAAOC,MAAP,MAAmB,sBAAnB;AACA,OAAOC,MAAP,MAAmB,sBAAnB;AACA,OAAOC,aAAP,MAA0B,6BAA1B;AACA,OAAOC,aAAP,MAA0B,6BAA1B;AACA,OAAOC,WAAP,MAAwB,2BAAxB;AACA,OAAOC,iBAAP,MAA8B,iCAA9B;AACA,OAAOC,MAAP,MAAmB,QAAnB;;;AAGA,OAAO,IAAIC,QAAQ,GAAGD,MAAM,GAAGE,IAAT,EAAf;AACP,OAAO,IAAIC,GAAG,GAAGH,MAAM,GAAGE,IAAT,EAAV;AACP,OAAO,IAAIE,WAAW,GAAG,CAAlB;AAEP,IAAIC,OAAO,GAAG,QAAd,C,CAGA;;AACA,eAAe,SAASC,qBAAT,GAAiC;AAC/C,sBACC,QAAC,KAAD;AACC,IAAA,OAAO,EAAE;AACRC,MAAAA,KAAK,EAAE,oBADC;AAERC,MAAAA,MAAM,EAAE,2CAFA;AAGRC,MAAAA,KAAK,EAAE;AAHC,KADV;AAAA,cAMEC,OAAO,iBACP;AAAA,iBACEA,OAAO,CAACH,KAAR,iBAAiB,QAAC,WAAD;AAAA;AAAA;AAAA;AAAA,cADnB,EAEEG,OAAO,CAACF,MAAR,iBAAkB,QAAC,WAAD;AAAA;AAAA;AAAA;AAAA,cAFpB,EAGEE,OAAO,CAACD,KAAR,iBAAiB,QAAC,WAAD;AAAA;AAAA;AAAA;AAAA,cAHnB;AAAA;AAPF;AAAA;AAAA;AAAA;AAAA,UADD;AAgBA;KAjBuBH,qB;AAiBvB;AAED,OAAO,MAAMK,WAAW,GAAG,mBAC1B;AAAK,EAAA,SAAS,EAAC,oBAAf;AAAA,yBACC,QAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AADD;AAAA;AAAA;AAAA;AAAA,QADM;MAAMA,W;AAKb,OAAO,MAAMC,WAAW,GAAG,mBAC1B;AAAK,EAAA,SAAS,EAAC,uBAAf;AAAA,yBACC,QAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AADD;AAAA;AAAA;AAAA;AAAA,QADM;MAAMA,W;AAKb,OAAO,MAAMC,SAAS,GAAG,MAAM;AAAA;;AAE9B,QAAMC,UAAU,GAAG5B,WAAW,EAA9B;AACA,QAAM;AAAE6B,IAAAA,YAAF;AAAgBC,IAAAA,QAAhB;AAA0BC,IAAAA;AAA1B,MAAoCjC,OAAO,EAAjD;AAEA,QAAM,CAACkC,MAAD,EAASC,SAAT,IAAsBpC,KAAK,CAACqC,QAAN,CAAe,EAAf,CAA5B;AACA,QAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBvC,KAAK,CAACqC,QAAN,CAAe,IAAf,CAA1B,CAN8B,CAQ9B;;AACA,QAAM,CAACG,UAAD,EAAaC,aAAb,IAA8BzC,KAAK,CAACqC,QAAN,EAApC;AACA,QAAM,CAACK,aAAD,EAAgBC,gBAAhB,IAAoC3C,KAAK,CAACqC,QAAN,EAA1C;AAEA,QAAM,CAACO,IAAD,EAAOC,OAAP,IAAkB7C,KAAK,CAACqC,QAAN,CAAe,KAAf,CAAxB;AACA,QAAM,CAACS,KAAD,EAAQC,QAAR,IAAoB/C,KAAK,CAACqC,QAAN,CAAe,KAAf,CAA1B;AACA,QAAM,CAACW,SAAD,EAAYC,YAAZ,IAA4BjD,KAAK,CAACqC,QAAN,CAAe,IAAf,CAAlC;AACA,QAAM,CAACa,QAAD,EAAWC,WAAX,IAA0BnD,KAAK,CAACqC,QAAN,CAAe,IAAf,CAAhC;;AAGA,QAAMe,eAAe,GAAG,MAAM;AAC7BP,IAAAA,OAAO,CAAC,IAAD,CAAP;AACA,GAFD;;AAGA,QAAMQ,WAAW,GAAG,MAAM;AACzBR,IAAAA,OAAO,CAAC,KAAD,CAAP;AACA,GAFD;;AAGA7C,EAAAA,KAAK,CAACsD,SAAN,CAAgB,YAAY;AAE3B,QAAI;AAEH,YAAM9C,UAAU,CAACH,GAAG,CAACK,EAAD,EAAK,eAAL,EAAsB,OAAtB,CAAJ,EAAqCL,GAAD,IAAS;AAC5D+B,QAAAA,SAAS,CAAC/B,GAAG,CAACkD,IAAJ,GAAWC,IAAZ,CAAT;AACAjB,QAAAA,QAAQ,CAAClC,GAAG,CAACkD,IAAJ,GAAWE,GAAZ,CAAR;AACA,OAHe,CAAhB,CAFG,CAOH;AACA;AACA;AAEA;;AAEA,YAAMjD,UAAU,CAACH,GAAG,CAACK,EAAD,EAAK,UAAL,EAAiB,QAAjB,CAAJ,EAAiCL,GAAD,IAAS;AACxDoC,QAAAA,aAAa,CAACpC,GAAG,CAACkD,IAAJ,GAAWE,GAAZ,CAAb;AACA,OAFe,CAAhB;AAGA,YAAMjD,UAAU,CAACH,GAAG,CAACK,EAAD,EAAK,QAAL,EAAe,QAAf,CAAJ,EAA+BL,GAAD,IAAS;AACtDsC,QAAAA,gBAAgB,CAACtC,GAAG,CAACkD,IAAJ,GAAWE,GAAZ,CAAhB;AACA,OAFe,CAAhB;AAIA,KApBD,CAoBE,MAAM;AACPC,MAAAA,MAAM,CAACC,OAAP,CAAeC,GAAf,CAAmB,mBAAnB;AACA;AAED,GA1BD,EA0BG,EA1BH;;AA4BA,QAAMC,QAAQ,GAAG,MAAON,IAAP,IAAgB;AAGhC,UAAMO,SAAS,GAAGJ,MAAM,CAACK,YAAP,CAAoBC,OAApB,CAA4B,YAA5B,CAAlB;AACA,UAAMC,SAAS,GAAGP,MAAM,CAACK,YAAP,CAAoBC,OAApB,CAA4B,aAA5B,CAAlB;AACA,UAAME,cAAc,GAAGR,MAAM,CAACK,YAAP,CAAoBC,OAApB,CAA4B,mBAA5B,CAAvB;AACA,UAAMG,QAAQ,GAAGT,MAAM,CAACK,YAAP,CAAoBC,OAApB,CAA4B,WAA5B,CAAjB;;AAGA,QAAI7B,MAAM,IAAIoB,IAAI,CAACC,IAAnB,EAAyB;AACxB,UAAID,IAAI,CAACa,KAAL,GAAa,MAAb,IAAuBb,IAAI,CAACa,KAAL,IAAc,CAArC,IAA0C9B,KAAK,GAAG,IAAlD,IAA0DiB,IAAI,CAACa,KAAL,GAAa9B,KAAvE,IAAgFhB,OAAO,CAAC+C,IAAR,CAAad,IAAI,CAACa,KAAlB,CAApF,EAA8G;AAC7GvB,QAAAA,OAAO,CAAC,IAAD,CAAP;AACAX,QAAAA,KAAK;AACL,OAHD,MAGO;AAEN;AACAoC,QAAAA,cAAc,CAACC,IAAI,CAACC,KAAL,CAAWC,MAAM,CAAClB,IAAI,CAACa,KAAN,CAAjB,CAAD,EAAiCM,IAAI,CAACC,KAAL,CAAWb,SAAX,CAAjC,CAAd;AACAc,QAAAA,WAAW,CAACH,MAAM,CAAClB,IAAI,CAACa,KAAN,CAAP,EAAqBG,IAAI,CAACC,KAAL,CAAWC,MAAM,CAAClB,IAAI,CAACa,KAAN,CAAjB,CAArB,EAAqDM,IAAI,CAACC,KAAL,CAAWR,QAAX,CAArD,CAAX;AAGA,YAAIU,cAAc,GAAGH,IAAI,CAACC,KAAL,CAAWV,SAAX,CAArB;AACA,YAAIa,mBAAmB,GAAGJ,IAAI,CAACC,KAAL,CAAWT,cAAX,CAA1B;AAEA,YAAIa,UAAU,GAAGN,MAAM,CAACF,IAAI,CAACS,GAAL,CAAS,GAAGH,cAAZ,CAAD,CAAN,GAAsCJ,MAAM,CAAClB,IAAI,CAACa,KAAN,CAA7D;AACA,YAAIa,aAAa,GAAGR,MAAM,CAACF,IAAI,CAACS,GAAL,CAAS,GAAGF,mBAAZ,CAAD,CAAN,GAA2CL,MAAM,CAAClB,IAAI,CAACa,KAAN,CAArE;AAEA,YAAIc,UAAU,GAAGL,cAAjB;AACA,YAAIM,aAAa,GAAGL,mBAApB;;AAEA,aAAK,IAAIM,CAAC,GAAGhE,GAAb,EAAkBgE,CAAC,IAAI,EAAvB,EAA2BA,CAAC,EAA5B,EAAgC;AAC/BF,UAAAA,UAAU,CAACE,CAAD,CAAV,GAAgBL,UAAhB;AACAI,UAAAA,aAAa,CAACC,CAAD,CAAb,GAAmBH,aAAnB;AACA;;AAED5D,QAAAA,WAAW,GAAGkC,IAAI,CAACa,KAAnB;AAEAiB,QAAAA,cAAc,CAACH,UAAD,EAAaC,aAAb,CAAd;AACAzB,QAAAA,MAAM,CAACK,YAAP,CAAoBuB,OAApB,CAA4B,YAA5B,EAA0CZ,IAAI,CAACa,SAAL,CAAe,IAAf,CAA1C;AACA7B,QAAAA,MAAM,CAACK,YAAP,CAAoBuB,OAApB,CAA4B,aAA5B,EAA2CZ,IAAI,CAACa,SAAL,CAAe,IAAf,CAA3C;AACA7B,QAAAA,MAAM,CAACK,YAAP,CAAoBuB,OAApB,CAA4B,mBAA5B,EAAiDZ,IAAI,CAACa,SAAL,CAAe,IAAf,CAAjD;AAEAxD,QAAAA,UAAU,CAAC,eAAD,CAAV;AACA;AACD,KAlCD,MAkCO;AACNV,MAAAA,WAAW,GAAGkC,IAAI,CAACa,KAAnB;AACAvB,MAAAA,OAAO,CAAC,IAAD,CAAP;AACAX,MAAAA,KAAK;AACL;AAED,GAjDD;;AAmDA,sBACC;AAAM,IAAA,QAAQ,EAAEF,YAAY,CAAC6B,QAAD,CAA5B;AAAA,4BAEC;AAAO,MAAA,IAAI,EAAE,MAAb;AAAA,SACK5B,QAAQ,CAAC,OAAD,EAAU;AAAEuD,QAAAA,QAAQ,EAAE;AAAZ,OAAV,CADb;AAEC,MAAA,IAAI,EAAC,OAFN;AAGC,MAAA,WAAW,EAAE;AAHd;AAAA;AAAA;AAAA;AAAA,YAFD,eAOC;AAAO,MAAA,IAAI,EAAE,UAAb;AAAA,SACKvD,QAAQ,CAAC,MAAD,EAAS;AAAEuD,QAAAA,QAAQ,EAAE;AAAZ,OAAT,CADb;AAEC,MAAA,IAAI,EAAC,MAFN;AAGC,MAAA,WAAW,EAAE;AAHd;AAAA;AAAA;AAAA;AAAA,YAPD,eAaC;AAAQ,MAAA,SAAS,EAAC,KAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAbD,eAeC,QAAC,MAAD;AACC,MAAA,SAAS,EAAExC,SADZ;AAEC,MAAA,QAAQ,EAAEE,QAFX;AAGC,MAAA,IAAI,EAAEN,IAHP;AAIC,MAAA,OAAO,EAAES,WAJV;AAAA,8BAMC,QAAC,WAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAND,eAOC,QAAC,aAAD;AAAA,+BAEC,QAAC,iBAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAFD;AAAA;AAAA;AAAA;AAAA,cAPD,eAcC,QAAC,aAAD;AAAA,+BACC,QAAC,MAAD;AAAQ,UAAA,OAAO,EAAEA,WAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADD;AAAA;AAAA;AAAA;AAAA,cAdD;AAAA;AAAA;AAAA;AAAA;AAAA,YAfD;AAAA;AAAA;AAAA;AAAA;AAAA,UADD;AAqCA,CA5IM;;GAAMvB,S;UAEO3B,W,EACuBF,O;;;MAH9B6B,S;;AA+Ib,eAAewC,cAAf,CAA8BhC,KAA9B,EAAqCmD,QAArC,EAAgD;AAE/C,MAAIC,IAAI,GAAGzE,MAAM,GAAG0E,MAAT,CAAgB,KAAhB,CAAX;AACA,MAAIC,IAAI,GAAG;AAAEzE,IAAAA,IAAI,EAAEuE,IAAR;AAAcpD,IAAAA,KAAK,EAAG,GAAEA,KAAM,MAA9B;AAAqCQ,IAAAA,KAAK,EAAE2C,QAA5C;AAAsDI,IAAAA,IAAI,EAAE,eAA5D;AAA6EC,IAAAA,IAAI,EAAE;AAAnF,GAAX;AAEA,QAAMC,aAAa,GAAG1F,GAAG,CAACK,EAAD,EAAK,OAAL,EAAc+E,QAAd,CAAzB,CAL+C,CAM/C;;AACA,QAAMnF,SAAS,CAACyF,aAAD,EAAgB;AAC9BC,IAAAA,SAAS,EAAEzF,SAAS,CAAC+B,KAAD,CADU;AAE9B2D,IAAAA,KAAK,EAAE3D,KAFuB;AAG9B4D,IAAAA,KAAK,EAAE,KAHuB;AAI9BL,IAAAA,IAAI,EAAE,eAJwB;AAK9BM,IAAAA,KAAK,EAAElF,MAAM,GAAG0E,MAAT,EALuB;AAM9BS,IAAAA,IAAI,EAAE3F,UAAU,CAACmF,IAAD;AANc,GAAhB,CAAf;AASA;;AAAA;;AACD,eAAehB,WAAf,CAA2BtC,KAA3B,EAAkC2D,KAAlC,EAAyCI,IAAzC,EAA+C;AAE9C,QAAMN,aAAa,GAAG1F,GAAG,CAACK,EAAD,EAAK,eAAL,EAAsB,OAAtB,CAAzB,CAF8C,CAG9C;;AACA,QAAMJ,SAAS,CAACyF,aAAD,EAAgB;AAC9BtC,IAAAA,GAAG,EAAElD,SAAS,CAAC,CAAE+B,KAAH,CADgB;AAE9B2D,IAAAA,KAAK,EAAEA,KAFuB;AAG9BK,IAAAA,MAAM,EAAEhE,KAHsB;AAI9B4D,IAAAA,KAAK,EAAE,KAJuB;AAK9BL,IAAAA,IAAI,EAAEQ,IALwB;AAM9BF,IAAAA,KAAK,EAAElF,MAAM,GAAG0E,MAAT;AANuB,GAAhB,CAAf;AASA,QAAMY,SAAS,GAAGlG,GAAG,CAACK,EAAD,EAAK,eAAL,EAAsB,SAAtB,CAArB;AACA,QAAMJ,SAAS,CAACiG,SAAD,EAAY;AAC1B9C,IAAAA,GAAG,EAAEnB;AADqB,GAAZ,CAAf;AAIA,QAAMkE,QAAQ,GAAGnG,GAAG,CAACK,EAAD,EAAK,eAAL,EAAsB,OAAtB,CAApB;AACA,QAAMJ,SAAS,CAACkG,QAAD,EAAW;AACzB/C,IAAAA,GAAG,EAAElD,SAAS,CAAC,CAAE+B,KAAH;AADW,GAAX,CAAf;AAIA;;AAAA;;AACD,eAAe+C,cAAf,CAA8BoB,KAA9B,EAAqCC,QAArC,EAA+C;AAE9C,QAAMH,SAAS,GAAGlG,GAAG,CAACK,EAAD,EAAK,UAAL,EAAiB,QAAjB,CAArB;AACA,QAAMJ,SAAS,CAACiG,SAAD,EAAY;AAC1B9C,IAAAA,GAAG,EAAEgD;AADqB,GAAZ,CAAf;AAIA,QAAME,eAAe,GAAGtG,GAAG,CAACK,EAAD,EAAK,QAAL,EAAe,QAAf,CAA3B;AACA,QAAMJ,SAAS,CAACqG,eAAD,EAAkB;AAChClD,IAAAA,GAAG,EAAEiD;AAD2B,GAAlB,CAAf;AAIA;;AAAA","sourcesContent":["import React from 'react';\nimport './Input.css';\nimport { useForm } from 'react-hook-form';\nimport Media from 'react-media';\nimport { useNavigate } from 'react-router-dom';\nimport { phoneX } from '../Phone/Input';\nimport { doc, updateDoc, increment, onSnapshot, arrayUnion } from \"firebase/firestore\";\n\nimport { db } from '../../firebase';\n\nimport Button from '@mui/material/Button';\nimport Dialog from '@mui/material/Dialog';\nimport DialogActions from '@mui/material/DialogActions';\nimport DialogContent from '@mui/material/DialogContent';\nimport DialogTitle from '@mui/material/DialogTitle';\nimport DialogContentText from '@mui/material/DialogContentText';\nimport moment from 'moment';\n\n\nexport let nowField = moment().date();\nexport let now = moment().date();\nexport let prixSuccess = 0;\n\nvar regular = /[a-z]+/;\n\n\n// withdraw input\nexport default function ReturnBlockedWithdrAw() {\n return (\n  <Media\n   queries={{\n    small: '(max-width: 599px)',\n    medium: '(min-width: 600px) and (max-width:1199px)',\n    large: '(min-width: 1200px)',\n   }}>\n   {matches => (\n    <>\n     {matches.small && <ScreenSmall />}\n     {matches.medium && <ScreenLarge />}\n     {matches.large && <ScreenLarge />}\n    </>\n   )}\n  </Media>\n );\n};\n\nexport const ScreenLarge = () => (\n <div className='wrp-withdraw-input'>\n  <FormInput />\n </div>\n);\nexport const ScreenSmall = () => (\n <div className='wrp-withdraw-input-sm'>\n  <FormInput />\n </div>\n);\nexport const FormInput = () => {\n\n const navigation = useNavigate();\n const { handleSubmit, register, reset } = useForm();\n\n const [getPin, setGetPin] = React.useState('');\n const [solde, setSolde] = React.useState(null);\n\n //  order notebook\n const [tableEmCdf, setTableEmCdf] = React.useState();\n const [tableAgentCdf, setTableAgentCdf] = React.useState();\n\n const [open, setOpen] = React.useState(false);\n const [phone, setPhone] = React.useState(false);\n const [fullWidth, setFullWidth] = React.useState(true);\n const [maxWidth, setMaxWidth] = React.useState('sm');\n\n\n const handleClickOpen = () => {\n  setOpen(true);\n };\n const handleClose = () => {\n  setOpen(false);\n };\n React.useEffect(async () => {\n\n  try {\n\n   await onSnapshot(doc(db, \"muunganomoney\", \"money\"), (doc) => {\n    setGetPin(doc.data().code);\n    setSolde(doc.data().cdf);\n   });\n\n   // await onSnapshot(doc(db, \"agent\", phoneX), (doc) => {\n   //  setFirst(doc.data().firstname);\n   //  setLast(doc.data().lastname);\n\n   // });\n\n   await onSnapshot(doc(db, \"muungano\", \"emoney\"), (doc) => {\n    setTableEmCdf(doc.data().cdf);\n   });\n   await onSnapshot(doc(db, \"agents\", \"emoney\"), (doc) => {\n    setTableAgentCdf(doc.data().cdf);\n   });\n\n  } catch {\n   window.console.log('erreur disponible');\n  }\n\n }, [])\n\n const onSubmit = async (data) => {\n\n\n  const phoneItem = window.localStorage.getItem('PHONE_SEND');\n  const sendEMCdf = window.localStorage.getItem('SEND_EM_CDF');\n  const sendEMAgentCdf = window.localStorage.getItem('SEND_EM_AGENT_CDF');\n  const sendUser = window.localStorage.getItem('SEND_USER');\n\n\n  if (getPin == data.code) {\n   if (data.count > 500000 || data.count <= 0 || solde < 1000 || data.count > solde || regular.test(data.count)) {\n    setOpen(true);\n    reset();\n   } else {\n\n    // let User = first + ' ' + last;\n    sendAgentMoney(Math.floor(Number(data.count)), JSON.parse(phoneItem));\n    updateAdmin(Number(data.count), Math.floor(Number(data.count)), JSON.parse(sendUser));\n\n\n    let arraySendEMCdf = JSON.parse(sendEMCdf);\n    let arraySendEMAgentCdf = JSON.parse(sendEMAgentCdf);\n\n    let soldeEmCDF = Number(Math.max(...arraySendEMCdf)) + Number(data.count);\n    let soldeAgentCDF = Number(Math.max(...arraySendEMAgentCdf)) + Number(data.count);\n\n    let arrayEmCdf = arraySendEMCdf;\n    let arrayAgentCdf = arraySendEMAgentCdf;\n\n    for (let i = now; i <= 31; i++) {\n     arrayEmCdf[i] = soldeEmCDF;\n     arrayAgentCdf[i] = soldeAgentCDF;\n    }\n\n    prixSuccess = data.count;\n\n    updateMuungano(arrayEmCdf, arrayAgentCdf);\n    window.localStorage.setItem('PHONE_SEND', JSON.stringify(null));\n    window.localStorage.setItem('SEND_EM_CDF', JSON.stringify(null));\n    window.localStorage.setItem('SEND_EM_AGENT_CDF', JSON.stringify(null));\n\n    navigation('/send/success');\n   }\n  } else {\n   prixSuccess = data.count;\n   setOpen(true);\n   reset();\n  }\n\n };\n\n return (\n  <form onSubmit={handleSubmit(onSubmit)}>\n\n   <input type={'text'}\n    {...register('count', { required: true })}\n    name=\"count\"\n    placeholder={'CDF'}\n   />\n   <input type={'password'}\n    {...register('code', { required: true })}\n    name=\"code\"\n    placeholder={'••••••'}\n   />\n\n   <button className='Btn'>Envoyer</button>\n\n   <Dialog\n    fullWidth={fullWidth}\n    maxWidth={maxWidth}\n    open={open}\n    onClose={handleClose}\n   >\n    <DialogTitle>MuunganoMoney</DialogTitle>\n    <DialogContent>\n\n     <DialogContentText>\n      Le solde entre n'est pas valide, veuillez vérifier, Ou code d'accès erroné\n     </DialogContentText>\n\n    </DialogContent>\n    <DialogActions>\n     <Button onClick={handleClose}>Fermer</Button>\n    </DialogActions>\n   </Dialog>\n\n  </form>\n );\n};\n\n\nasync function sendAgentMoney(solde, numPhone,) {\n\n let time = moment().format('LLL');\n let send = { date: time, solde: `${solde} CDF`, phone: numPhone, user: 'muunganomoney', type: 'réussi' }\n\n const washingtonRef = doc(db, \"agent\", numPhone);\n // Set the \"capital\" field of the city 'DC'\n await updateDoc(washingtonRef, {\n  thriftcdf: increment(solde),\n  money: solde,\n  unite: 'CDF',\n  user: 'muunganomoney',\n  delay: moment().format(),\n  swap: arrayUnion(send)\n });\n\n};\nasync function updateAdmin(solde, money, User) {\n\n const washingtonRef = doc(db, \"muunganomoney\", \"money\");\n // Set the \"capital\" field of the city 'DC'\n await updateDoc(washingtonRef, {\n  cdf: increment(-(solde)),\n  money: money,\n  thrift: solde,\n  unite: 'CDF',\n  user: User,\n  delay: moment().format()\n });\n\n const emoneyRef = doc(db, \"muunganomoney\", \"e-money\");\n await updateDoc(emoneyRef, {\n  cdf: solde\n });\n\n const moneyRef = doc(db, \"muunganomoney\", \"money\");\n await updateDoc(moneyRef, {\n  cdf: increment(-(solde))\n });\n\n};\nasync function updateMuungano(emCdf, agentCdf) {\n\n const emoneyRef = doc(db, \"muungano\", \"emoney\");\n await updateDoc(emoneyRef, {\n  cdf: emCdf,\n });\n\n const agentsemoneyRef = doc(db, \"agents\", \"emoney\");\n await updateDoc(agentsemoneyRef, {\n  cdf: agentCdf,\n });\n\n};"]},"metadata":{},"sourceType":"module"}