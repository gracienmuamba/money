{"ast":null,"code":"var _jsxFileName = \"/Users/USER/Desktop/MuunganoMoney/src/Current/Prix.js\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport './Prix.css';\nimport Media from 'react-media';\nimport { Fc, Usd, Blocked } from '../Money';\nimport { doc, getDoc, collection, getDocs } from \"firebase/firestore\";\nimport { db } from '../firebase';\nimport { phoneX } from '../Sign/Input'; // REturn view Prix available\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport default function REturnPriX() {\n  return /*#__PURE__*/_jsxDEV(Media, {\n    queries: {\n      small: '(max-width: 599px)',\n      medium: '(min-width: 600px) and (max-width:1199px)',\n      large: '(min-width: 1200px)'\n    },\n    children: matches => /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [matches.small && /*#__PURE__*/_jsxDEV(ScreenSmall, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 22,\n        columnNumber: 24\n      }, this), matches.medium && /*#__PURE__*/_jsxDEV(ScreenLarge, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 23,\n        columnNumber: 25\n      }, this), matches.large && /*#__PURE__*/_jsxDEV(ScreenLarge, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 24,\n        columnNumber: 24\n      }, this)]\n    }, void 0, true)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 14,\n    columnNumber: 3\n  }, this);\n}\n_c = REturnPriX;\n;\nexport const ScreenLarge = () => /*#__PURE__*/_jsxDEV(\"div\", {\n  className: \"current-withdraw\",\n  children: /*#__PURE__*/_jsxDEV(WithdrawBalance, {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 33,\n    columnNumber: 3\n  }, this)\n}, void 0, false, {\n  fileName: _jsxFileName,\n  lineNumber: 32,\n  columnNumber: 2\n}, this);\n_c2 = ScreenLarge;\nexport const ScreenSmall = () => /*#__PURE__*/_jsxDEV(\"div\", {\n  className: \"current-withdraw-sm\",\n  children: /*#__PURE__*/_jsxDEV(WithdrawBalance, {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 38,\n    columnNumber: 3\n  }, this)\n}, void 0, false, {\n  fileName: _jsxFileName,\n  lineNumber: 37,\n  columnNumber: 2\n}, this);\n_c3 = ScreenSmall;\nexport const WithdrawBalance = () => {\n  _s();\n\n  let arrayClient = new Array();\n  const [fc, setFc] = React.useState(null);\n  const [usd, setUsd] = React.useState(null);\n  const [blocked, setBlocked] = React.useState(null);\n  React.useEffect(async () => {\n    const querySnapshot = await getDocs(collection(db, \"client\"));\n    querySnapshot.forEach(doc => {\n      arrayClient.push(doc.id);\n    });\n    const boolCollect = arrayClient.some(value => value == phoneX);\n    const docRef = doc(db, boolCollect ? \"client\" : \"agent\", phoneX);\n    const docSnap = await getDoc(docRef);\n\n    if (docSnap.exists()) {\n      setFc(docSnap.data().cdf);\n      setUsd(docSnap.data().usd);\n      setBlocked(docSnap.data().thrift);\n    }\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"p\", {\n    children: [/*#__PURE__*/_jsxDEV(\"span\", {\n      children: [usd, \"$\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 4\n    }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n      children: [fc, \"CDF\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 4\n    }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n      className: \"wrp-grey-view\",\n      children: [blocked, \"CDF\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 4\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 69,\n    columnNumber: 3\n  }, this);\n};\n\n_s(WithdrawBalance, \"siNqDJcl5odPTY3edJV5mkAlkJQ=\");\n\n_c4 = WithdrawBalance;\n\nvar _c, _c2, _c3, _c4;\n\n$RefreshReg$(_c, \"REturnPriX\");\n$RefreshReg$(_c2, \"ScreenLarge\");\n$RefreshReg$(_c3, \"ScreenSmall\");\n$RefreshReg$(_c4, \"WithdrawBalance\");","map":{"version":3,"sources":["/Users/USER/Desktop/MuunganoMoney/src/Current/Prix.js"],"names":["React","Media","Fc","Usd","Blocked","doc","getDoc","collection","getDocs","db","phoneX","REturnPriX","small","medium","large","matches","ScreenLarge","ScreenSmall","WithdrawBalance","arrayClient","Array","fc","setFc","useState","usd","setUsd","blocked","setBlocked","useEffect","querySnapshot","forEach","push","id","boolCollect","some","value","docRef","docSnap","exists","data","cdf","thrift"],"mappings":"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","sourcesContent":["\nimport React from 'react';\nimport './Prix.css';\nimport Media from 'react-media';\nimport { Fc, Usd, Blocked } from '../Money';\nimport { doc, getDoc, collection, getDocs } from \"firebase/firestore\";\nimport { db } from '../firebase';\nimport { phoneX } from '../Sign/Input';\n\n\n// REturn view Prix available\nexport default function REturnPriX() {\n return (\n  <Media\n   queries={{\n    small: '(max-width: 599px)',\n    medium: '(min-width: 600px) and (max-width:1199px)',\n    large: '(min-width: 1200px)',\n   }}>\n   {matches => (\n    <>\n     {matches.small && <ScreenSmall />}\n     {matches.medium && <ScreenLarge />}\n     {matches.large && <ScreenLarge />}\n    </>\n   )}\n  </Media>\n );\n};\n\nexport const ScreenLarge = () => (\n <div className='current-withdraw'>\n  <WithdrawBalance />\n </div>\n);\nexport const ScreenSmall = () => (\n <div className='current-withdraw-sm'>\n  <WithdrawBalance />\n </div>\n);\nexport const WithdrawBalance = () => {\n\n let arrayClient = new Array();\n const [fc, setFc] = React.useState(null);\n const [usd, setUsd] = React.useState(null);\n const [blocked, setBlocked] = React.useState(null);\n\n React.useEffect(async () => {\n\n  const querySnapshot = await getDocs(collection(db, \"client\"));\n  querySnapshot.forEach((doc) => {\n   arrayClient.push(doc.id);\n  });\n\n  const boolCollect = arrayClient.some((value) => value == phoneX);\n  const docRef = doc(db, boolCollect ? \"client\" : \"agent\", phoneX);\n  const docSnap = await getDoc(docRef);\n\n  if (docSnap.exists()) {\n\n   setFc(docSnap.data().cdf);\n   setUsd(docSnap.data().usd);\n   setBlocked(docSnap.data().thrift);\n\n  }\n }, []);\n\n return (\n  <p>\n   <span>{usd}$</span>\n   <span>{fc}CDF</span>\n   <span className='wrp-grey-view'>{blocked}CDF</span>\n  </p>\n )\n};\n"]},"metadata":{},"sourceType":"module"}