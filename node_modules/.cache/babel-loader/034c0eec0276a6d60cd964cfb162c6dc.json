{"ast":null,"code":"var _jsxFileName = \"/Users/USER/Desktop/Agent/src/Register/Phone/Input.js\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport './Input.css';\nimport Media from 'react-media';\nimport { useForm } from 'react-hook-form';\nimport { useNavigate } from 'react-router-dom';\nimport { collection, getDocs } from \"firebase/firestore\";\nimport { db } from '../../firebase'; // Firebase auth \n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport var phoneX = ''; // Input Field Component \n\nexport default function ReturnInput() {\n  return /*#__PURE__*/_jsxDEV(Media, {\n    queries: {\n      small: '(max-width: 599px)',\n      medium: '(min-width: 600px) and (max-width:1199px)',\n      large: '(min-width: 1200px)'\n    },\n    children: matches => /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [matches.small && /*#__PURE__*/_jsxDEV(ScreenSmall, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 25,\n        columnNumber: 24\n      }, this), matches.medium && /*#__PURE__*/_jsxDEV(SreenLarge, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 25\n      }, this), matches.large && /*#__PURE__*/_jsxDEV(SreenLarge, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 24\n      }, this)]\n    }, void 0, true)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 17,\n    columnNumber: 3\n  }, this);\n}\n_c = ReturnInput;\n;\nexport const SreenLarge = () => /*#__PURE__*/_jsxDEV(\"div\", {\n  className: \"wrp-input-phone-register\",\n  children: /*#__PURE__*/_jsxDEV(FormInput, {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 35,\n    columnNumber: 3\n  }, this)\n}, void 0, false, {\n  fileName: _jsxFileName,\n  lineNumber: 34,\n  columnNumber: 2\n}, this);\n_c2 = SreenLarge;\nexport const ScreenSmall = () => /*#__PURE__*/_jsxDEV(\"div\", {\n  className: \"wrp-input-phone-register-sm\",\n  children: /*#__PURE__*/_jsxDEV(FormInput, {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 41,\n    columnNumber: 3\n  }, this)\n}, void 0, false, {\n  fileName: _jsxFileName,\n  lineNumber: 40,\n  columnNumber: 2\n}, this);\n_c3 = ScreenSmall;\nexport const FormInput = () => {\n  _s();\n\n  let regular = /[a-z]+/;\n  const navigation = useNavigate();\n  const {\n    register,\n    handleSubmit,\n    reset\n  } = useForm({\n    defaultValues: {\n      phone: '+243'\n    }\n  });\n\n  const onSubmit = async data => {\n    if (data.phone.length != 13) {\n      window.alert('Numero Invalid.');\n    } else {\n      if (regular.test(data.phone)) {\n        window.alert('Verifier votre numero.');\n      } else {\n        if (verifierPhoneInWithDocs(data.phone)) {\n          phoneX = data.phone;\n          navigation('/register/signin');\n        } else {\n          window.alert('Erreur phone number exists');\n          navigation('/dash');\n        }\n      }\n    }\n\n    ;\n    reset();\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    onSubmit: handleSubmit(onSubmit),\n    children: [/*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      placeholder: \"Phone\",\n      name: \"phone\",\n      ...register('phone', {\n        required: true\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 4\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"Btn\",\n      children: \"Continue\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 4\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 76,\n    columnNumber: 3\n  }, this);\n};\n\n_s(FormInput, \"LGK4nv2gX2cLYE4YdxN86BiEBgQ=\", false, function () {\n  return [useNavigate, useForm];\n});\n\n_c4 = FormInput;\n\nasync function verifierPhoneInWithDocs(phoneX) {\n  let pushDocs = new Array();\n  const querySnapshot = await getDocs(collection(db, \"agent\"));\n  querySnapshot.forEach(doc => {\n    pushDocs.push(doc.id);\n  });\n  const isPhoneInWithDocs = pushDocs.some(value => value == phoneX);\n  return isPhoneInWithDocs;\n}\n\n;\n\nvar _c, _c2, _c3, _c4;\n\n$RefreshReg$(_c, \"ReturnInput\");\n$RefreshReg$(_c2, \"SreenLarge\");\n$RefreshReg$(_c3, \"ScreenSmall\");\n$RefreshReg$(_c4, \"FormInput\");","map":{"version":3,"sources":["/Users/USER/Desktop/Agent/src/Register/Phone/Input.js"],"names":["React","Media","useForm","useNavigate","collection","getDocs","db","phoneX","ReturnInput","small","medium","large","matches","SreenLarge","ScreenSmall","FormInput","regular","navigation","register","handleSubmit","reset","defaultValues","phone","onSubmit","data","length","window","alert","test","verifierPhoneInWithDocs","required","pushDocs","Array","querySnapshot","forEach","doc","push","id","isPhoneInWithDocs","some","value"],"mappings":"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","sourcesContent":["import React from 'react';\nimport './Input.css';\nimport Media from 'react-media';\nimport { useForm } from 'react-hook-form';\nimport { useNavigate } from 'react-router-dom';\nimport { collection, getDocs } from \"firebase/firestore\";\nimport { db } from '../../firebase';\n\n\n// Firebase auth \nexport var phoneX = '';\n\n\n// Input Field Component \nexport default function ReturnInput() {\n return (\n  <Media\n   queries={{\n    small: '(max-width: 599px)',\n    medium: '(min-width: 600px) and (max-width:1199px)',\n    large: '(min-width: 1200px)',\n   }}>\n   {matches => (\n    <>\n     {matches.small && <ScreenSmall />}\n     {matches.medium && <SreenLarge />}\n     {matches.large && <SreenLarge />}\n    </>\n   )}\n  </Media>\n );\n};\nexport const SreenLarge = () => (\n <div className='wrp-input-phone-register'>\n  <FormInput />\n\n </div>\n);\nexport const ScreenSmall = () => (\n <div className='wrp-input-phone-register-sm'>\n  <FormInput />\n </div>\n);\nexport const FormInput = () => {\n\n let regular = /[a-z]+/;\n const navigation = useNavigate();\n const { register, handleSubmit, reset } = useForm({ defaultValues: { phone: '+243' } });\n\n const onSubmit = async (data) => {\n\n  if (data.phone.length != 13) {\n   window.alert('Numero Invalid.');\n  } else {\n\n   if (regular.test(data.phone)) {\n    window.alert('Verifier votre numero.');\n   } else {\n\n    if (verifierPhoneInWithDocs(data.phone)) {\n     phoneX = data.phone;\n     navigation('/register/signin');\n\n    } else {\n     window.alert('Erreur phone number exists');\n     navigation('/dash');\n    }\n\n   }\n  };\n\n  reset();\n };\n\n return (\n  <form onSubmit={handleSubmit(onSubmit)}>\n\n   <input type='text'\n    placeholder='Phone'\n    name='phone' {...register('phone', { required: true })}\n   />\n   <button className='Btn'>Continue</button>\n  </form>\n )\n};\n\nasync function verifierPhoneInWithDocs(phoneX) {\n\n let pushDocs = new Array();\n const querySnapshot = await getDocs(collection(db, \"agent\"));\n querySnapshot.forEach((doc) => {\n  pushDocs.push(doc.id);\n });\n\n const isPhoneInWithDocs = pushDocs.some(value => value == phoneX);\n return isPhoneInWithDocs;\n};\n"]},"metadata":{},"sourceType":"module"}