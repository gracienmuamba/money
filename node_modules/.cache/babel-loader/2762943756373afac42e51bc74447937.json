{"ast":null,"code":"var _jsxFileName = \"/Users/USER/Documents/Money/src/Pret/Form/Input.js\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport Media from 'react-media';\nimport { useForm, Controller } from 'react-hook-form';\nimport { useNavigate } from 'react-router-dom';\nimport { doc, setDoc, updateDoc, increment, onSnapshot, getDocs, collection } from 'firebase/firestore';\nimport moment from 'moment';\nimport \"moment/locale/fr\";\nimport './Pieces.css';\nimport { db, storage } from '../../firebase';\nimport { ref, uploadBytes, deleteObject, getDownloadURL, uploadBytesResumable } from 'firebase/storage';\nimport { v4 } from 'uuid';\nimport IconButton from '@mui/material/IconButton';\nimport PropTypes from 'prop-types';\nimport CircularProgress from '@mui/material/CircularProgress';\nimport Typography from '@mui/material/Typography';\nimport Box from '@mui/material/Box';\nimport { green } from '@mui/material/colors';\nimport Fab from '@mui/material/Fab';\nimport CheckIcon from '@mui/icons-material/Check';\nimport SaveIcon from '@mui/icons-material/Save';\nimport Input from '@mui/material/Input';\nimport InputLabel from '@mui/material/InputLabel';\nimport FormControl from '@mui/material/FormControl';\nimport { IMaskInput } from 'react-imask';\nimport { NumericFormat } from 'react-number-format';\nimport TextField from '@mui/material/TextField';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport let nowField = moment().date();\nexport let pushDocs = new Array();\nlet pushPieces = new Array();\n\nfunction CircularProgressWithLabel(props) {\n  return /*#__PURE__*/_jsxDEV(Box, {\n    sx: {\n      position: 'relative',\n      display: 'inline-flex'\n    },\n    children: [/*#__PURE__*/_jsxDEV(CircularProgress, {\n      variant: \"determinate\",\n      ...props\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 4\n    }, this), /*#__PURE__*/_jsxDEV(Box, {\n      sx: {\n        top: 0,\n        left: 0,\n        bottom: 0,\n        right: 0,\n        position: 'absolute',\n        display: 'flex',\n        alignItems: 'center',\n        justifyContent: 'center'\n      },\n      children: /*#__PURE__*/_jsxDEV(Typography, {\n        variant: \"caption\",\n        component: \"div\",\n        color: \"text.secondary\",\n        children: `${Math.round(props.value)}%`\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 5\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 4\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 41,\n    columnNumber: 3\n  }, this);\n}\n\n_c = CircularProgressWithLabel;\nCircularProgressWithLabel.propTypes = {\n  /**\n   * The value of the progress indicator for the determinate variant.\n   * Value between 0 and 100.\n   * @default 0\n   */\n  value: PropTypes.number.isRequired\n};\nconst TextMaskCustom = /*#__PURE__*/React.forwardRef(_c2 = function TextMaskCustom(props, ref) {\n  const {\n    onChange,\n    ...other\n  } = props;\n  return /*#__PURE__*/_jsxDEV(IMaskInput, { ...other,\n    mask: \"(#00) 000-0000\",\n    definitions: {\n      '#': /[1-9]/\n    },\n    inputRef: ref,\n    onAccept: value => onChange({\n      target: {\n        name: props.name,\n        value\n      }\n    }),\n    overwrite: true\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 73,\n    columnNumber: 3\n  }, this);\n});\n_c3 = TextMaskCustom;\nTextMaskCustom.propTypes = {\n  name: PropTypes.string.isRequired,\n  onChange: PropTypes.func.isRequired\n};\nconst NumericFormatCustom = /*#__PURE__*/React.forwardRef(_c4 = function NumericFormatCustom(props, ref) {\n  const {\n    onChange,\n    ...other\n  } = props;\n  return /*#__PURE__*/_jsxDEV(NumericFormat, { ...other,\n    getInputRef: ref,\n    onValueChange: values => {\n      onChange({\n        target: {\n          name: props.name,\n          value: values.value\n        }\n      });\n    },\n    thousandSeparator: true,\n    valueIsNumericString: true,\n    prefix: \"\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 96,\n    columnNumber: 3\n  }, this);\n});\n_c5 = NumericFormatCustom;\nNumericFormatCustom.propTypes = {\n  name: PropTypes.string.isRequired,\n  onChange: PropTypes.func.isRequired\n}; // Input Field Component \n\nexport default function ReturnInput() {\n  return /*#__PURE__*/_jsxDEV(Media, {\n    queries: {\n      small: '(max-width: 599px)',\n      medium: '(min-width: 600px) and (max-width:1199px)',\n      large: '(min-width: 1200px)'\n    },\n    children: matches => /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [matches.small && /*#__PURE__*/_jsxDEV(ScreenSmall, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 130,\n        columnNumber: 24\n      }, this), matches.medium && /*#__PURE__*/_jsxDEV(SreenLarge, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 131,\n        columnNumber: 25\n      }, this), matches.large && /*#__PURE__*/_jsxDEV(SreenLarge, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 132,\n        columnNumber: 24\n      }, this)]\n    }, void 0, true)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 122,\n    columnNumber: 3\n  }, this);\n}\n_c6 = ReturnInput;\n;\nexport const SreenLarge = () => {\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"wrp-input-pieces\",\n    children: /*#__PURE__*/_jsxDEV(FormInput, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 142,\n      columnNumber: 4\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 141,\n    columnNumber: 3\n  }, this);\n};\n_c7 = SreenLarge;\nexport const ScreenSmall = () => {\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"wrp-input-pieces\",\n    children: /*#__PURE__*/_jsxDEV(FormInput, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 149,\n      columnNumber: 4\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 148,\n    columnNumber: 3\n  }, this);\n};\n_c8 = ScreenSmall;\nexport const FormInput = () => {\n  _s();\n\n  const [imageUpload, setImageUpload] = React.useState(null);\n  const [url, setUrl] = React.useState(null);\n  const [profil, setProfil] = React.useState(null);\n  const [progress, setProgress] = React.useState(0);\n  const [viewBtn, setViewBtn] = React.useState(false);\n  const [exten, setExten] = React.useState(null);\n  const [loading, setLoading] = React.useState(false);\n  const [success, setSuccess] = React.useState(false);\n  const timer = React.useRef();\n  const buttonSx = { ...(success && {\n      bgcolor: green[500],\n      '&:hover': {\n        bgcolor: green[700]\n      }\n    })\n  };\n  const [values, setValues] = React.useState({\n    textmask: '(100) 000-0000',\n    numberformat: '1320'\n  });\n  React.useEffect(async () => {\n    const querySnapshot = await getDocs(collection(db, \"client\"));\n    querySnapshot.forEach(doc => {\n      // doc.data() is never undefined for query doc snapshots\n      pushPieces.push(doc.id);\n    }); // const toCollection = pushPieces.includes(JSON.parse(window.localStorage.getItem('USER')));\n\n    const unsub = onSnapshot(doc(db, \"client\", JSON.parse(window.localStorage.getItem('USER'))), doc => {\n      setProfil(doc.data().pretprofile);\n      setExten(doc.data().pretexten);\n    });\n    return () => {\n      clearTimeout(timer.current);\n    };\n  }, []);\n\n  const handleButtonClick = () => {\n    if (!loading) {\n      setSuccess(false);\n      setLoading(true);\n      timer.current = window.setTimeout(() => {\n        setSuccess(true);\n        setLoading(false);\n      }, 2000);\n    }\n  };\n\n  const uploadImage = async () => {\n    if (imageUpload == null) return;\n    const imgRef = imageUpload.name + v4();\n    const imageRef = ref(storage, `pret/${imgRef}`);\n    uploadBytes(imageRef, imageUpload).then(() => {\n      getDownloadURL(imageRef, imageUpload).then(url => {\n        const uploadTask = uploadBytesResumable(imageRef, imageUpload);\n        uploadTask.on('state_changed', snapshot => {\n          const prog = Math.round(snapshot.bytesTransferred / snapshot.totalBytes * 100);\n          setProgress(prog);\n        }, err => window.console.log(err), () => {\n          getDownloadURL(uploadTask.snapshot.ref).then(url => console.log(url));\n        });\n        setUrl(url);\n        const collect = pushPieces.includes(JSON.parse(window.localStorage.getItem('USER')));\n        const washingtonRef = doc(db, collect ? \"client\" : \"agent\", JSON.parse(window.localStorage.getItem('USER'))); // Set the \"capital\" field of the city 'DC'\n\n        updateDoc(washingtonRef, {\n          pretprofile: url,\n          pretexten: imgRef\n        });\n      }).catch(error => {\n        window.console.log(error.message);\n      });\n      setImageUpload(null);\n    }).catch(error => {\n      window.console.log(error.message);\n    });\n    setViewBtn(false);\n    window.console.log(imgRef);\n\n    if (exten != '') {\n      // Create a reference to the file to delete\n      const desertRef = ref(storage, `pret/${exten}`); // Delete the file\n\n      deleteObject(desertRef).then(() => {\n        // File deleted successfully\n        window.console.log('Success remove image');\n      }).catch(error => {\n        window.console.log('Error Reomve'); // Uh-oh, an error occurred!\n      });\n    }\n  };\n\n  const [open, setOpen] = React.useState(false);\n  const [fullWidth, setFullWidth] = React.useState(true);\n  const [maxWidth, setMaxWidth] = React.useState('sm');\n  const navigation = useNavigate();\n  const {\n    register,\n    handleSubmit,\n    control\n  } = useForm({});\n\n  const handleClose = () => {\n    setOpen(false);\n  };\n\n  const handleChange = event => {\n    setValues({ ...values,\n      [event.target.name]: event.target.value\n    });\n  }; // Ref collection database!\n\n\n  const onSubmit = async data => {\n    window.localStorage.setItem('@!pret&*access*^^', JSON.stringify(false));\n    window.localStorage.setItem('^^&&register__pret', JSON.stringify(false));\n    let money = {\n      usd: Number(data.digit),\n      cdf: 0,\n      pretusd: Number(data.digit),\n      pretcdf: 0,\n      date: moment().format(),\n      arr: []\n    };\n    const clone = { ...money,\n      ...data\n    };\n    documentPret(clone);\n    updateRegister();\n    percentageClient();\n    window.setTimeout(() => {\n      navigation('/pret/send');\n    }, 500);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    autocomplete: \"off\",\n    onSubmit: handleSubmit(onSubmit),\n    children: [/*#__PURE__*/_jsxDEV(FormControl, {\n      sx: {\n        width: '100%'\n      },\n      variant: \"standard\",\n      children: [/*#__PURE__*/_jsxDEV(InputLabel, {\n        htmlFor: \"formatted-text-mask-input\",\n        children: /*#__PURE__*/_jsxDEV(\"h1\", {\n          className: \"pop-up\",\n          children: \"Nom\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 318,\n          columnNumber: 53\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 318,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(Controller, {\n        name: \"name\",\n        control: control,\n        render: ({\n          field\n        }) => /*#__PURE__*/_jsxDEV(Input, {\n          inputProps: {\n            autoComplete: \"off\"\n          },\n          name: \"name\",\n          ...field\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 325,\n          columnNumber: 7\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 320,\n        columnNumber: 5\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 317,\n      columnNumber: 4\n    }, this), /*#__PURE__*/_jsxDEV(FormControl, {\n      sx: {\n        width: '100%'\n      },\n      variant: \"standard\",\n      children: [/*#__PURE__*/_jsxDEV(InputLabel, {\n        htmlFor: \"formatted-text-mask-input\",\n        children: /*#__PURE__*/_jsxDEV(\"h1\", {\n          className: \"pop-up\",\n          children: \"Adresse domiciliaire actuelle\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 335,\n          columnNumber: 53\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 335,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(Controller, {\n        name: \"address\",\n        control: control,\n        render: ({\n          field\n        }) => /*#__PURE__*/_jsxDEV(Input, {\n          inputProps: {\n            autoComplete: \"off\"\n          },\n          name: \"address\",\n          ...field\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 342,\n          columnNumber: 7\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 337,\n        columnNumber: 5\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 334,\n      columnNumber: 4\n    }, this), /*#__PURE__*/_jsxDEV(FormControl, {\n      sx: {\n        width: '100%'\n      },\n      variant: \"standard\",\n      children: [/*#__PURE__*/_jsxDEV(InputLabel, {\n        htmlFor: \"formatted-text-mask-input\",\n        children: /*#__PURE__*/_jsxDEV(\"h1\", {\n          className: \"pop-up\",\n          children: \"Sp\\xE9cifiez le projet\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 352,\n          columnNumber: 53\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 352,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(Controller, {\n        name: \"specify\",\n        control: control,\n        render: ({\n          field\n        }) => /*#__PURE__*/_jsxDEV(Input, {\n          inputProps: {\n            autoComplete: \"off\"\n          },\n          name: \"specify\",\n          ...field\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 359,\n          columnNumber: 7\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 354,\n        columnNumber: 5\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 351,\n      columnNumber: 4\n    }, this), /*#__PURE__*/_jsxDEV(Controller, {\n      name: \"costs\",\n      defaultValue: \"\",\n      control: control,\n      render: ({\n        field\n      }) => /*#__PURE__*/_jsxDEV(TextField, {\n        label: /*#__PURE__*/_jsxDEV(\"h2\", {\n          className: \"pop-up\",\n          children: \"Le cout de mon Projet est estim\\xE9 \\xE0 USD\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 377,\n          columnNumber: 14\n        }, this),\n        value: values.numberformat,\n        onChange: handleChange,\n        inputProps: {\n          autoComplete: \"off\",\n          inputMode: 'decimal'\n        },\n        ...field,\n        name: \"costs\",\n        placeholder: \"0\",\n        id: \"formatted-numberformat-input\",\n        InputProps: {\n          inputComponent: NumericFormatCustom\n        },\n        variant: \"standard\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 376,\n        columnNumber: 6\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 370,\n      columnNumber: 4\n    }, this), /*#__PURE__*/_jsxDEV(Controller, {\n      name: \"revenu\",\n      defaultValue: \"\",\n      control: control,\n      render: ({\n        field\n      }) => /*#__PURE__*/_jsxDEV(TextField, {\n        label: /*#__PURE__*/_jsxDEV(\"h2\", {\n          className: \"pop-up\",\n          children: \"Mon revenu mensuel estim\\xE9 \\xE0 USD\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 405,\n          columnNumber: 14\n        }, this),\n        value: values.numberformat,\n        onChange: handleChange,\n        inputProps: {\n          autoComplete: \"off\",\n          inputMode: 'decimal'\n        },\n        ...field,\n        name: \"revenu\",\n        placeholder: \"0\",\n        id: \"formatted-numberformat-input\",\n        InputProps: {\n          inputComponent: NumericFormatCustom\n        },\n        variant: \"standard\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 404,\n        columnNumber: 6\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 398,\n      columnNumber: 4\n    }, this), /*#__PURE__*/_jsxDEV(Controller, {\n      name: \"apport\",\n      defaultValue: \"\",\n      control: control,\n      render: ({\n        field\n      }) => /*#__PURE__*/_jsxDEV(TextField, {\n        label: /*#__PURE__*/_jsxDEV(\"h2\", {\n          className: \"pop-up\",\n          children: \"Un Apport estim\\xE9 \\xE0 USD\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 434,\n          columnNumber: 14\n        }, this),\n        value: values.numberformat,\n        onChange: handleChange,\n        inputProps: {\n          autoComplete: \"off\",\n          inputMode: 'decimal'\n        },\n        ...field,\n        name: \"apport\",\n        placeholder: \"0\",\n        id: \"formatted-numberformat-input\",\n        InputProps: {\n          inputComponent: NumericFormatCustom\n        },\n        variant: \"standard\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 433,\n        columnNumber: 6\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 427,\n      columnNumber: 4\n    }, this), /*#__PURE__*/_jsxDEV(FormControl, {\n      sx: {\n        width: '100%'\n      },\n      variant: \"standard\",\n      children: [/*#__PURE__*/_jsxDEV(InputLabel, {\n        htmlFor: \"formatted-text-mask-input\",\n        children: /*#__PURE__*/_jsxDEV(\"h1\", {\n          className: \"pop-up\",\n          children: \"Montant demander en lettre\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 457,\n          columnNumber: 53\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 457,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(Controller, {\n        name: \"letter\",\n        control: control,\n        render: ({\n          field\n        }) => /*#__PURE__*/_jsxDEV(Input, {\n          inputProps: {\n            autoComplete: \"off\"\n          },\n          name: \"letter\",\n          ...field\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 464,\n          columnNumber: 7\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 459,\n        columnNumber: 5\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 456,\n      columnNumber: 4\n    }, this), /*#__PURE__*/_jsxDEV(Controller, {\n      name: \"digit\",\n      defaultValue: \"\",\n      control: control,\n      render: ({\n        field\n      }) => /*#__PURE__*/_jsxDEV(TextField, {\n        label: /*#__PURE__*/_jsxDEV(\"h2\", {\n          className: \"pop-up\",\n          children: \"Montant demander en chiffre\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 481,\n          columnNumber: 14\n        }, this),\n        value: values.numberformat,\n        onChange: handleChange,\n        inputProps: {\n          autoComplete: \"off\",\n          inputMode: 'decimal'\n        },\n        ...field,\n        name: \"digit\",\n        placeholder: \"0\",\n        id: \"formatted-numberformat-input\",\n        InputProps: {\n          inputComponent: NumericFormatCustom\n        },\n        variant: \"standard\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 480,\n        columnNumber: 6\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 474,\n      columnNumber: 4\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"import-pieces\",\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Importer pi\\xE8ces justificatives\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 505,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"wrp-pieces-avatar-user\",\n        children: [/*#__PURE__*/_jsxDEV(IconButton, {\n          color: \"primary\",\n          \"aria-label\": \"upload picture\",\n          component: \"label\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"profile-user\",\n            children: [/*#__PURE__*/_jsxDEV(\"img\", {\n              src: '/img/uploadpret.png',\n              alt: 'upload file'\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 512,\n              columnNumber: 8\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              hidden: true,\n              type: \"file\",\n              onChange: event => {\n                setImageUpload(event.target.files[0]);\n                setViewBtn(true);\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 513,\n              columnNumber: 8\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 510,\n            columnNumber: 7\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 509,\n          columnNumber: 6\n        }, this), /*#__PURE__*/_jsxDEV(CircularProgressWithLabel, {\n          value: progress\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 524,\n          columnNumber: 6\n        }, this), viewBtn && /*#__PURE__*/_jsxDEV(\"div\", {\n          onClick: uploadImage,\n          children: /*#__PURE__*/_jsxDEV(Box, {\n            sx: {\n              display: 'flex',\n              alignItems: 'center'\n            },\n            children: /*#__PURE__*/_jsxDEV(Box, {\n              sx: {\n                position: 'relative'\n              },\n              children: [/*#__PURE__*/_jsxDEV(Fab, {\n                \"aria-label\": \"save\",\n                color: \"primary\",\n                sx: buttonSx,\n                onClick: handleButtonClick,\n                children: success ? /*#__PURE__*/_jsxDEV(CheckIcon, {}, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 538,\n                  columnNumber: 22\n                }, this) : /*#__PURE__*/_jsxDEV(SaveIcon, {}, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 538,\n                  columnNumber: 38\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 531,\n                columnNumber: 10\n              }, this), loading && /*#__PURE__*/_jsxDEV(CircularProgress, {\n                size: 45,\n                sx: {\n                  color: green[500],\n                  position: 'absolute',\n                  top: -6,\n                  left: -6,\n                  zIndex: 1\n                }\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 542,\n                columnNumber: 11\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 529,\n              columnNumber: 9\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 527,\n            columnNumber: 8\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 526,\n          columnNumber: 7\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 507,\n        columnNumber: 5\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 504,\n      columnNumber: 4\n    }, this), progress > 95 && /*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"Btn\",\n      children: \"Envoyer Formulaire\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 565,\n      columnNumber: 5\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 315,\n    columnNumber: 3\n  }, this);\n}; // Add Document Pret\n\n_s(FormInput, \"+RHYM7qToi4mFTD+ZnKtOHMvlLI=\", false, function () {\n  return [useNavigate, useForm];\n});\n\n_c9 = FormInput;\nexport async function documentPret(data) {\n  await setDoc(doc(db, \"pret\", JSON.parse(window.localStorage.getItem('USER'))), data);\n}\n; // Update docs register\n\nexport async function updateRegister() {\n  const washingtonRef = doc(db, \"client\", JSON.parse(window.localStorage.getItem('USER'))); // Set the \"capital\" field of the city 'DC'\n\n  await updateDoc(washingtonRef, {\n    pretregister: true\n  });\n} // Update docs register\n\nexport async function percentageClient() {\n  const cityRef = doc(db, 'client', JSON.parse(window.localStorage.getItem('USER')));\n  setDoc(cityRef, {\n    percentage: 0.6\n  }, {\n    merge: true\n  });\n}\n;\n\nvar _c, _c2, _c3, _c4, _c5, _c6, _c7, _c8, _c9;\n\n$RefreshReg$(_c, \"CircularProgressWithLabel\");\n$RefreshReg$(_c2, \"TextMaskCustom$React.forwardRef\");\n$RefreshReg$(_c3, \"TextMaskCustom\");\n$RefreshReg$(_c4, \"NumericFormatCustom$React.forwardRef\");\n$RefreshReg$(_c5, \"NumericFormatCustom\");\n$RefreshReg$(_c6, \"ReturnInput\");\n$RefreshReg$(_c7, \"SreenLarge\");\n$RefreshReg$(_c8, \"ScreenSmall\");\n$RefreshReg$(_c9, \"FormInput\");","map":{"version":3,"sources":["/Users/USER/Documents/Money/src/Pret/Form/Input.js"],"names":["React","Media","useForm","Controller","useNavigate","doc","setDoc","updateDoc","increment","onSnapshot","getDocs","collection","moment","db","storage","ref","uploadBytes","deleteObject","getDownloadURL","uploadBytesResumable","v4","IconButton","PropTypes","CircularProgress","Typography","Box","green","Fab","CheckIcon","SaveIcon","Input","InputLabel","FormControl","IMaskInput","NumericFormat","TextField","nowField","date","pushDocs","Array","pushPieces","CircularProgressWithLabel","props","position","display","top","left","bottom","right","alignItems","justifyContent","Math","round","value","propTypes","number","isRequired","TextMaskCustom","forwardRef","onChange","other","target","name","string","func","NumericFormatCustom","values","ReturnInput","small","medium","large","matches","SreenLarge","ScreenSmall","FormInput","imageUpload","setImageUpload","useState","url","setUrl","profil","setProfil","progress","setProgress","viewBtn","setViewBtn","exten","setExten","loading","setLoading","success","setSuccess","timer","useRef","buttonSx","bgcolor","setValues","textmask","numberformat","useEffect","querySnapshot","forEach","push","id","unsub","JSON","parse","window","localStorage","getItem","data","pretprofile","pretexten","clearTimeout","current","handleButtonClick","setTimeout","uploadImage","imgRef","imageRef","then","uploadTask","on","snapshot","prog","bytesTransferred","totalBytes","err","console","log","collect","includes","washingtonRef","catch","error","message","desertRef","open","setOpen","fullWidth","setFullWidth","maxWidth","setMaxWidth","navigation","register","handleSubmit","control","handleClose","handleChange","event","onSubmit","setItem","stringify","money","usd","Number","digit","cdf","pretusd","pretcdf","format","arr","clone","documentPret","updateRegister","percentageClient","width","field","autoComplete","inputMode","inputComponent","files","color","zIndex","pretregister","cityRef","percentage","merge"],"mappings":"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","sourcesContent":["import React from 'react';\nimport Media from 'react-media';\nimport { useForm, Controller } from 'react-hook-form';\nimport { useNavigate } from 'react-router-dom';\nimport { doc, setDoc, updateDoc, increment, onSnapshot, getDocs, collection } from 'firebase/firestore';\nimport moment from 'moment';\nimport \"moment/locale/fr\";\n\nimport './Pieces.css';\nimport { db, storage } from '../../firebase';\nimport { ref, uploadBytes, deleteObject, getDownloadURL, uploadBytesResumable } from 'firebase/storage';\nimport { v4 } from 'uuid';\nimport IconButton from '@mui/material/IconButton';\n\nimport PropTypes from 'prop-types';\nimport CircularProgress from '@mui/material/CircularProgress';\nimport Typography from '@mui/material/Typography';\n\nimport Box from '@mui/material/Box';\nimport { green } from '@mui/material/colors';\nimport Fab from '@mui/material/Fab';\nimport CheckIcon from '@mui/icons-material/Check';\nimport SaveIcon from '@mui/icons-material/Save';\n\nimport Input from '@mui/material/Input';\nimport InputLabel from '@mui/material/InputLabel';\nimport FormControl from '@mui/material/FormControl';\n\nimport { IMaskInput } from 'react-imask';\nimport { NumericFormat } from 'react-number-format';\nimport TextField from '@mui/material/TextField';\n\n\nexport let nowField = moment().date();\nexport let pushDocs = new Array();\nlet pushPieces = new Array();\n\n\nfunction CircularProgressWithLabel(props) {\n return (\n  <Box sx={{ position: 'relative', display: 'inline-flex' }}>\n   <CircularProgress variant=\"determinate\" {...props} />\n   <Box\n    sx={{\n     top: 0,\n     left: 0,\n     bottom: 0,\n     right: 0,\n     position: 'absolute',\n     display: 'flex',\n     alignItems: 'center',\n     justifyContent: 'center',\n    }}\n   >\n    <Typography variant=\"caption\" component=\"div\" color=\"text.secondary\">\n     {`${Math.round(props.value)}%`}\n    </Typography>\n   </Box>\n  </Box>\n );\n}\nCircularProgressWithLabel.propTypes = {\n /**\n  * The value of the progress indicator for the determinate variant.\n  * Value between 0 and 100.\n  * @default 0\n  */\n value: PropTypes.number.isRequired,\n};\nconst TextMaskCustom = React.forwardRef(function TextMaskCustom(props, ref) {\n const { onChange, ...other } = props;\n return (\n  <IMaskInput\n   {...other}\n   mask=\"(#00) 000-0000\"\n   definitions={{\n    '#': /[1-9]/,\n   }}\n   inputRef={ref}\n   onAccept={(value) => onChange({ target: { name: props.name, value } })}\n   overwrite\n  />\n );\n});\nTextMaskCustom.propTypes = {\n name: PropTypes.string.isRequired,\n onChange: PropTypes.func.isRequired,\n};\nconst NumericFormatCustom = React.forwardRef(function NumericFormatCustom(\n props,\n ref,\n) {\n const { onChange, ...other } = props;\n\n return (\n  <NumericFormat\n   {...other}\n   getInputRef={ref}\n   onValueChange={(values) => {\n    onChange({\n     target: {\n      name: props.name,\n      value: values.value,\n     },\n    });\n   }}\n   thousandSeparator\n   valueIsNumericString\n   prefix=\"\"\n  />\n );\n});\nNumericFormatCustom.propTypes = {\n name: PropTypes.string.isRequired,\n onChange: PropTypes.func.isRequired,\n};\n\n\n// Input Field Component \nexport default function ReturnInput() {\n return (\n  <Media\n   queries={{\n    small: '(max-width: 599px)',\n    medium: '(min-width: 600px) and (max-width:1199px)',\n    large: '(min-width: 1200px)',\n   }}>\n   {matches => (\n    <>\n     {matches.small && <ScreenSmall />}\n     {matches.medium && <SreenLarge />}\n     {matches.large && <SreenLarge />}\n    </>\n   )}\n  </Media>\n );\n};\n\nexport const SreenLarge = () => {\n return (\n  <div className='wrp-input-pieces'>\n   <FormInput />\n  </div>\n )\n}\nexport const ScreenSmall = () => {\n return (\n  <div className='wrp-input-pieces'>\n   <FormInput />\n  </div>\n )\n};\nexport const FormInput = () => {\n\n const [imageUpload, setImageUpload] = React.useState(null);\n const [url, setUrl] = React.useState(null);\n const [profil, setProfil] = React.useState(null);\n const [progress, setProgress] = React.useState(0);\n const [viewBtn, setViewBtn] = React.useState(false);\n const [exten, setExten] = React.useState(null);\n\n const [loading, setLoading] = React.useState(false);\n const [success, setSuccess] = React.useState(false);\n const timer = React.useRef();\n\n const buttonSx = {\n  ...(success && {\n   bgcolor: green[500],\n   '&:hover': {\n    bgcolor: green[700],\n   },\n  }),\n };\n\n const [values, setValues] = React.useState({\n  textmask: '(100) 000-0000',\n  numberformat: '1320',\n });\n\n\n React.useEffect(async () => {\n\n  const querySnapshot = await getDocs(collection(db, \"client\"));\n  querySnapshot.forEach((doc) => {\n   // doc.data() is never undefined for query doc snapshots\n   pushPieces.push(doc.id);\n  });\n\n  // const toCollection = pushPieces.includes(JSON.parse(window.localStorage.getItem('USER')));\n\n  const unsub = onSnapshot(doc(db, \"client\", JSON.parse(window.localStorage.getItem('USER'))), (doc) => {\n   setProfil(doc.data().pretprofile);\n   setExten(doc.data().pretexten);\n  });\n\n  return () => {\n   clearTimeout(timer.current);\n  };\n\n }, []);\n const handleButtonClick = () => {\n  if (!loading) {\n   setSuccess(false);\n   setLoading(true);\n   timer.current = window.setTimeout(() => {\n    setSuccess(true);\n    setLoading(false);\n   }, 2000);\n  }\n };\n const uploadImage = async () => {\n\n  if (imageUpload == null)\n   return;\n\n  const imgRef = imageUpload.name + v4();\n  const imageRef = ref(storage, `pret/${imgRef}`);\n\n\n  uploadBytes(imageRef, imageUpload).then(() => {\n   getDownloadURL(imageRef, imageUpload).then((url) => {\n\n    const uploadTask = uploadBytesResumable(imageRef, imageUpload)\n    uploadTask.on('state_changed', (snapshot) => {\n     const prog = Math.round((snapshot.bytesTransferred / snapshot.totalBytes) * 100);\n     setProgress(prog);\n    },\n     (err) => window.console.log(err), () => {\n      getDownloadURL(uploadTask.snapshot.ref).then((url) => console.log(url))\n     })\n\n    setUrl(url);\n    const collect = pushPieces.includes(JSON.parse(window.localStorage.getItem('USER')));\n    const washingtonRef = doc(db, collect ? \"client\" : \"agent\", JSON.parse(window.localStorage.getItem('USER')));\n    // Set the \"capital\" field of the city 'DC'\n    updateDoc(washingtonRef, {\n     pretprofile: url,\n     pretexten: imgRef\n    });\n\n   }).catch(error => { window.console.log(error.message) })\n   setImageUpload(null);\n\n  }).catch(error => { window.console.log(error.message) });\n  setViewBtn(false);\n\n  window.console.log(imgRef);\n  if (exten != '') {\n   // Create a reference to the file to delete\n   const desertRef = ref(storage, `pret/${exten}`);\n   // Delete the file\n   deleteObject(desertRef).then(() => {\n    // File deleted successfully\n    window.console.log('Success remove image');\n\n   }).catch((error) => {\n    window.console.log('Error Reomve');\n    // Uh-oh, an error occurred!\n   });\n  }\n\n }\n\n const [open, setOpen] = React.useState(false);\n const [fullWidth, setFullWidth] = React.useState(true);\n const [maxWidth, setMaxWidth] = React.useState('sm');\n\n const navigation = useNavigate();\n const { register, handleSubmit, control } = useForm({});\n\n const handleClose = () => {\n  setOpen(false);\n };\n const handleChange = (event) => {\n  setValues({\n   ...values,\n   [event.target.name]: event.target.value,\n  });\n };\n\n\n // Ref collection database!\n const onSubmit = async (data) => {\n\n  window.localStorage.setItem('@!pret&*access*^^', JSON.stringify(false));\n  window.localStorage.setItem('^^&&register__pret', JSON.stringify(false));\n\n  let money = {\n\n   usd: Number(data.digit),\n   cdf: 0,\n   pretusd: Number(data.digit),\n   pretcdf: 0,\n   date: moment().format(),\n   arr: []\n\n  };\n  const clone = {\n   ...money,\n   ...data\n\n  }\n\n  documentPret(clone);\n  updateRegister();\n  percentageClient();\n\n  window.setTimeout(() => {\n   navigation('/pret/send');\n  }, 500);\n\n };\n\n return (\n  <form autocomplete=\"off\" onSubmit={handleSubmit(onSubmit)}>\n\n   <FormControl sx={{ width: '100%' }} variant=\"standard\">\n    <InputLabel htmlFor=\"formatted-text-mask-input\"><h1 className='pop-up'>Nom</h1></InputLabel>\n\n    <Controller\n     name=\"name\"\n     control={control}\n     render={({ field }) =>\n\n      <Input\n       inputProps={{ autoComplete: \"off\" }}\n       name=\"name\"\n       {...field}\n      />\n\n     }\n    />\n   </FormControl>\n   <FormControl sx={{ width: '100%' }} variant=\"standard\">\n    <InputLabel htmlFor=\"formatted-text-mask-input\"><h1 className='pop-up'>Adresse domiciliaire actuelle</h1></InputLabel>\n\n    <Controller\n     name=\"address\"\n     control={control}\n     render={({ field }) =>\n\n      <Input\n       inputProps={{ autoComplete: \"off\" }}\n       name=\"address\"\n       {...field}\n      />\n\n     }\n    />\n   </FormControl>\n   <FormControl sx={{ width: '100%' }} variant=\"standard\">\n    <InputLabel htmlFor=\"formatted-text-mask-input\"><h1 className='pop-up'>Spécifiez le projet</h1></InputLabel>\n\n    <Controller\n     name=\"specify\"\n     control={control}\n     render={({ field }) =>\n\n      <Input\n       inputProps={{ autoComplete: \"off\" }}\n       name=\"specify\"\n       {...field}\n      />\n\n     }\n    />\n   </FormControl>\n\n\n   <Controller\n    name=\"costs\"\n    defaultValue=''\n    control={control}\n    render={({ field }) =>\n\n     <TextField\n      label={<h2 className='pop-up'>Le cout de mon Projet est estimé à USD</h2>}\n      value={values.numberformat}\n      onChange={handleChange}\n\n      inputProps={{\n       autoComplete: \"off\", inputMode: 'decimal'\n      }}\n\n      {...field}\n      name=\"costs\"\n      placeholder=\"0\"\n      id=\"formatted-numberformat-input\"\n      InputProps={{\n       inputComponent: NumericFormatCustom,\n      }}\n\n      variant=\"standard\"\n     />\n\n    }\n   />\n   <Controller\n    name=\"revenu\"\n    defaultValue=''\n    control={control}\n    render={({ field }) =>\n\n     <TextField\n      label={<h2 className='pop-up'>Mon revenu mensuel estimé à USD</h2>}\n      value={values.numberformat}\n      onChange={handleChange}\n\n      inputProps={{\n       autoComplete: \"off\", inputMode: 'decimal'\n      }}\n\n      {...field}\n      name=\"revenu\"\n      placeholder=\"0\"\n      id=\"formatted-numberformat-input\"\n      InputProps={{\n       inputComponent: NumericFormatCustom,\n      }}\n\n      variant=\"standard\"\n     />\n\n    }\n   />\n\n   <Controller\n    name=\"apport\"\n    defaultValue=''\n    control={control}\n    render={({ field }) =>\n\n     <TextField\n      label={<h2 className='pop-up'>Un Apport estimé à USD</h2>}\n      value={values.numberformat}\n      onChange={handleChange}\n\n      inputProps={{\n       autoComplete: \"off\", inputMode: 'decimal'\n      }}\n\n      {...field}\n      name=\"apport\"\n      placeholder=\"0\"\n      id=\"formatted-numberformat-input\"\n      InputProps={{\n       inputComponent: NumericFormatCustom,\n      }}\n\n      variant=\"standard\"\n     />\n\n    }\n   />\n\n   <FormControl sx={{ width: '100%' }} variant=\"standard\">\n    <InputLabel htmlFor=\"formatted-text-mask-input\"><h1 className='pop-up'>Montant demander en lettre</h1></InputLabel>\n\n    <Controller\n     name=\"letter\"\n     control={control}\n     render={({ field }) =>\n\n      <Input\n       inputProps={{ autoComplete: \"off\" }}\n       name=\"letter\"\n       {...field}\n      />\n\n     }\n    />\n   </FormControl>\n\n   <Controller\n    name=\"digit\"\n    defaultValue=''\n    control={control}\n    render={({ field }) =>\n\n     <TextField\n      label={<h2 className='pop-up'>Montant demander en chiffre</h2>}\n      value={values.numberformat}\n      onChange={handleChange}\n\n      inputProps={{\n       autoComplete: \"off\", inputMode: 'decimal'\n      }}\n\n      {...field}\n      name=\"digit\"\n      placeholder=\"0\"\n      id=\"formatted-numberformat-input\"\n      InputProps={{\n       inputComponent: NumericFormatCustom,\n      }}\n\n      variant=\"standard\"\n     />\n\n    }\n   />\n\n\n   <div className='import-pieces'>\n    <p>Importer pièces justificatives</p>\n\n    <div className='wrp-pieces-avatar-user'>\n\n     <IconButton color=\"primary\" aria-label=\"upload picture\" component=\"label\">\n      <div className='profile-user'>\n\n       <img src={'/img/uploadpret.png'} alt={'upload file'} />\n       <input\n        hidden\n        type=\"file\"\n        onChange={(event) => {\n         setImageUpload(event.target.files[0]);\n         setViewBtn(true);\n        }}\n       />\n      </div>\n     </IconButton>\n\n     <CircularProgressWithLabel value={progress} />\n     {viewBtn &&\n      <div onClick={uploadImage}>\n       <Box sx={{ display: 'flex', alignItems: 'center' }}>\n\n        <Box sx={{ position: 'relative' }}>\n\n         <Fab\n\n          aria-label=\"save\"\n          color=\"primary\"\n          sx={buttonSx}\n          onClick={handleButtonClick}\n         >\n          {success ? <CheckIcon /> : <SaveIcon />}\n         </Fab>\n\n         {loading && (\n          <CircularProgress\n           size={45}\n           sx={{\n            color: green[500],\n            position: 'absolute',\n            top: -6,\n            left: -6,\n            zIndex: 1,\n           }}\n          />\n         )}\n        </Box>\n\n       </Box>\n\n      </div>\n     }\n\n\n    </div>\n   </div>\n\n   {progress > 95 &&\n    <button className='Btn'>Envoyer Formulaire</button>\n   }\n\n  </form>\n )\n};\n\n// Add Document Pret\nexport async function documentPret(data) {\n await setDoc(doc(db, \"pret\", JSON.parse(window.localStorage.getItem('USER'))), data);\n};\n// Update docs register\nexport async function updateRegister() {\n\n const washingtonRef = doc(db, \"client\", JSON.parse(window.localStorage.getItem('USER')));\n // Set the \"capital\" field of the city 'DC'\n await updateDoc(washingtonRef, {\n  pretregister: true\n });\n\n}\n// Update docs register\nexport async function percentageClient() {\n\n const cityRef = doc(db, 'client', JSON.parse(window.localStorage.getItem('USER')));\n setDoc(cityRef, { percentage: 0.6 }, { merge: true });\n\n};\n\n\n"]},"metadata":{},"sourceType":"module"}