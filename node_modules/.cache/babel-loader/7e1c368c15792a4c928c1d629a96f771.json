{"ast":null,"code":"var _jsxFileName = \"/Users/USER/Desktop/Agent/src/Send/UsdSuccess/Times.js\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport './Times.css';\nimport Media from 'react-media';\nimport { doc, getDoc } from \"firebase/firestore\";\nimport { db } from '../../firebase';\nimport { phoneX } from '../Phone/Input';\nimport moment from 'moment'; // Times Component \n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport default function RetuRnTime() {\n  return /*#__PURE__*/_jsxDEV(Media, {\n    queries: {\n      small: '(max-width: 599px)',\n      medium: '(min-width: 600px) and (max-width:1199px)',\n      large: '(min-width: 1200px)'\n    },\n    children: matches => /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [matches.small && /*#__PURE__*/_jsxDEV(ScreenSmall, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 22,\n        columnNumber: 24\n      }, this), matches.medium && /*#__PURE__*/_jsxDEV(ScreenLarge, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 23,\n        columnNumber: 25\n      }, this), matches.large && /*#__PURE__*/_jsxDEV(ScreenLarge, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 24,\n        columnNumber: 24\n      }, this)]\n    }, void 0, true)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 14,\n    columnNumber: 3\n  }, this);\n}\n_c = RetuRnTime;\n;\nexport const ScreenLarge = () => /*#__PURE__*/_jsxDEV(\"div\", {\n  className: \"wrp-time-success\",\n  children: /*#__PURE__*/_jsxDEV(ViewText, {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 34,\n    columnNumber: 3\n  }, this)\n}, void 0, false, {\n  fileName: _jsxFileName,\n  lineNumber: 33,\n  columnNumber: 2\n}, this);\n_c2 = ScreenLarge;\nexport const ScreenSmall = () => /*#__PURE__*/_jsxDEV(\"div\", {\n  className: \"wrp-time-success-sm\",\n  children: /*#__PURE__*/_jsxDEV(ViewText, {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 39,\n    columnNumber: 3\n  }, this)\n}, void 0, false, {\n  fileName: _jsxFileName,\n  lineNumber: 38,\n  columnNumber: 2\n}, this);\n_c3 = ScreenSmall;\nexport const ViewText = () => {\n  _s();\n\n  const [delai, setDelai] = React.useState();\n  React.useEffect(async () => {\n    const docRef = doc(db, \"agent\", phoneX);\n    const docSnap = await getDoc(docRef);\n\n    if (docSnap.exists()) {\n      setDelai(docSnap.data().delay.toDate());\n    } else {\n      // doc.data() will be undefined in this case\n      console.log(\"No such document!\");\n    }\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"p\", {\n    children: moment(delai).format('LLL')\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 63,\n    columnNumber: 3\n  }, this);\n};\n\n_s(ViewText, \"QAlhc5ZfFwJmiRSH8swFDNL4Nao=\");\n\n_c4 = ViewText;\n\nvar _c, _c2, _c3, _c4;\n\n$RefreshReg$(_c, \"RetuRnTime\");\n$RefreshReg$(_c2, \"ScreenLarge\");\n$RefreshReg$(_c3, \"ScreenSmall\");\n$RefreshReg$(_c4, \"ViewText\");","map":{"version":3,"sources":["/Users/USER/Desktop/Agent/src/Send/UsdSuccess/Times.js"],"names":["React","Media","doc","getDoc","db","phoneX","moment","RetuRnTime","small","medium","large","matches","ScreenLarge","ScreenSmall","ViewText","delai","setDelai","useState","useEffect","docRef","docSnap","exists","data","delay","toDate","console","log","format"],"mappings":";;;AACA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAO,aAAP;AACA,OAAOC,KAAP,MAAkB,aAAlB;AAEA,SAASC,GAAT,EAAcC,MAAd,QAA4B,oBAA5B;AACA,SAASC,EAAT,QAAmB,gBAAnB;AACA,SAASC,MAAT,QAAuB,gBAAvB;AACA,OAAOC,MAAP,MAAmB,QAAnB,C,CAEA;;;;AACA,eAAe,SAASC,UAAT,GAAsB;AACpC,sBACC,QAAC,KAAD;AACC,IAAA,OAAO,EAAE;AACRC,MAAAA,KAAK,EAAE,oBADC;AAERC,MAAAA,MAAM,EAAE,2CAFA;AAGRC,MAAAA,KAAK,EAAE;AAHC,KADV;AAAA,cAMEC,OAAO,iBACP;AAAA,iBACEA,OAAO,CAACH,KAAR,iBAAiB,QAAC,WAAD;AAAA;AAAA;AAAA;AAAA,cADnB,EAEEG,OAAO,CAACF,MAAR,iBAAkB,QAAC,WAAD;AAAA;AAAA;AAAA;AAAA,cAFpB,EAGEE,OAAO,CAACD,KAAR,iBAAiB,QAAC,WAAD;AAAA;AAAA;AAAA;AAAA,cAHnB;AAAA;AAPF;AAAA;AAAA;AAAA;AAAA,UADD;AAgBA;KAjBuBH,U;AAiBvB;AAGD,OAAO,MAAMK,WAAW,GAAG,mBAC1B;AAAK,EAAA,SAAS,EAAC,kBAAf;AAAA,yBACC,QAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AADD;AAAA;AAAA;AAAA;AAAA,QADM;MAAMA,W;AAKb,OAAO,MAAMC,WAAW,GAAG,mBAC1B;AAAK,EAAA,SAAS,EAAC,qBAAf;AAAA,yBACC,QAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AADD;AAAA;AAAA;AAAA;AAAA,QADM;MAAMA,W;AAMb,OAAO,MAAMC,QAAQ,GAAG,MAAM;AAAA;;AAE7B,QAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBhB,KAAK,CAACiB,QAAN,EAA1B;AAEAjB,EAAAA,KAAK,CAACkB,SAAN,CAAgB,YAAY;AAE3B,UAAMC,MAAM,GAAGjB,GAAG,CAACE,EAAD,EAAK,OAAL,EAAcC,MAAd,CAAlB;AACA,UAAMe,OAAO,GAAG,MAAMjB,MAAM,CAACgB,MAAD,CAA5B;;AAEA,QAAIC,OAAO,CAACC,MAAR,EAAJ,EAAsB;AACrBL,MAAAA,QAAQ,CAACI,OAAO,CAACE,IAAR,GAAeC,KAAf,CAAqBC,MAArB,EAAD,CAAR;AACA,KAFD,MAGK;AACJ;AACAC,MAAAA,OAAO,CAACC,GAAR,CAAY,mBAAZ;AACA;AAED,GAbD,EAaG,EAbH;AAeA,sBACC;AAAA,cAAIpB,MAAM,CAACS,KAAD,CAAN,CAAcY,MAAd,CAAqB,KAArB;AAAJ;AAAA;AAAA;AAAA;AAAA,UADD;AAGA,CAtBM;;GAAMb,Q;;MAAAA,Q","sourcesContent":["\nimport React from 'react';\nimport './Times.css';\nimport Media from 'react-media';\n\nimport { doc, getDoc } from \"firebase/firestore\";\nimport { db } from '../../firebase';\nimport { phoneX } from '../Phone/Input';\nimport moment from 'moment';\n\n// Times Component \nexport default function RetuRnTime() {\n return (\n  <Media\n   queries={{\n    small: '(max-width: 599px)',\n    medium: '(min-width: 600px) and (max-width:1199px)',\n    large: '(min-width: 1200px)',\n   }}>\n   {matches => (\n    <>\n     {matches.small && <ScreenSmall />}\n     {matches.medium && <ScreenLarge />}\n     {matches.large && <ScreenLarge />}\n    </>\n   )}\n  </Media>\n )\n};\n\n\nexport const ScreenLarge = () => (\n <div className='wrp-time-success'>\n  <ViewText />\n </div>\n);\nexport const ScreenSmall = () => (\n <div className='wrp-time-success-sm'>\n  <ViewText />\n </div>\n);\n\nexport const ViewText = () => {\n\n const [delai, setDelai] = React.useState();\n\n React.useEffect(async () => {\n\n  const docRef = doc(db, \"agent\", phoneX);\n  const docSnap = await getDoc(docRef);\n\n  if (docSnap.exists()) {\n   setDelai(docSnap.data().delay.toDate());\n  }\n  else {\n   // doc.data() will be undefined in this case\n   console.log(\"No such document!\");\n  }\n\n }, []);\n\n return (\n  <p>{moment(delai).format('LLL')}</p>\n );\n}"]},"metadata":{},"sourceType":"module"}