{"ast":null,"code":"var _jsxFileName = \"/Users/USER/Documents/Money/src/Tontine/ListGroup/Cmd/Head/Name.js\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport Media from 'react-media';\nimport { collection, getDocs, doc, onSnapshot } from \"firebase/firestore\";\nimport { db } from '../../../../firebase'; //  Exchange View Name\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport default function ReturnName() {\n  return /*#__PURE__*/_jsxDEV(Media, {\n    queries: {\n      small: '(max-width: 599px)',\n      medium: '(min-width: 600px) and (max-width:1199px)',\n      large: '(min-width: 1200px)'\n    },\n    children: matches => /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [matches.small && /*#__PURE__*/_jsxDEV(ScreenSmall, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 17,\n        columnNumber: 24\n      }, this), matches.medium && /*#__PURE__*/_jsxDEV(ScreenLarge, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 18,\n        columnNumber: 25\n      }, this), matches.large && /*#__PURE__*/_jsxDEV(ScreenLarge, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 19,\n        columnNumber: 24\n      }, this)]\n    }, void 0, true)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 9,\n    columnNumber: 3\n  }, this);\n}\n_c = ReturnName;\n;\nexport const ScreenLarge = () => /*#__PURE__*/_jsxDEV(\"div\", {\n  className: \"name-head-wallet-slide\",\n  children: /*#__PURE__*/_jsxDEV(ReturnPeople, {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 28,\n    columnNumber: 3\n  }, this)\n}, void 0, false, {\n  fileName: _jsxFileName,\n  lineNumber: 27,\n  columnNumber: 2\n}, this);\n_c2 = ScreenLarge;\nexport const ScreenSmall = () => /*#__PURE__*/_jsxDEV(\"div\", {\n  className: \"name-head-wallet-slide\",\n  children: /*#__PURE__*/_jsxDEV(ReturnPeople, {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 33,\n    columnNumber: 3\n  }, this)\n}, void 0, false, {\n  fileName: _jsxFileName,\n  lineNumber: 32,\n  columnNumber: 2\n}, this);\n_c3 = ScreenSmall;\nexport const ReturnPeople = () => {\n  _s();\n\n  let pushDocsA = new Array();\n  const [last, setLast] = React.useState('');\n  const [status, setStatus] = React.useState('');\n  const [team, setTeam] = React.useState('');\n  React.useEffect(async () => {\n    const querySnapshot = await getDocs(collection(db, \"client\"));\n    querySnapshot.forEach(doc => {\n      pushDocsA.push(doc.id);\n    });\n    const verifierCollection = pushDocsA.some(value => value == JSON.parse(window.localStorage.getItem('USER')));\n\n    try {\n      const unsub = onSnapshot(doc(db, verifierCollection ? \"client\" : \"agent\", JSON.parse(window.localStorage.getItem('USER'))), doc => {\n        setLast(doc.data().lastname);\n        setStatus(doc.data().state);\n        setTeam(doc.data().team);\n      });\n    } catch {\n      window.console.log('error window');\n    }\n  }, []); // const str = last.toLowerCase() + ' ' + first.toLowerCase();\n\n  const str2 = last.charAt(0).toUpperCase() + last.slice(1);\n  let stateName = '';\n\n  if (status === 'agent' && team === 'mere') {\n    stateName = 'Super Agent';\n  } else if (status === 'agent' && team === 'simple') {\n    stateName = 'Agent';\n  } else {\n    stateName = 'Client';\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"h2\", {\n    style: {\n      color: 'white'\n    },\n    children: str2\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 79,\n    columnNumber: 3\n  }, this);\n};\n\n_s(ReturnPeople, \"DvIdXg6cPtJR94iEo7kLxkPKEBA=\");\n\n_c4 = ReturnPeople;\n\nvar _c, _c2, _c3, _c4;\n\n$RefreshReg$(_c, \"ReturnName\");\n$RefreshReg$(_c2, \"ScreenLarge\");\n$RefreshReg$(_c3, \"ScreenSmall\");\n$RefreshReg$(_c4, \"ReturnPeople\");","map":{"version":3,"sources":["/Users/USER/Documents/Money/src/Tontine/ListGroup/Cmd/Head/Name.js"],"names":["React","Media","collection","getDocs","doc","onSnapshot","db","ReturnName","small","medium","large","matches","ScreenLarge","ScreenSmall","ReturnPeople","pushDocsA","Array","last","setLast","useState","status","setStatus","team","setTeam","useEffect","querySnapshot","forEach","push","id","verifierCollection","some","value","JSON","parse","window","localStorage","getItem","unsub","data","lastname","state","console","log","str2","charAt","toUpperCase","slice","stateName","color"],"mappings":"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","sourcesContent":["import React from 'react';\nimport Media from 'react-media';\nimport { collection, getDocs, doc, onSnapshot } from \"firebase/firestore\";\nimport { db } from '../../../../firebase';\n\n//  Exchange View Name\nexport default function ReturnName() {\n return (\n  <Media\n   queries={{\n    small: '(max-width: 599px)',\n    medium: '(min-width: 600px) and (max-width:1199px)',\n    large: '(min-width: 1200px)',\n   }}>\n   {matches => (\n    <>\n     {matches.small && <ScreenSmall />}\n     {matches.medium && <ScreenLarge />}\n     {matches.large && <ScreenLarge />}\n    </>\n   )}\n  </Media>\n );\n};\n\nexport const ScreenLarge = () => (\n <div className='name-head-wallet-slide'>\n  <ReturnPeople />\n </div>\n);\nexport const ScreenSmall = () => (\n <div className='name-head-wallet-slide'>\n  <ReturnPeople />\n </div>\n);\nexport const ReturnPeople = () => {\n\n let pushDocsA = new Array();\n const [last, setLast] = React.useState('');\n const [status, setStatus] = React.useState('');\n const [team, setTeam] = React.useState('');\n\n React.useEffect(async () => {\n\n  const querySnapshot = await getDocs(collection(db, \"client\"));\n  querySnapshot.forEach((doc) => {\n   pushDocsA.push(doc.id);\n  });\n\n  const verifierCollection = pushDocsA.some(value => value == JSON.parse(window.localStorage.getItem('USER')));\n\n  try {\n   const unsub = onSnapshot(doc(db, verifierCollection ? \"client\" : \"agent\", JSON.parse(window.localStorage.getItem('USER'))), (doc) => {\n    setLast(doc.data().lastname);\n    setStatus(doc.data().state);\n    setTeam(doc.data().team);\n   });\n\n  } catch {\n   window.console.log('error window');\n  }\n\n }, []);\n\n // const str = last.toLowerCase() + ' ' + first.toLowerCase();\n const str2 = last.charAt(0).toUpperCase() + last.slice(1);\n\n let stateName = '';\n\n if (status === 'agent' && team === 'mere') {\n  stateName = 'Super Agent';\n } else if (status === 'agent' && team === 'simple') {\n  stateName = 'Agent';\n } else {\n  stateName = 'Client';\n }\n\n return (\n  <h2 style={{ color: 'white' }}>{str2}</h2>\n )\n};"]},"metadata":{},"sourceType":"module"}