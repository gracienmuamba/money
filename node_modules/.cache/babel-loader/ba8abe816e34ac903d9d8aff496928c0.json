{"ast":null,"code":"var _jsxFileName = \"/Users/USER/Desktop/MuunganoMoney/src/Pin/Usd/Simple/Input.js\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport './Input.css';\nimport Media from 'react-media';\nimport { useForm } from 'react-hook-form';\nimport { useNavigate } from 'react-router-dom';\nimport { doc, getDocs, collection, updateDoc, increment, getDoc, onSnapshot } from \"firebase/firestore\";\nimport { db } from '../../../firebase';\nimport { phoneX } from '../../../Sign/Input';\nimport { sendPhone } from '../../../ValidExUsd/Input';\nimport { frais, Unite, solde, money } from '../../../USD/Input';\nimport Button from '@mui/material/Button';\nimport Dialog from '@mui/material/Dialog';\nimport DialogActions from '@mui/material/DialogActions';\nimport DialogContent from '@mui/material/DialogContent';\nimport DialogTitle from '@mui/material/DialogTitle';\nimport DialogContentText from '@mui/material/DialogContentText';\nimport moment from 'moment';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport let nowField = moment().date() - 1;\nexport let prixHash = 0;\nexport let hashTrue = true; // Input Field Component \n\nexport default function ReturnInput() {\n  return /*#__PURE__*/_jsxDEV(Media, {\n    queries: {\n      small: '(max-width: 599px)',\n      medium: '(min-width: 600px) and (max-width:1199px)',\n      large: '(min-width: 1200px)'\n    },\n    children: matches => /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [matches.small && /*#__PURE__*/_jsxDEV(ScreenSmall, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 24\n      }, this), matches.medium && /*#__PURE__*/_jsxDEV(SreenLarge, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 25\n      }, this), matches.large && /*#__PURE__*/_jsxDEV(SreenLarge, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 24\n      }, this)]\n    }, void 0, true)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 30,\n    columnNumber: 3\n  }, this);\n}\n_c = ReturnInput;\n;\nexport const SreenLarge = () => /*#__PURE__*/_jsxDEV(\"div\", {\n  className: \"wrp-input-send-money\",\n  children: /*#__PURE__*/_jsxDEV(FormInput, {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 49,\n    columnNumber: 3\n  }, this)\n}, void 0, false, {\n  fileName: _jsxFileName,\n  lineNumber: 48,\n  columnNumber: 2\n}, this);\n_c2 = SreenLarge;\nexport const ScreenSmall = () => /*#__PURE__*/_jsxDEV(\"div\", {\n  className: \"wrp-input-send-money-sm\",\n  children: /*#__PURE__*/_jsxDEV(FormInput, {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 55,\n    columnNumber: 3\n  }, this)\n}, void 0, false, {\n  fileName: _jsxFileName,\n  lineNumber: 54,\n  columnNumber: 2\n}, this);\n_c3 = ScreenSmall;\nexport const FormInput = () => {\n  _s();\n\n  let pushDocs = new Array();\n  let verifierSend;\n  let verifierGet;\n  const navigation = useNavigate();\n  const {\n    register,\n    handleSubmit,\n    reset\n  } = useForm(); //  order notebook\n\n  const [tableClient, setTableClient] = React.useState();\n  const [tableAgent, setTableAgent] = React.useState();\n  const [tableUpgrade, setTableUpgrade] = React.useState();\n  const [tableAdmin, setTableAdmin] = React.useState(); // send React useState  \n\n  const [pin, setPin] = React.useState(null);\n  const [state, setState] = React.useState(null);\n  const [first, setFirst] = React.useState('');\n  const [last, setLast] = React.useState(''); // getting React useState\n\n  const [getstate, setGetstate] = React.useState(null);\n  const [getfirst, setGetFirst] = React.useState('');\n  const [getlast, setGetLast] = React.useState('');\n  const [open, setOpen] = React.useState(false);\n  const [fullWidth, setFullWidth] = React.useState(true);\n  const [maxWidth, setMaxWidth] = React.useState('sm');\n\n  const handleClickOpen = () => {\n    setOpen(true);\n  };\n\n  const handleClose = () => {\n    setOpen(false);\n  };\n\n  React.useEffect(async () => {\n    const querySnapshot = await getDocs(collection(db, \"client\"));\n    querySnapshot.forEach(doc => {\n      pushDocs.push(doc.id);\n    });\n    verifierSend = pushDocs.some(value => value == phoneX);\n    verifierGet = pushDocs.some(value => value == sendPhone);\n    const sendRef = doc(db, verifierSend ? \"client\" : \"agent\", phoneX);\n    const sendSnap = await getDoc(sendRef);\n\n    if (sendSnap.exists()) {\n      setPin(sendSnap.data().code);\n      setState(sendSnap.data().state);\n      setFirst(sendSnap.data().firstname);\n      setLast(sendSnap.data().lastname);\n    }\n\n    ;\n    const getRef = doc(db, verifierGet ? \"client\" : \"agent\", sendPhone);\n    const getSnap = await getDoc(getRef);\n\n    if (getSnap.exists()) {\n      setGetstate(getSnap.data().state);\n      setGetFirst(getSnap.data().firstname);\n      setGetLast(getSnap.data().lastname);\n    }\n\n    ;\n\n    try {\n      await onSnapshot(doc(db, \"clients\", \"emoney\"), doc => {\n        setTableClient(doc.data().usd);\n      });\n      await onSnapshot(doc(db, \"agents\", \"emoney\"), doc => {\n        setTableAgent(doc.data().usd);\n      });\n      await onSnapshot(doc(db, \"muungano\", \"upgrade\"), doc => {\n        setTableUpgrade(doc.data().usd);\n      });\n      await onSnapshot(doc(db, \"muungano\", \"commission\"), doc => {\n        setTableAdmin(doc.data().usd);\n      });\n    } catch {\n      window.console.log('Erreur disponible');\n    }\n  }, []);\n\n  const onSubmit = async data => {\n    // Checked if value code is length valid\n    if (data.code.length != 6 || pin != data.code) {\n      setOpen(true);\n      reset();\n    } else {\n      const sendUser = first.toLowerCase() + ' ' + last.toLowerCase();\n      const getUser = getfirst.toLowerCase() + ' ' + getlast.toLowerCase();\n\n      if (state == \"agent\" && getstate == \"agent\") {\n        hashTrue = false;\n        prixHash = solde;\n        let arrayAgent = tableAgent;\n        let arrayUpgrade = tableUpgrade;\n        arrayAgent[nowField] = Number(tableAgent[nowField]) + solde;\n        arrayUpgrade[nowField] = Number(tableUpgrade[nowField]) + solde;\n        swapInWithDocsAgent(phoneX, sendPhone, sendUser, getUser, solde, Unite, arrayAgent, arrayUpgrade);\n        navigation('/send-success-usd');\n      } else if (state == \"client\" && getstate == \"client\") {\n        hashTrue = true;\n        prixHash = money;\n        let arrayClient = tableClient;\n        let arrayUpgrade = tableUpgrade;\n        let arrayAdmin = tableAdmin;\n        arrayClient[nowField] = Number(tableClient[nowField]) + money;\n        arrayUpgrade[nowField] = Number(tableUpgrade[nowField]) + money;\n        arrayAdmin[nowField] = Number(tableAdmin[nowField]) + Number(frais);\n        isSwapInWithClientToClient(phoneX, sendPhone, sendUser, getUser, solde, money, Unite, arrayClient, arrayUpgrade, arrayAdmin);\n        navigation('/send-success-usd');\n      } else {\n        if (state == \"agent\") {\n          hashTrue = false;\n          prixHash = solde;\n          let arrayAgent = tableAgent;\n          let arrayUpgrade = tableUpgrade;\n          arrayAgent[nowField] = Number(tableAgent[nowField]) + solde;\n          arrayUpgrade[nowField] = Number(tableUpgrade[nowField]) + solde;\n          swapInWithDocsAgentToClient(phoneX, sendPhone, sendUser, getUser, solde, Unite, arrayAgent, arrayUpgrade);\n          navigation('/send-success-usd');\n        } else {\n          hashTrue = true;\n          prixHash = money;\n          let arrayClient = tableClient;\n          let arrayUpgrade = tableUpgrade;\n          arrayClient[nowField] = Number(tableClient[nowField]) + money;\n          arrayUpgrade[nowField] = Number(tableUpgrade[nowField]) + money;\n          isSwapInWithClientToAgent(phoneX, sendPhone, sendUser, getUser, solde, money, Unite, arrayClient, arrayUpgrade);\n          navigation('/send-success-usd');\n        }\n      }\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    onSubmit: handleSubmit(onSubmit),\n    children: [/*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"password\",\n      placeholder: \"\\u2022\\u2022\\u2022\\u2022\\u2022\\u2022\\u2022\",\n      name: \"code\",\n      ...register('code', {\n        required: true\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 232,\n      columnNumber: 4\n    }, this), /*#__PURE__*/_jsxDEV(Dialog, {\n      fullWidth: fullWidth,\n      maxWidth: maxWidth,\n      open: open,\n      onClose: handleClose,\n      children: [/*#__PURE__*/_jsxDEV(DialogTitle, {\n        children: \"MuunganoMoney\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 243,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(DialogContent, {\n        children: /*#__PURE__*/_jsxDEV(DialogContentText, {\n          children: \"Code d'erreur (PIN) Acc\\xE8s non valide\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 246,\n          columnNumber: 6\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 244,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(DialogActions, {\n        children: /*#__PURE__*/_jsxDEV(Button, {\n          onClick: handleClose,\n          children: \"Fermer\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 252,\n          columnNumber: 6\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 251,\n        columnNumber: 5\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 237,\n      columnNumber: 4\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"Btn\",\n      children: \"Valider\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 257,\n      columnNumber: 4\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 231,\n    columnNumber: 3\n  }, this);\n};\n\n_s(FormInput, \"/psL7Hen02hST47OW/WmfrD9190=\", false, function () {\n  return [useNavigate, useForm];\n});\n\n_c4 = FormInput;\n\nasync function swapInWithDocsAgent(sendPhone, getPhone, sendUser, getUser, prix, unite, arrayAgentMoney, upgrade) {\n  const sendRef = doc(db, \"agent\", sendPhone);\n  await updateDoc(sendRef, {\n    usd: increment(-prix),\n    money: prix,\n    user: getUser,\n    unite: unite,\n    phoneclient: getPhone,\n    delay: moment().format()\n  });\n  const getRef = doc(db, \"agent\", getPhone);\n  await updateDoc(getRef, {\n    usd: increment(prix),\n    money: prix,\n    user: sendUser,\n    unite: unite,\n    phoneclient: sendPhone,\n    delay: moment().format()\n  });\n  const agentsemoneyRef = doc(db, \"agents\", \"emoney\");\n  await updateDoc(agentsemoneyRef, {\n    usd: arrayAgentMoney\n  });\n  const upgradeRef = doc(db, \"muungano\", \"upgrade\");\n  await updateDoc(upgradeRef, {\n    usd: upgrade\n  });\n}\n\n;\n\nasync function swapInWithDocsAgentToClient(sendPhone, getPhone, sendUser, getUser, prix, unite, arrayAgentMoney, upgrade) {\n  const sendRef = doc(db, \"agent\", sendPhone);\n  await updateDoc(sendRef, {\n    usd: increment(-prix),\n    money: prix,\n    user: getUser,\n    unite: unite,\n    phoneclient: getPhone,\n    delay: moment().format()\n  });\n  const getRef = doc(db, \"client\", getPhone);\n  await updateDoc(getRef, {\n    usd: increment(prix),\n    money: prix,\n    user: sendUser,\n    unite: unite,\n    phoneclient: sendPhone,\n    delay: moment().format()\n  });\n  const agentsemoneyRef = doc(db, \"agents\", \"emoney\");\n  await updateDoc(agentsemoneyRef, {\n    usd: arrayAgentMoney\n  });\n  const upgradeRef = doc(db, \"muungano\", \"upgrade\");\n  await updateDoc(upgradeRef, {\n    usd: upgrade\n  });\n}\n\n;\n\nasync function isSwapInWithClientToAgent(sendPhone, getPhone, sendUser, getUser, prix, money, unite, arrayAgentMoney, upgrade) {\n  const sendRef = doc(db, \"client\", sendPhone);\n  await updateDoc(sendRef, {\n    usd: increment(-prix),\n    money: money,\n    user: getUser,\n    unite: unite,\n    phoneclient: getPhone,\n    delay: moment().format()\n  });\n  const getRef = doc(db, \"agent\", getPhone);\n  await updateDoc(getRef, {\n    usd: increment(money),\n    money: money,\n    user: sendUser,\n    unite: unite,\n    thriftusd: increment(Number(frais * 30 / 100)),\n    phoneclient: sendPhone,\n    delay: moment().format()\n  });\n  const adminRef = doc(db, \"muunganomoney\", \"money\");\n  await updateDoc(adminRef, {\n    usd: increment(Number(frais * 70 / 100))\n  });\n  const agentsemoneyRef = doc(db, \"clients\", \"emoney\");\n  await updateDoc(agentsemoneyRef, {\n    usd: arrayAgentMoney\n  });\n  const upgradeRef = doc(db, \"muungano\", \"upgrade\");\n  await updateDoc(upgradeRef, {\n    usd: upgrade\n  });\n}\n\n;\n\nasync function isSwapInWithClientToClient(sendPhone, getPhone, sendUser, getUser, prix, money, unite, arrayAgentMoney, upgrade, adminFrais) {\n  const sendRef = doc(db, \"client\", sendPhone);\n  await updateDoc(sendRef, {\n    usd: increment(-prix),\n    money: money,\n    user: getUser,\n    unite: unite,\n    phoneclient: getPhone,\n    delay: moment().format()\n  });\n  const getRef = doc(db, \"client\", getPhone);\n  await updateDoc(getRef, {\n    usd: increment(money),\n    money: money,\n    user: sendUser,\n    unite: unite,\n    phoneclient: sendPhone,\n    delay: moment().format()\n  });\n  const adminRef = doc(db, \"muunganomoney\", \"money\");\n  await updateDoc(adminRef, {\n    usd: increment(Math.floor(Number(frais)))\n  });\n  const agentsemoneyRef = doc(db, \"clients\", \"emoney\");\n  await updateDoc(agentsemoneyRef, {\n    usd: arrayAgentMoney\n  });\n  const upgradeRef = doc(db, \"muungano\", \"upgrade\");\n  await updateDoc(upgradeRef, {\n    usd: upgrade\n  });\n  const fraisRef = doc(db, \"muungano\", \"commission\");\n  await updateDoc(fraisRef, {\n    usd: adminFrais\n  });\n}\n\n;\n\nvar _c, _c2, _c3, _c4;\n\n$RefreshReg$(_c, \"ReturnInput\");\n$RefreshReg$(_c2, \"SreenLarge\");\n$RefreshReg$(_c3, \"ScreenSmall\");\n$RefreshReg$(_c4, \"FormInput\");","map":{"version":3,"sources":["/Users/USER/Desktop/MuunganoMoney/src/Pin/Usd/Simple/Input.js"],"names":["React","Media","useForm","useNavigate","doc","getDocs","collection","updateDoc","increment","getDoc","onSnapshot","db","phoneX","sendPhone","frais","Unite","solde","money","Button","Dialog","DialogActions","DialogContent","DialogTitle","DialogContentText","moment","nowField","date","prixHash","hashTrue","ReturnInput","small","medium","large","matches","SreenLarge","ScreenSmall","FormInput","pushDocs","Array","verifierSend","verifierGet","navigation","register","handleSubmit","reset","tableClient","setTableClient","useState","tableAgent","setTableAgent","tableUpgrade","setTableUpgrade","tableAdmin","setTableAdmin","pin","setPin","state","setState","first","setFirst","last","setLast","getstate","setGetstate","getfirst","setGetFirst","getlast","setGetLast","open","setOpen","fullWidth","setFullWidth","maxWidth","setMaxWidth","handleClickOpen","handleClose","useEffect","querySnapshot","forEach","push","id","some","value","sendRef","sendSnap","exists","data","code","firstname","lastname","getRef","getSnap","usd","window","console","log","onSubmit","length","sendUser","toLowerCase","getUser","arrayAgent","arrayUpgrade","Number","swapInWithDocsAgent","arrayClient","arrayAdmin","isSwapInWithClientToClient","swapInWithDocsAgentToClient","isSwapInWithClientToAgent","required","getPhone","prix","unite","arrayAgentMoney","upgrade","user","phoneclient","delay","format","agentsemoneyRef","upgradeRef","thriftusd","adminRef","adminFrais","Math","floor","fraisRef"],"mappings":"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","sourcesContent":["import React from 'react';\nimport './Input.css';\nimport Media from 'react-media';\nimport { useForm } from 'react-hook-form';\nimport { useNavigate } from 'react-router-dom';\nimport { doc, getDocs, collection, updateDoc, increment, getDoc, onSnapshot } from \"firebase/firestore\";\nimport { db } from '../../../firebase';\n\nimport { phoneX } from '../../../Sign/Input';\nimport { sendPhone } from '../../../ValidExUsd/Input';\nimport { frais, Unite, solde, money } from '../../../USD/Input';\n\nimport Button from '@mui/material/Button';\nimport Dialog from '@mui/material/Dialog';\nimport DialogActions from '@mui/material/DialogActions';\nimport DialogContent from '@mui/material/DialogContent';\nimport DialogTitle from '@mui/material/DialogTitle';\nimport DialogContentText from '@mui/material/DialogContentText';\n\nimport moment from 'moment';\n\nexport let nowField = (moment().date()) - 1;\n\nexport let prixHash = 0;\nexport let hashTrue = true;\n\n// Input Field Component \nexport default function ReturnInput() {\n return (\n  <Media\n   queries={{\n    small: '(max-width: 599px)',\n    medium: '(min-width: 600px) and (max-width:1199px)',\n    large: '(min-width: 1200px)',\n   }}>\n   {matches => (\n    <>\n     {matches.small && <ScreenSmall />}\n     {matches.medium && <SreenLarge />}\n     {matches.large && <SreenLarge />}\n    </>\n   )}\n  </Media>\n );\n};\n\nexport const SreenLarge = () => (\n <div className='wrp-input-send-money'>\n  <FormInput />\n\n </div>\n);\nexport const ScreenSmall = () => (\n <div className='wrp-input-send-money-sm'>\n  <FormInput />\n </div>\n);\nexport const FormInput = () => {\n\n let pushDocs = new Array();\n let verifierSend;\n let verifierGet;\n\n const navigation = useNavigate();\n const { register, handleSubmit, reset } = useForm();\n\n //  order notebook\n const [tableClient, setTableClient] = React.useState();\n const [tableAgent, setTableAgent] = React.useState();\n const [tableUpgrade, setTableUpgrade] = React.useState();\n const [tableAdmin, setTableAdmin] = React.useState();\n\n // send React useState  \n const [pin, setPin] = React.useState(null);\n const [state, setState] = React.useState(null);\n const [first, setFirst] = React.useState('');\n const [last, setLast] = React.useState('');\n\n // getting React useState\n const [getstate, setGetstate] = React.useState(null);\n const [getfirst, setGetFirst] = React.useState('');\n const [getlast, setGetLast] = React.useState('');\n\n\n const [open, setOpen] = React.useState(false);\n const [fullWidth, setFullWidth] = React.useState(true);\n const [maxWidth, setMaxWidth] = React.useState('sm');\n\n const handleClickOpen = () => {\n  setOpen(true);\n };\n const handleClose = () => {\n  setOpen(false);\n };\n\n React.useEffect(async () => {\n\n  const querySnapshot = await getDocs(collection(db, \"client\"));\n  querySnapshot.forEach((doc) => {\n   pushDocs.push(doc.id);\n  });\n\n  verifierSend = pushDocs.some(value => value == phoneX);\n  verifierGet = pushDocs.some(value => value == sendPhone);\n\n  const sendRef = doc(db, verifierSend ? \"client\" : \"agent\", phoneX);\n  const sendSnap = await getDoc(sendRef);\n\n  if (sendSnap.exists()) {\n   setPin(sendSnap.data().code);\n   setState(sendSnap.data().state);\n   setFirst(sendSnap.data().firstname);\n   setLast(sendSnap.data().lastname);\n  };\n\n  const getRef = doc(db, verifierGet ? \"client\" : \"agent\", sendPhone);\n  const getSnap = await getDoc(getRef);\n\n  if (getSnap.exists()) {\n   setGetstate(getSnap.data().state);\n   setGetFirst(getSnap.data().firstname);\n   setGetLast(getSnap.data().lastname);\n  };\n\n  try {\n   await onSnapshot(doc(db, \"clients\", \"emoney\"), (doc) => {\n    setTableClient(doc.data().usd);\n   });\n\n   await onSnapshot(doc(db, \"agents\", \"emoney\"), (doc) => {\n    setTableAgent(doc.data().usd);\n   });\n\n   await onSnapshot(doc(db, \"muungano\", \"upgrade\"), (doc) => {\n    setTableUpgrade(doc.data().usd);\n   });\n\n   await onSnapshot(doc(db, \"muungano\", \"commission\"), (doc) => {\n    setTableAdmin(doc.data().usd);\n   });\n\n  } catch {\n   window.console.log('Erreur disponible');\n  }\n\n\n }, []);\n\n const onSubmit = async (data) => {\n\n  // Checked if value code is length valid\n  if (data.code.length != 6 || pin != data.code) {\n   setOpen(true);\n   reset();\n\n  } else {\n   const sendUser = first.toLowerCase() + ' ' + last.toLowerCase();\n   const getUser = getfirst.toLowerCase() + ' ' + getlast.toLowerCase();\n\n   if (state == \"agent\" && getstate == \"agent\") {\n\n    hashTrue = false;\n    prixHash = solde;\n\n\n    let arrayAgent = tableAgent;\n    let arrayUpgrade = tableUpgrade;\n\n    arrayAgent[nowField] = Number(tableAgent[nowField]) + solde;\n    arrayUpgrade[nowField] = Number(tableUpgrade[nowField]) + solde;\n\n    swapInWithDocsAgent(phoneX, sendPhone, sendUser, getUser, solde, Unite, arrayAgent, arrayUpgrade);\n    navigation('/send-success-usd');\n\n   } else if (state == \"client\" && getstate == \"client\") {\n\n    hashTrue = true;\n    prixHash = money;\n\n    let arrayClient = tableClient;\n    let arrayUpgrade = tableUpgrade;\n    let arrayAdmin = tableAdmin;\n\n    arrayClient[nowField] = Number(tableClient[nowField]) + money;\n    arrayUpgrade[nowField] = Number(tableUpgrade[nowField]) + money;\n    arrayAdmin[nowField] = Number(tableAdmin[nowField]) + Number(frais);\n\n    isSwapInWithClientToClient(phoneX, sendPhone, sendUser, getUser, solde, money, Unite, arrayClient, arrayUpgrade, arrayAdmin);\n    navigation('/send-success-usd');\n\n   } else {\n\n    if (state == \"agent\") {\n\n     hashTrue = false;\n     prixHash = solde;\n\n     let arrayAgent = tableAgent;\n     let arrayUpgrade = tableUpgrade;\n\n     arrayAgent[nowField] = Number(tableAgent[nowField]) + solde;\n     arrayUpgrade[nowField] = Number(tableUpgrade[nowField]) + solde;\n\n     swapInWithDocsAgentToClient(phoneX, sendPhone, sendUser, getUser, solde, Unite, arrayAgent, arrayUpgrade);\n     navigation('/send-success-usd');\n\n    } else {\n\n     hashTrue = true;\n     prixHash = money;\n\n\n     let arrayClient = tableClient;\n     let arrayUpgrade = tableUpgrade;\n\n     arrayClient[nowField] = Number(tableClient[nowField]) + money;\n     arrayUpgrade[nowField] = Number(tableUpgrade[nowField]) + money;\n\n     isSwapInWithClientToAgent(phoneX, sendPhone, sendUser, getUser, solde, money, Unite, arrayClient, arrayUpgrade);\n     navigation('/send-success-usd');\n\n    }\n\n   }\n\n  }\n };\n\n\n return (\n  <form onSubmit={handleSubmit(onSubmit)}>\n   <input type='password'\n    placeholder='•••••••'\n    name='code' {...register('code', { required: true })}\n   />\n\n   <Dialog\n    fullWidth={fullWidth}\n    maxWidth={maxWidth}\n    open={open}\n    onClose={handleClose}\n   >\n    <DialogTitle>MuunganoMoney</DialogTitle>\n    <DialogContent>\n\n     <DialogContentText>\n      Code d'erreur (PIN) Accès non valide\n     </DialogContentText>\n\n    </DialogContent>\n    <DialogActions>\n     <Button onClick={handleClose}>Fermer</Button>\n    </DialogActions>\n   </Dialog>\n\n\n   <button className='Btn'>Valider</button>\n  </form>\n )\n};\n\nasync function swapInWithDocsAgent(sendPhone, getPhone, sendUser, getUser, prix, unite, arrayAgentMoney, upgrade) {\n\n const sendRef = doc(db, \"agent\", sendPhone);\n await updateDoc(sendRef, {\n  usd: increment(-(prix)),\n  money: prix,\n  user: getUser,\n  unite: unite,\n  phoneclient: getPhone,\n  delay: moment().format()\n });\n\n const getRef = doc(db, \"agent\", getPhone);\n await updateDoc(getRef, {\n  usd: increment(prix),\n  money: prix,\n  user: sendUser,\n  unite: unite,\n  phoneclient: sendPhone,\n  delay: moment().format()\n });\n\n const agentsemoneyRef = doc(db, \"agents\", \"emoney\");\n await updateDoc(agentsemoneyRef, {\n  usd: arrayAgentMoney\n });\n\n const upgradeRef = doc(db, \"muungano\", \"upgrade\");\n await updateDoc(upgradeRef, {\n  usd: upgrade,\n });\n\n};\nasync function swapInWithDocsAgentToClient(sendPhone, getPhone, sendUser, getUser, prix, unite, arrayAgentMoney, upgrade) {\n\n const sendRef = doc(db, \"agent\", sendPhone);\n await updateDoc(sendRef, {\n  usd: increment(-(prix)),\n  money: prix,\n  user: getUser,\n  unite: unite,\n  phoneclient: getPhone,\n  delay: moment().format()\n });\n\n const getRef = doc(db, \"client\", getPhone);\n await updateDoc(getRef, {\n  usd: increment(prix),\n  money: prix,\n  user: sendUser,\n  unite: unite,\n  phoneclient: sendPhone,\n  delay: moment().format()\n });\n\n const agentsemoneyRef = doc(db, \"agents\", \"emoney\");\n await updateDoc(agentsemoneyRef, {\n  usd: arrayAgentMoney,\n });\n\n const upgradeRef = doc(db, \"muungano\", \"upgrade\");\n await updateDoc(upgradeRef, {\n  usd: upgrade,\n });\n\n};\nasync function isSwapInWithClientToAgent(sendPhone, getPhone, sendUser, getUser, prix, money, unite, arrayAgentMoney, upgrade) {\n\n const sendRef = doc(db, \"client\", sendPhone);\n await updateDoc(sendRef, {\n  usd: increment(-(prix)),\n  money: money,\n  user: getUser,\n  unite: unite,\n  phoneclient: getPhone,\n  delay: moment().format()\n });\n\n const getRef = doc(db, \"agent\", getPhone);\n await updateDoc(getRef, {\n  usd: increment(money),\n  money: money,\n  user: sendUser,\n  unite: unite,\n  thriftusd: increment((Number(frais * 30 / 100))),\n  phoneclient: sendPhone,\n  delay: moment().format()\n });\n\n const adminRef = doc(db, \"muunganomoney\", \"money\");\n await updateDoc(adminRef, {\n  usd: increment((Number(frais * 70 / 100)))\n });\n\n const agentsemoneyRef = doc(db, \"clients\", \"emoney\");\n await updateDoc(agentsemoneyRef, {\n  usd: arrayAgentMoney,\n });\n\n const upgradeRef = doc(db, \"muungano\", \"upgrade\");\n await updateDoc(upgradeRef, {\n  usd: upgrade\n });\n\n};\nasync function isSwapInWithClientToClient(sendPhone, getPhone, sendUser, getUser, prix, money, unite, arrayAgentMoney, upgrade, adminFrais) {\n\n const sendRef = doc(db, \"client\", sendPhone);\n await updateDoc(sendRef, {\n  usd: increment(-(prix)),\n  money: money,\n  user: getUser,\n  unite: unite,\n  phoneclient: getPhone,\n  delay: moment().format()\n });\n\n const getRef = doc(db, \"client\", getPhone);\n await updateDoc(getRef, {\n  usd: increment(money),\n  money: money,\n  user: sendUser,\n  unite: unite,\n  phoneclient: sendPhone,\n  delay: moment().format()\n });\n\n const adminRef = doc(db, \"muunganomoney\", \"money\");\n await updateDoc(adminRef, {\n  usd: increment(Math.floor(Number(frais)))\n });\n\n const agentsemoneyRef = doc(db, \"clients\", \"emoney\");\n await updateDoc(agentsemoneyRef, {\n  usd: arrayAgentMoney,\n });\n\n const upgradeRef = doc(db, \"muungano\", \"upgrade\");\n await updateDoc(upgradeRef, {\n  usd: upgrade\n });\n\n const fraisRef = doc(db, \"muungano\", \"commission\");\n await updateDoc(fraisRef, {\n  usd: adminFrais,\n });\n\n};\n"]},"metadata":{},"sourceType":"module"}