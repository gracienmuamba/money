{"ast":null,"code":"var _jsxFileName = \"/Users/USER/Desktop/Agent/src/Send/Phone/Input.js\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport './Input.css';\nimport Media from 'react-media';\nimport { useForm } from 'react-hook-form';\nimport { useNavigate } from 'react-router-dom';\nimport { collection, getDocs } from \"firebase/firestore\";\nimport { db } from '../../firebase';\nimport { doc, updateDoc, increment, onSnapshot, arrayUnion } from \"firebase/firestore\";\nimport Button from '@mui/material/Button';\nimport Dialog from '@mui/material/Dialog';\nimport DialogActions from '@mui/material/DialogActions';\nimport DialogContent from '@mui/material/DialogContent';\nimport DialogTitle from '@mui/material/DialogTitle';\nimport DialogContentText from '@mui/material/DialogContentText'; // Firebase auth \n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport let phoneX = ''; // Input Field Component \n\nexport default function ReturnInput() {\n  return /*#__PURE__*/_jsxDEV(Media, {\n    queries: {\n      small: '(max-width: 599px)',\n      medium: '(min-width: 600px) and (max-width:1199px)',\n      large: '(min-width: 1200px)'\n    },\n    children: matches => /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [matches.small && /*#__PURE__*/_jsxDEV(ScreenSmall, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 24\n      }, this), matches.medium && /*#__PURE__*/_jsxDEV(SreenLarge, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 25\n      }, this), matches.large && /*#__PURE__*/_jsxDEV(SreenLarge, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 24\n      }, this)]\n    }, void 0, true)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 23,\n    columnNumber: 3\n  }, this);\n}\n_c = ReturnInput;\n;\nexport const SreenLarge = () => /*#__PURE__*/_jsxDEV(\"div\", {\n  className: \"wrp-input-phone-register\",\n  children: /*#__PURE__*/_jsxDEV(FormInput, {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 41,\n    columnNumber: 3\n  }, this)\n}, void 0, false, {\n  fileName: _jsxFileName,\n  lineNumber: 40,\n  columnNumber: 2\n}, this);\n_c2 = SreenLarge;\nexport const ScreenSmall = () => /*#__PURE__*/_jsxDEV(\"div\", {\n  className: \"wrp-input-phone-register-sm\",\n  children: /*#__PURE__*/_jsxDEV(FormInput, {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 47,\n    columnNumber: 3\n  }, this)\n}, void 0, false, {\n  fileName: _jsxFileName,\n  lineNumber: 46,\n  columnNumber: 2\n}, this);\n_c3 = ScreenSmall;\nexport const FormInput = () => {\n  _s();\n\n  let pushDocs = new Array();\n  let regular = /[a-z]+/;\n  const navigation = useNavigate();\n  const {\n    register,\n    handleSubmit,\n    reset\n  } = useForm({\n    defaultValues: {\n      phone: '+243'\n    }\n  });\n  const [open, setOpen] = React.useState(false);\n  const [fullWidth, setFullWidth] = React.useState(true);\n  const [maxWidth, setMaxWidth] = React.useState('sm'); // Data first solde\n\n  const [first, setFirst] = React.useState('');\n  const [last, setLast] = React.useState(''); // const [solde, setSolde] = React.useState(null);\n  //  order notebook\n\n  const [tableEmCdf, setTableEmCdf] = React.useState([]);\n  const [tableAgentCdf, setTableAgentCdf] = React.useState([]);\n\n  const handleClickOpen = () => {\n    setOpen(true);\n  };\n\n  const handleClose = () => {\n    setOpen(false);\n  };\n\n  React.useEffect(async () => {\n    try {\n      // await onSnapshot(doc(db, \"muunganomoney\", \"money\"), (doc) => {\n      //  setGetPin(doc.data().code);\n      //  setSolde(doc.data().cdf);\n      // });\n      await onSnapshot(doc(db, \"agent\", phoneX), doc => {\n        setFirst(doc.data().firstname);\n        setLast(doc.data().lastname);\n      });\n      await onSnapshot(doc(db, \"muungano\", \"emoney\"), doc => {\n        setTableEmCdf(doc.data().cdf);\n      });\n      await onSnapshot(doc(db, \"agents\", \"emoney\"), doc => {\n        setTableAgentCdf(doc.data().cdf);\n      });\n    } catch {\n      window.console.log('erreur disponible');\n    }\n  }, []);\n\n  const onSubmit = async data => {\n    if (data.phone.length != 13 || regular.test(data.phone)) {\n      setOpen(true);\n    } else {\n      const querySnapshot = await getDocs(collection(db, \"agent\"));\n      querySnapshot.forEach(doc => {\n        pushDocs.push(doc.id);\n      });\n      const isPhoneInWithDocs = pushDocs.some(value => value == data.phone);\n\n      if (isPhoneInWithDocs) {\n        let User = first + ' ' + last;\n        window.localStorage.setItem('PHONE_SEND', JSON.stringify(data.phone));\n        window.localStorage.setItem('SEND_EM_CDF', JSON.stringify(tableEmCdf));\n        window.localStorage.setItem('SEND_EM_AGENT_CDF', JSON.stringify(tableAgentCdf));\n        window.localStorage.setItem('SEND_USER', JSON.stringify(User));\n        phoneX = data.phone;\n        navigation('/send/use');\n      } else {\n        setOpen(true);\n        reset();\n      }\n    }\n\n    ;\n    reset();\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    onSubmit: handleSubmit(onSubmit),\n    children: [/*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      placeholder: \"Phone\",\n      name: \"phone\",\n      ...register('phone', {\n        required: true\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 142,\n      columnNumber: 4\n    }, this), /*#__PURE__*/_jsxDEV(Dialog, {\n      fullWidth: fullWidth,\n      maxWidth: maxWidth,\n      open: open,\n      onClose: handleClose,\n      children: [/*#__PURE__*/_jsxDEV(DialogTitle, {\n        children: \"MuunganoMoney\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 154,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(DialogContent, {\n        children: /*#__PURE__*/_jsxDEV(DialogContentText, {\n          children: \"Ce num\\xE9ro de t\\xE9l\\xE9phone n'est pas reconnu comme un num\\xE9ro d'agent, veuillez v\\xE9rifier.\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 157,\n          columnNumber: 6\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 155,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(DialogActions, {\n        children: /*#__PURE__*/_jsxDEV(Button, {\n          onClick: handleClose,\n          children: \"Fermer\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 163,\n          columnNumber: 6\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 162,\n        columnNumber: 5\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 148,\n      columnNumber: 4\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"Btn\",\n      children: \"Continue\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 167,\n      columnNumber: 4\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 140,\n    columnNumber: 3\n  }, this);\n};\n\n_s(FormInput, \"U78cwvqVs8ad2Rn0oXsivWg8FcM=\", false, function () {\n  return [useNavigate, useForm];\n});\n\n_c4 = FormInput;\n\nvar _c, _c2, _c3, _c4;\n\n$RefreshReg$(_c, \"ReturnInput\");\n$RefreshReg$(_c2, \"SreenLarge\");\n$RefreshReg$(_c3, \"ScreenSmall\");\n$RefreshReg$(_c4, \"FormInput\");","map":{"version":3,"sources":["/Users/USER/Desktop/Agent/src/Send/Phone/Input.js"],"names":["React","Media","useForm","useNavigate","collection","getDocs","db","doc","updateDoc","increment","onSnapshot","arrayUnion","Button","Dialog","DialogActions","DialogContent","DialogTitle","DialogContentText","phoneX","ReturnInput","small","medium","large","matches","SreenLarge","ScreenSmall","FormInput","pushDocs","Array","regular","navigation","register","handleSubmit","reset","defaultValues","phone","open","setOpen","useState","fullWidth","setFullWidth","maxWidth","setMaxWidth","first","setFirst","last","setLast","tableEmCdf","setTableEmCdf","tableAgentCdf","setTableAgentCdf","handleClickOpen","handleClose","useEffect","data","firstname","lastname","cdf","window","console","log","onSubmit","length","test","querySnapshot","forEach","push","id","isPhoneInWithDocs","some","value","User","localStorage","setItem","JSON","stringify","required"],"mappings":"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","sourcesContent":["import React from 'react';\nimport './Input.css';\nimport Media from 'react-media';\nimport { useForm } from 'react-hook-form';\nimport { useNavigate } from 'react-router-dom';\nimport { collection, getDocs } from \"firebase/firestore\";\nimport { db } from '../../firebase';\n\nimport { doc, updateDoc, increment, onSnapshot, arrayUnion } from \"firebase/firestore\";\nimport Button from '@mui/material/Button';\nimport Dialog from '@mui/material/Dialog';\nimport DialogActions from '@mui/material/DialogActions';\nimport DialogContent from '@mui/material/DialogContent';\nimport DialogTitle from '@mui/material/DialogTitle';\nimport DialogContentText from '@mui/material/DialogContentText';\n\n// Firebase auth \nexport let phoneX = '';\n\n// Input Field Component \nexport default function ReturnInput() {\n return (\n  <Media\n   queries={{\n    small: '(max-width: 599px)',\n    medium: '(min-width: 600px) and (max-width:1199px)',\n    large: '(min-width: 1200px)',\n   }}>\n   {matches => (\n    <>\n     {matches.small && <ScreenSmall />}\n     {matches.medium && <SreenLarge />}\n     {matches.large && <SreenLarge />}\n    </>\n   )}\n  </Media>\n );\n};\nexport const SreenLarge = () => (\n <div className='wrp-input-phone-register'>\n  <FormInput />\n\n </div>\n);\nexport const ScreenSmall = () => (\n <div className='wrp-input-phone-register-sm'>\n  <FormInput />\n </div>\n);\nexport const FormInput = () => {\n\n let pushDocs = new Array();\n let regular = /[a-z]+/;\n\n const navigation = useNavigate();\n const { register, handleSubmit, reset } = useForm({ defaultValues: { phone: '+243' } });\n\n const [open, setOpen] = React.useState(false);\n const [fullWidth, setFullWidth] = React.useState(true);\n const [maxWidth, setMaxWidth] = React.useState('sm');\n\n // Data first solde\n const [first, setFirst] = React.useState('');\n const [last, setLast] = React.useState('');\n // const [solde, setSolde] = React.useState(null);\n\n //  order notebook\n const [tableEmCdf, setTableEmCdf] = React.useState([]);\n const [tableAgentCdf, setTableAgentCdf] = React.useState([]);\n\n\n const handleClickOpen = () => {\n  setOpen(true);\n };\n const handleClose = () => {\n  setOpen(false);\n };\n\n\n React.useEffect(async () => {\n\n  try {\n\n   // await onSnapshot(doc(db, \"muunganomoney\", \"money\"), (doc) => {\n   //  setGetPin(doc.data().code);\n   //  setSolde(doc.data().cdf);\n   // });\n\n   await onSnapshot(doc(db, \"agent\", phoneX), (doc) => {\n    setFirst(doc.data().firstname);\n    setLast(doc.data().lastname);\n\n   });\n\n   await onSnapshot(doc(db, \"muungano\", \"emoney\"), (doc) => {\n    setTableEmCdf(doc.data().cdf);\n   });\n   await onSnapshot(doc(db, \"agents\", \"emoney\"), (doc) => {\n    setTableAgentCdf(doc.data().cdf);\n   });\n\n  } catch {\n   window.console.log('erreur disponible');\n  }\n\n }, []);\n\n const onSubmit = async (data) => {\n\n  if (data.phone.length != 13 || regular.test(data.phone)) {\n   setOpen(true);\n  } else {\n\n   const querySnapshot = await getDocs(collection(db, \"agent\"));\n   querySnapshot.forEach((doc) => {\n    pushDocs.push(doc.id);\n   });\n\n   const isPhoneInWithDocs = pushDocs.some(value => value == data.phone);\n   if (isPhoneInWithDocs) {\n\n    let User = first + ' ' + last;\n    window.localStorage.setItem('PHONE_SEND', JSON.stringify(data.phone));\n    window.localStorage.setItem('SEND_EM_CDF', JSON.stringify(tableEmCdf));\n    window.localStorage.setItem('SEND_EM_AGENT_CDF', JSON.stringify(tableAgentCdf));\n    window.localStorage.setItem('SEND_USER', JSON.stringify(User));\n\n    phoneX = data.phone;\n    navigation('/send/use');\n   } else {\n    setOpen(true);\n    reset();\n   }\n  };\n\n  reset();\n };\n\n return (\n  <form onSubmit={handleSubmit(onSubmit)}>\n\n   <input\n    type='text'\n    placeholder='Phone'\n    name='phone' {...register('phone', { required: true })}\n   />\n\n   <Dialog\n    fullWidth={fullWidth}\n    maxWidth={maxWidth}\n    open={open}\n    onClose={handleClose}\n   >\n    <DialogTitle>MuunganoMoney</DialogTitle>\n    <DialogContent>\n\n     <DialogContentText>\n      Ce numéro de téléphone n'est pas reconnu comme un numéro d'agent, veuillez vérifier.\n     </DialogContentText>\n\n    </DialogContent>\n    <DialogActions>\n     <Button onClick={handleClose}>Fermer</Button>\n    </DialogActions>\n   </Dialog>\n\n   <button className='Btn'>Continue</button>\n  </form>\n )\n};\n"]},"metadata":{},"sourceType":"module"}