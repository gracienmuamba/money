{"ast":null,"code":"var _jsxFileName = \"/Users/USER/Desktop/Agent/src/LastFx/List/Swap.js\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport { db } from '../../firebase';\nimport { doc, onSnapshot, collection, getDocs } from \"firebase/firestore\";\nimport { phoneX } from '../../Phone/Input';\nimport './Swap.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nlet pushDocs = new Array(); // Swap Continue \n\nexport default function ReturnSwAp() {\n  _s();\n\n  const [toSwap, setToSwap] = React.useState([]);\n  React.useEffect(async () => {\n    const phoneUserTrafik = window.localStorage.getItem('PHONE_USER_TRAFIK');\n    const querySnapshot = await getDocs(collection(db, \"client\"));\n    querySnapshot.forEach(doc => {\n      // doc.data() is never undefined for query doc snapshots\n      pushDocs.push(doc.id);\n    });\n    const verifier = pushDocs.some(value => value == phoneX);\n    const unsub = onSnapshot(doc(db, verifier ? \"client\" : \"agent\", phoneX), doc => {\n      setToSwap(doc.data().swap);\n    });\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"wrp-swap-list\",\n    children: [...toSwap].map(value => {\n      let x = Object.values(value);\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"wrp-swap-sub-list\",\n        children: [...x].map(index => {\n          return /*#__PURE__*/_jsxDEV(\"h2\", {\n            children: index\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 42,\n            columnNumber: 11\n          }, this);\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 7\n      }, this);\n    })\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 32,\n    columnNumber: 3\n  }, this);\n}\n\n_s(ReturnSwAp, \"A0kyipEjKmBZeM5dT8b8Pk4SxrA=\");\n\n_c = ReturnSwAp;\n;\n\nvar _c;\n\n$RefreshReg$(_c, \"ReturnSwAp\");","map":{"version":3,"sources":["/Users/USER/Desktop/Agent/src/LastFx/List/Swap.js"],"names":["React","db","doc","onSnapshot","collection","getDocs","phoneX","pushDocs","Array","ReturnSwAp","toSwap","setToSwap","useState","useEffect","phoneUserTrafik","window","localStorage","getItem","querySnapshot","forEach","push","id","verifier","some","value","unsub","data","swap","map","x","Object","values","index"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,EAAT,QAAmB,gBAAnB;AACA,SAASC,GAAT,EAAcC,UAAd,EAA0BC,UAA1B,EAAsCC,OAAtC,QAAqD,oBAArD;AACA,SAASC,MAAT,QAAuB,mBAAvB;AACA,OAAO,YAAP;;AAEA,IAAIC,QAAQ,GAAG,IAAIC,KAAJ,EAAf,C,CAEA;;AACA,eAAe,SAASC,UAAT,GAAsB;AAAA;;AACpC,QAAM,CAACC,MAAD,EAASC,SAAT,IAAsBX,KAAK,CAACY,QAAN,CAAe,EAAf,CAA5B;AAEAZ,EAAAA,KAAK,CAACa,SAAN,CAAgB,YAAY;AAE3B,UAAMC,eAAe,GAAGC,MAAM,CAACC,YAAP,CAAoBC,OAApB,CAA4B,mBAA5B,CAAxB;AAEA,UAAMC,aAAa,GAAG,MAAMb,OAAO,CAACD,UAAU,CAACH,EAAD,EAAK,QAAL,CAAX,CAAnC;AACAiB,IAAAA,aAAa,CAACC,OAAd,CAAuBjB,GAAD,IAAS;AAC9B;AACAK,MAAAA,QAAQ,CAACa,IAAT,CAAclB,GAAG,CAACmB,EAAlB;AACA,KAHD;AAMA,UAAMC,QAAQ,GAAGf,QAAQ,CAACgB,IAAT,CAAcC,KAAK,IAAIA,KAAK,IAAIlB,MAAhC,CAAjB;AACA,UAAMmB,KAAK,GAAGtB,UAAU,CAACD,GAAG,CAACD,EAAD,EAAKqB,QAAQ,GAAG,QAAH,GAAc,OAA3B,EAAoChB,MAApC,CAAJ,EAAkDJ,GAAD,IAAS;AACjFS,MAAAA,SAAS,CAACT,GAAG,CAACwB,IAAJ,GAAWC,IAAZ,CAAT;AACA,KAFuB,CAAxB;AAIA,GAhBD,EAgBG,EAhBH;AAkBA,sBACC;AAAK,IAAA,SAAS,EAAC,eAAf;AAAA,cAEE,CAAC,GAAGjB,MAAJ,EAAYkB,GAAZ,CAAiBJ,KAAD,IAAW;AAE1B,UAAIK,CAAC,GAAGC,MAAM,CAACC,MAAP,CAAcP,KAAd,CAAR;AACA,0BACC;AAAK,QAAA,SAAS,EAAC,mBAAf;AAAA,kBAEE,CAAC,GAAGK,CAAJ,EAAOD,GAAP,CAAWI,KAAK,IAAI;AACnB,8BACC;AAAA,sBAAKA;AAAL;AAAA;AAAA;AAAA;AAAA,kBADD;AAGA,SAJD;AAFF;AAAA;AAAA;AAAA;AAAA,cADD;AAWA,KAdD;AAFF;AAAA;AAAA;AAAA;AAAA,UADD;AAqBA;;GA1CuBvB,U;;KAAAA,U;AA0CvB","sourcesContent":["import React from 'react';\nimport { db } from '../../firebase';\nimport { doc, onSnapshot, collection, getDocs } from \"firebase/firestore\";\nimport { phoneX } from '../../Phone/Input';\nimport './Swap.css';\n\nlet pushDocs = new Array();\n\n// Swap Continue \nexport default function ReturnSwAp() {\n const [toSwap, setToSwap] = React.useState([]);\n\n React.useEffect(async () => {\n\n  const phoneUserTrafik = window.localStorage.getItem('PHONE_USER_TRAFIK');\n\n  const querySnapshot = await getDocs(collection(db, \"client\"));\n  querySnapshot.forEach((doc) => {\n   // doc.data() is never undefined for query doc snapshots\n   pushDocs.push(doc.id);\n  });\n\n\n  const verifier = pushDocs.some(value => value == phoneX);\n  const unsub = onSnapshot(doc(db, verifier ? \"client\" : \"agent\", phoneX), (doc) => {\n   setToSwap(doc.data().swap);\n  });\n\n }, [])\n\n return (\n  <div className='wrp-swap-list'>\n   {\n    [...toSwap].map((value) => {\n\n     let x = Object.values(value);\n     return (\n      <div className='wrp-swap-sub-list'>\n       {\n        [...x].map(index => {\n         return (\n          <h2>{index}</h2>\n         )\n        })\n       }\n      </div>\n     )\n    })\n   }\n  </div>\n );\n};"]},"metadata":{},"sourceType":"module"}