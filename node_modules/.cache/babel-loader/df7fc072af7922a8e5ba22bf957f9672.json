{"ast":null,"code":"var _jsxFileName = \"/Users/USER/Documents/Money/src/Sign/Quote.js\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport './Quote.css';\nimport Media from 'react-media';\nimport { TweenMax, Expo } from 'gsap'; // REturn Quote \n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport default function REturnQuOte(props) {\n  return /*#__PURE__*/_jsxDEV(Media, {\n    queries: {\n      small: '(max-width: 599px)',\n      medium: '(min-width: 600px) and (max-width:1199px)',\n      large: '(min-width: 1200px)'\n    },\n    children: matches => /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [matches.small && /*#__PURE__*/_jsxDEV(ScreenSmall, {\n        Text: props.Text\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 18,\n        columnNumber: 24\n      }, this), matches.medium && /*#__PURE__*/_jsxDEV(ScreenLarge, {\n        Text: props.Text\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 19,\n        columnNumber: 25\n      }, this), matches.large && /*#__PURE__*/_jsxDEV(ScreenLarge, {\n        Text: props.Text\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 20,\n        columnNumber: 24\n      }, this)]\n    }, void 0, true)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 10,\n    columnNumber: 3\n  }, this);\n}\n_c = REturnQuOte;\n;\nexport const ScreenLarge = props => {\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"wrp-quote-sign\",\n    children: /*#__PURE__*/_jsxDEV(ViewText, {\n      Text: props.Text\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 4\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 28,\n    columnNumber: 3\n  }, this);\n};\n_c2 = ScreenLarge;\nexport const ScreenSmall = props => {\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"wrp-quote-sign-sm\",\n    children: /*#__PURE__*/_jsxDEV(ViewText, {\n      Text: props.Text\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 4\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 35,\n    columnNumber: 3\n  }, this);\n};\n_c3 = ScreenSmall;\nexport const ViewText = props => {\n  _s();\n\n  React.useEffect(() => {\n    TweenMax.from('.Anime', 1.5, {\n      delay: .5,\n      opacity: 0,\n      y: 0,\n      ease: Expo.easeIn\n    });\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"p\", {\n    className: \"Anime\",\n    children: props.Text\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 45,\n    columnNumber: 3\n  }, this);\n};\n\n_s(ViewText, \"OD7bBpZva5O2jO+Puf00hKivP7c=\");\n\n_c4 = ViewText;\n\nvar _c, _c2, _c3, _c4;\n\n$RefreshReg$(_c, \"REturnQuOte\");\n$RefreshReg$(_c2, \"ScreenLarge\");\n$RefreshReg$(_c3, \"ScreenSmall\");\n$RefreshReg$(_c4, \"ViewText\");","map":{"version":3,"sources":["/Users/USER/Documents/Money/src/Sign/Quote.js"],"names":["React","Media","TweenMax","Expo","REturnQuOte","props","small","medium","large","matches","Text","ScreenLarge","ScreenSmall","ViewText","useEffect","from","delay","opacity","y","ease","easeIn"],"mappings":";;;AACA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAO,aAAP;AACA,OAAOC,KAAP,MAAkB,aAAlB;AACA,SAASC,QAAT,EAAmBC,IAAnB,QAA+B,MAA/B,C,CAEA;;;;AACA,eAAe,SAASC,WAAT,CAAqBC,KAArB,EAA4B;AAC1C,sBACC,QAAC,KAAD;AACC,IAAA,OAAO,EAAE;AACRC,MAAAA,KAAK,EAAE,oBADC;AAERC,MAAAA,MAAM,EAAE,2CAFA;AAGRC,MAAAA,KAAK,EAAE;AAHC,KADV;AAAA,cAMEC,OAAO,iBACP;AAAA,iBACEA,OAAO,CAACH,KAAR,iBAAiB,QAAC,WAAD;AAAa,QAAA,IAAI,EAAED,KAAK,CAACK;AAAzB;AAAA;AAAA;AAAA;AAAA,cADnB,EAEED,OAAO,CAACF,MAAR,iBAAkB,QAAC,WAAD;AAAa,QAAA,IAAI,EAAEF,KAAK,CAACK;AAAzB;AAAA;AAAA;AAAA;AAAA,cAFpB,EAGED,OAAO,CAACD,KAAR,iBAAiB,QAAC,WAAD;AAAa,QAAA,IAAI,EAAEH,KAAK,CAACK;AAAzB;AAAA;AAAA;AAAA;AAAA,cAHnB;AAAA;AAPF;AAAA;AAAA;AAAA;AAAA,UADD;AAgBA;KAjBuBN,W;AAiBvB;AACD,OAAO,MAAMO,WAAW,GAAIN,KAAD,IAAW;AACrC,sBACC;AAAK,IAAA,SAAS,EAAC,gBAAf;AAAA,2BACC,QAAC,QAAD;AAAU,MAAA,IAAI,EAAEA,KAAK,CAACK;AAAtB;AAAA;AAAA;AAAA;AAAA;AADD;AAAA;AAAA;AAAA;AAAA,UADD;AAKA,CANM;MAAMC,W;AAOb,OAAO,MAAMC,WAAW,GAAIP,KAAD,IAAW;AACrC,sBACC;AAAK,IAAA,SAAS,EAAC,mBAAf;AAAA,2BACC,QAAC,QAAD;AAAU,MAAA,IAAI,EAAEA,KAAK,CAACK;AAAtB;AAAA;AAAA;AAAA;AAAA;AADD;AAAA;AAAA;AAAA;AAAA,UADD;AAKA,CANM;MAAME,W;AAOb,OAAO,MAAMC,QAAQ,GAAIR,KAAD,IAAW;AAAA;;AAClCL,EAAAA,KAAK,CAACc,SAAN,CAAgB,MAAM;AACrBZ,IAAAA,QAAQ,CAACa,IAAT,CAAc,QAAd,EAAwB,GAAxB,EAA6B;AAAEC,MAAAA,KAAK,EAAE,EAAT;AAAaC,MAAAA,OAAO,EAAE,CAAtB;AAAyBC,MAAAA,CAAC,EAAE,CAA5B;AAA+BC,MAAAA,IAAI,EAAEhB,IAAI,CAACiB;AAA1C,KAA7B;AACA,GAFD,EAEG,EAFH;AAGA,sBACC;AAAG,IAAA,SAAS,EAAC,OAAb;AAAA,cAAsBf,KAAK,CAACK;AAA5B;AAAA;AAAA;AAAA;AAAA,UADD;AAGA,CAPM;;GAAMG,Q;;MAAAA,Q","sourcesContent":["\nimport React from 'react';\nimport './Quote.css';\nimport Media from 'react-media';\nimport { TweenMax, Expo } from 'gsap';\n\n// REturn Quote \nexport default function REturnQuOte(props) {\n return (\n  <Media\n   queries={{\n    small: '(max-width: 599px)',\n    medium: '(min-width: 600px) and (max-width:1199px)',\n    large: '(min-width: 1200px)',\n   }}>\n   {matches => (\n    <>\n     {matches.small && <ScreenSmall Text={props.Text} />}\n     {matches.medium && <ScreenLarge Text={props.Text} />}\n     {matches.large && <ScreenLarge Text={props.Text} />}\n    </>\n   )}\n  </Media>\n );\n};\nexport const ScreenLarge = (props) => {\n return (\n  <div className='wrp-quote-sign'>\n   <ViewText Text={props.Text} />\n  </div>\n )\n};\nexport const ScreenSmall = (props) => {\n return (\n  <div className='wrp-quote-sign-sm'>\n   <ViewText Text={props.Text} />\n  </div>\n )\n};\nexport const ViewText = (props) => {\n React.useEffect(() => {\n  TweenMax.from('.Anime', 1.5, { delay: .5, opacity: 0, y: 0, ease: Expo.easeIn });\n }, []);\n return (\n  <p className='Anime'>{props.Text}</p>\n );\n};"]},"metadata":{},"sourceType":"module"}