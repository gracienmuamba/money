{"ast":null,"code":"var _jsxFileName = \"/Users/USER/Desktop/MuunganoMoney/src/Dash/Home/Head/Setting.js\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport GridLoader from 'react-spinners/GridLoader';\nimport { BsFillPersonFill } from 'react-icons/bs';\nimport Media from 'react-media';\nimport { useNavigate } from 'react-router-dom'; // Return Wallet \n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport default function ReturnSetting() {\n  return /*#__PURE__*/_jsxDEV(Media, {\n    queries: {\n      small: '(max-width: 599px)',\n      medium: '(min-width: 600px) and (max-width:1199px)',\n      large: '(min-width: 1200px)'\n    },\n    children: matches => /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [matches.small && /*#__PURE__*/_jsxDEV(ScreenSmall, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 18,\n        columnNumber: 29\n      }, this), matches.medium && /*#__PURE__*/_jsxDEV(ScreenLarge, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 19,\n        columnNumber: 30\n      }, this), matches.large && /*#__PURE__*/_jsxDEV(ScreenLarge, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 20,\n        columnNumber: 29\n      }, this)]\n    }, void 0, true)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 10,\n    columnNumber: 5\n  }, this);\n}\n_c = ReturnSetting;\n;\nexport const ScreenLarge = () => /*#__PURE__*/_jsxDEV(IconSetting, {\n  sizing: '1.1em'\n}, void 0, false, {\n  fileName: _jsxFileName,\n  lineNumber: 28,\n  columnNumber: 3\n}, this);\n_c2 = ScreenLarge;\nexport const ScreenSmall = () => /*#__PURE__*/_jsxDEV(IconSetting, {\n  sizing: '7vw'\n}, void 0, false, {\n  fileName: _jsxFileName,\n  lineNumber: 31,\n  columnNumber: 3\n}, this);\n_c3 = ScreenSmall;\nexport const IconSetting = props => {\n  _s();\n\n  const [loading, setLoading] = React.useState(false);\n  const navigation = useNavigate();\n\n  const handlepath = event => {\n    event.preventDefault();\n    setLoading(true);\n    setTimeout(() => {\n      setLoading(false);\n      navigation('/profil');\n    }, 3600);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: loading ? /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"App-loading\",\n      children: /*#__PURE__*/_jsxDEV(GridLoader, {\n        size: 15,\n        color: '#123abc',\n        loading: loading\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 13\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 11\n    }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        cursor: 'pointer'\n      },\n      onClick: handlepath,\n      children: /*#__PURE__*/_jsxDEV(BsFillPersonFill, {\n        size: props.sizing\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 13\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 11\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 51,\n    columnNumber: 5\n  }, this);\n};\n\n_s(IconSetting, \"YAwFZkdKgFXLpNLeG22DwPlfofI=\", false, function () {\n  return [useNavigate];\n});\n\n_c4 = IconSetting;\n\nvar _c, _c2, _c3, _c4;\n\n$RefreshReg$(_c, \"ReturnSetting\");\n$RefreshReg$(_c2, \"ScreenLarge\");\n$RefreshReg$(_c3, \"ScreenSmall\");\n$RefreshReg$(_c4, \"IconSetting\");","map":{"version":3,"sources":["/Users/USER/Desktop/MuunganoMoney/src/Dash/Home/Head/Setting.js"],"names":["React","GridLoader","BsFillPersonFill","Media","useNavigate","ReturnSetting","small","medium","large","matches","ScreenLarge","ScreenSmall","IconSetting","props","loading","setLoading","useState","navigation","handlepath","event","preventDefault","setTimeout","cursor","sizing"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,UAAP,MAAuB,2BAAvB;AACA,SAASC,gBAAT,QAAiC,gBAAjC;AACA,OAAOC,KAAP,MAAkB,aAAlB;AACA,SAASC,WAAT,QAA4B,kBAA5B,C,CAEA;;;;AACA,eAAe,SAASC,aAAT,GAAyB;AACtC,sBACE,QAAC,KAAD;AACE,IAAA,OAAO,EAAE;AACPC,MAAAA,KAAK,EAAE,oBADA;AAEPC,MAAAA,MAAM,EAAE,2CAFD;AAGPC,MAAAA,KAAK,EAAE;AAHA,KADX;AAAA,cAMGC,OAAO,iBACN;AAAA,iBACGA,OAAO,CAACH,KAAR,iBAAiB,QAAC,WAAD;AAAA;AAAA;AAAA;AAAA,cADpB,EAEGG,OAAO,CAACF,MAAR,iBAAkB,QAAC,WAAD;AAAA;AAAA;AAAA;AAAA,cAFrB,EAGGE,OAAO,CAACD,KAAR,iBAAiB,QAAC,WAAD;AAAA;AAAA;AAAA;AAAA,cAHpB;AAAA;AAPJ;AAAA;AAAA;AAAA;AAAA,UADF;AAgBD;KAjBuBH,a;AAiBvB;AAED,OAAO,MAAMK,WAAW,GAAG,mBACzB,QAAC,WAAD;AAAa,EAAA,MAAM,EAAE;AAArB;AAAA;AAAA;AAAA;AAAA,QADK;MAAMA,W;AAGb,OAAO,MAAMC,WAAW,GAAG,mBACzB,QAAC,WAAD;AAAa,EAAA,MAAM,EAAE;AAArB;AAAA;AAAA;AAAA;AAAA,QADK;MAAMA,W;AAIb,OAAO,MAAMC,WAAW,GAAIC,KAAD,IAAW;AAAA;;AAEpC,QAAM,CAACC,OAAD,EAAUC,UAAV,IAAwBf,KAAK,CAACgB,QAAN,CAAe,KAAf,CAA9B;AACA,QAAMC,UAAU,GAAGb,WAAW,EAA9B;;AAEA,QAAMc,UAAU,GAAIC,KAAD,IAAW;AAC5BA,IAAAA,KAAK,CAACC,cAAN;AACAL,IAAAA,UAAU,CAAC,IAAD,CAAV;AAEAM,IAAAA,UAAU,CAAC,MAAM;AACfN,MAAAA,UAAU,CAAC,KAAD,CAAV;AACAE,MAAAA,UAAU,CAAC,SAAD,CAAV;AACD,KAHS,EAGP,IAHO,CAAV;AAKD,GATD;;AAWA,sBACE;AAAA,cAEIH,OAAO,gBACL;AAAK,MAAA,SAAS,EAAC,aAAf;AAAA,6BACE,QAAC,UAAD;AACE,QAAA,IAAI,EAAE,EADR;AAEE,QAAA,KAAK,EAAE,SAFT;AAGE,QAAA,OAAO,EAAEA;AAHX;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,YADK,gBASL;AAAK,MAAA,KAAK,EAAE;AAAEQ,QAAAA,MAAM,EAAE;AAAV,OAAZ;AAAmC,MAAA,OAAO,EAAEJ,UAA5C;AAAA,6BACE,QAAC,gBAAD;AAAkB,QAAA,IAAI,EAAEL,KAAK,CAACU;AAA9B;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA;AAXN;AAAA;AAAA;AAAA;AAAA,UADF;AAkBD,CAlCM;;GAAMX,W;UAGQR,W;;;MAHRQ,W","sourcesContent":["import React from 'react';\nimport GridLoader from 'react-spinners/GridLoader';\nimport { BsFillPersonFill } from 'react-icons/bs';\nimport Media from 'react-media';\nimport { useNavigate } from 'react-router-dom';\n\n// Return Wallet \nexport default function ReturnSetting() {\n  return (\n    <Media\n      queries={{\n        small: '(max-width: 599px)',\n        medium: '(min-width: 600px) and (max-width:1199px)',\n        large: '(min-width: 1200px)',\n      }}>\n      {matches => (\n        <>\n          {matches.small && <ScreenSmall />}\n          {matches.medium && <ScreenLarge />}\n          {matches.large && <ScreenLarge />}\n        </>\n      )}\n    </Media>\n  );\n};\n\nexport const ScreenLarge = () => (\n  <IconSetting sizing={'1.1em'} />\n);\nexport const ScreenSmall = () => (\n  <IconSetting sizing={'7vw'} />\n);\n\nexport const IconSetting = (props) => {\n\n  const [loading, setLoading] = React.useState(false);\n  const navigation = useNavigate();\n\n  const handlepath = (event) => {\n    event.preventDefault();\n    setLoading(true);\n\n    setTimeout(() => {\n      setLoading(false);\n      navigation('/profil');\n    }, 3600);\n\n  };\n\n  return (\n    <div>\n      {\n        loading ?\n          <div className='App-loading'>\n            <GridLoader\n              size={15}\n              color={'#123abc'}\n              loading={loading}\n            />\n          </div>\n          :\n          <div style={{ cursor: 'pointer' }} onClick={handlepath}>\n            <BsFillPersonFill size={props.sizing} />\n          </div>\n      }\n    </div>\n  )\n};"]},"metadata":{},"sourceType":"module"}