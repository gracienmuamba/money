{"ast":null,"code":"var _jsxFileName = \"/Users/USER/Desktop/MuunganoMoney/src/WellBlocked/Date.js\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport './Date.css';\nimport Media from 'react-media';\nimport { phoneX } from '../Sign/Input';\nimport { doc, getDoc, collection, getDocs } from \"firebase/firestore\";\nimport { db } from '../firebase';\nimport moment from 'moment'; // Return Date \n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport default function RetuRnDate() {\n  return /*#__PURE__*/_jsxDEV(Media, {\n    queries: {\n      small: '(max-width: 599px)',\n      medium: '(min-width: 600px) and (max-width:1199px)',\n      large: '(min-width: 1200px)'\n    },\n    children: matches => /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [matches.small && /*#__PURE__*/_jsxDEV(ScreenSmall, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 22,\n        columnNumber: 24\n      }, this), matches.medium && /*#__PURE__*/_jsxDEV(ScreenLarge, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 23,\n        columnNumber: 25\n      }, this), matches.large && /*#__PURE__*/_jsxDEV(ScreenLarge, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 24,\n        columnNumber: 24\n      }, this)]\n    }, void 0, true)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 14,\n    columnNumber: 3\n  }, this);\n}\n_c = RetuRnDate;\n;\nexport const ScreenLarge = () => /*#__PURE__*/_jsxDEV(\"div\", {\n  className: \"wrp-date-fcwell\",\n  children: /*#__PURE__*/_jsxDEV(ViewTimesTamp, {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 33,\n    columnNumber: 3\n  }, this)\n}, void 0, false, {\n  fileName: _jsxFileName,\n  lineNumber: 32,\n  columnNumber: 2\n}, this);\n_c2 = ScreenLarge;\nexport const ScreenSmall = () => /*#__PURE__*/_jsxDEV(\"div\", {\n  className: \"wrp-date-fcwell-sm\",\n  children: /*#__PURE__*/_jsxDEV(ViewTimesTamp, {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 38,\n    columnNumber: 3\n  }, this)\n}, void 0, false, {\n  fileName: _jsxFileName,\n  lineNumber: 37,\n  columnNumber: 2\n}, this);\n_c3 = ScreenSmall;\nexport const ViewTimesTamp = () => {\n  _s();\n\n  let pushDocs = new Array();\n  const [delayExch, setDelayExch] = React.useState(`${new Date()}`); // React.useEffect(async () => {\n  //  const querySnapshot = await getDocs(collection(db, \"client\"));\n  //  querySnapshot.forEach((doc) => {\n  //   pushDocs.push(doc.id);\n  //  });\n  //  const verifierCollection = pushDocs.some(value => value == phoneX);\n  //  const docRef = doc(db, verifierCollection ? \"client\" : \"agent\", phoneX);\n  //  const docSnap = await getDoc(docRef);\n  //  if (docSnap.exists()) {\n  //   setDelayExch(docSnap.data().delay.toDate().toString());\n  //  }\n  // }, []);\n\n  return /*#__PURE__*/_jsxDEV(\"p\", {\n    children: moment(delayExch).format('LLLL')\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 64,\n    columnNumber: 3\n  }, this);\n};\n\n_s(ViewTimesTamp, \"oD2pETuKc/oo12d0aEWuh4kdsWM=\");\n\n_c4 = ViewTimesTamp;\n\nvar _c, _c2, _c3, _c4;\n\n$RefreshReg$(_c, \"RetuRnDate\");\n$RefreshReg$(_c2, \"ScreenLarge\");\n$RefreshReg$(_c3, \"ScreenSmall\");\n$RefreshReg$(_c4, \"ViewTimesTamp\");","map":{"version":3,"sources":["/Users/USER/Desktop/MuunganoMoney/src/WellBlocked/Date.js"],"names":["React","Media","phoneX","doc","getDoc","collection","getDocs","db","moment","RetuRnDate","small","medium","large","matches","ScreenLarge","ScreenSmall","ViewTimesTamp","pushDocs","Array","delayExch","setDelayExch","useState","Date","format"],"mappings":";;;AACA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAO,YAAP;AACA,OAAOC,KAAP,MAAkB,aAAlB;AACA,SAASC,MAAT,QAAuB,eAAvB;AAEA,SAASC,GAAT,EAAcC,MAAd,EAAsBC,UAAtB,EAAkCC,OAAlC,QAAiD,oBAAjD;AACA,SAASC,EAAT,QAAmB,aAAnB;AACA,OAAOC,MAAP,MAAmB,QAAnB,C,CAEA;;;;AACA,eAAe,SAASC,UAAT,GAAsB;AACpC,sBACC,QAAC,KAAD;AACC,IAAA,OAAO,EAAE;AACRC,MAAAA,KAAK,EAAE,oBADC;AAERC,MAAAA,MAAM,EAAE,2CAFA;AAGRC,MAAAA,KAAK,EAAE;AAHC,KADV;AAAA,cAMEC,OAAO,iBACP;AAAA,iBACEA,OAAO,CAACH,KAAR,iBAAiB,QAAC,WAAD;AAAA;AAAA;AAAA;AAAA,cADnB,EAEEG,OAAO,CAACF,MAAR,iBAAkB,QAAC,WAAD;AAAA;AAAA;AAAA;AAAA,cAFpB,EAGEE,OAAO,CAACD,KAAR,iBAAiB,QAAC,WAAD;AAAA;AAAA;AAAA;AAAA,cAHnB;AAAA;AAPF;AAAA;AAAA;AAAA;AAAA,UADD;AAgBA;KAjBuBH,U;AAiBvB;AAED,OAAO,MAAMK,WAAW,GAAG,mBAC1B;AAAK,EAAA,SAAS,EAAC,iBAAf;AAAA,yBACC,QAAC,aAAD;AAAA;AAAA;AAAA;AAAA;AADD;AAAA;AAAA;AAAA;AAAA,QADM;MAAMA,W;AAKb,OAAO,MAAMC,WAAW,GAAG,mBAC1B;AAAK,EAAA,SAAS,EAAC,oBAAf;AAAA,yBACC,QAAC,aAAD;AAAA;AAAA;AAAA;AAAA;AADD;AAAA;AAAA;AAAA;AAAA,QADM;MAAMA,W;AAKb,OAAO,MAAMC,aAAa,GAAG,MAAM;AAAA;;AAElC,MAAIC,QAAQ,GAAG,IAAIC,KAAJ,EAAf;AACA,QAAM,CAACC,SAAD,EAAYC,YAAZ,IAA4BpB,KAAK,CAACqB,QAAN,CAAgB,GAAE,IAAIC,IAAJ,EAAW,EAA7B,CAAlC,CAHkC,CAKlC;AAEA;AACA;AACA;AAEA;AAEA;AACA;AAEA;AACA;AACA;AACA;AACA;;AAEA,sBACC;AAAA,cAAId,MAAM,CAACW,SAAD,CAAN,CAAkBI,MAAlB,CAAyB,MAAzB;AAAJ;AAAA;AAAA;AAAA;AAAA,UADD;AAGA,CAzBM;;GAAMP,a;;MAAAA,a","sourcesContent":["\nimport React from 'react';\nimport './Date.css';\nimport Media from 'react-media';\nimport { phoneX } from '../Sign/Input';\n\nimport { doc, getDoc, collection, getDocs } from \"firebase/firestore\";\nimport { db } from '../firebase';\nimport moment from 'moment';\n\n// Return Date \nexport default function RetuRnDate() {\n return (\n  <Media\n   queries={{\n    small: '(max-width: 599px)',\n    medium: '(min-width: 600px) and (max-width:1199px)',\n    large: '(min-width: 1200px)',\n   }}>\n   {matches => (\n    <>\n     {matches.small && <ScreenSmall />}\n     {matches.medium && <ScreenLarge />}\n     {matches.large && <ScreenLarge />}\n    </>\n   )}\n  </Media>\n );\n};\n\nexport const ScreenLarge = () => (\n <div className='wrp-date-fcwell'>\n  <ViewTimesTamp />\n </div>\n);\nexport const ScreenSmall = () => (\n <div className='wrp-date-fcwell-sm'>\n  <ViewTimesTamp />\n </div>\n);\nexport const ViewTimesTamp = () => {\n\n let pushDocs = new Array();\n const [delayExch, setDelayExch] = React.useState(`${new Date()}`);\n\n // React.useEffect(async () => {\n\n //  const querySnapshot = await getDocs(collection(db, \"client\"));\n //  querySnapshot.forEach((doc) => {\n //   pushDocs.push(doc.id);\n\n //  });\n\n //  const verifierCollection = pushDocs.some(value => value == phoneX);\n //  const docRef = doc(db, verifierCollection ? \"client\" : \"agent\", phoneX);\n\n //  const docSnap = await getDoc(docRef);\n //  if (docSnap.exists()) {\n //   setDelayExch(docSnap.data().delay.toDate().toString());\n //  }\n // }, []);\n\n return (\n  <p>{moment(delayExch).format('LLLL')}</p>\n );\n};"]},"metadata":{},"sourceType":"module"}