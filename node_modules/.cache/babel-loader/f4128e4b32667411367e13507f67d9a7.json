{"ast":null,"code":"var _jsxFileName = \"/Users/USER/Desktop/Agent/src/Hm/Sign/Input.js\",\n    _s = $RefreshSig$();\n\nimport './Input.css';\nimport { useForm } from 'react-hook-form';\nimport { useNavigate } from 'react-router-dom';\nimport { auth } from '../../firebase';\nimport { createUserWithEmailAndPassword, signInWithEmailAndPassword } from \"firebase/auth\"; // Input form field \n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function ReturnInPut() {\n  _s();\n\n  const navigation = useNavigate();\n  const {\n    register,\n    handleSubmit,\n    reset\n  } = useForm(); // Ref collection database!\n\n  const onSubmit = async data => {\n    // await createUserWithEmailAndPassword(auth, data.email, data.password)\n    //  .then((userCredential) => {\n    //   // Signed in \n    //   const user = userCredential.user;\n    //   console.log(user);\n    //  })\n    //  .catch((error) => {\n    //   const errorCode = error.code;\n    //   const errorMessage = error.message;\n    //   window.console.log(errorCode + ' ' + errorMessage);\n    //   window.alert(`L'accès n'est pas autorisé,e-mail ou mot de passe administrateur, n'est pas valide.`);\n    //   reset();\n    //  });\n    await signInWithEmailAndPassword(auth, data.email, data.password).then(userCredential => {\n      // Signed in \n      const user = userCredential.user;\n\n      if (user.uid != '5c4lmhTZMoQt0Xse1nPRcVXXkk13') {\n        window.alert(`L'accès n'est pas autorisé,e-mail ou mot de passe administrateur, n'est pas valide.`);\n        reset();\n      } else {\n        navigation('/dash');\n      }\n    }).catch(error => {\n      const errorCode = error.code;\n      const errorMessage = error.message;\n      window.console.log(errorCode + ' ' + errorMessage);\n      window.alert(`L'accès n'est pas autorisé,e-mail ou mot de passe administrateur, n'est pas valide.`);\n      reset();\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"wrp-input-sign\",\n    children: /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit(onSubmit),\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        placeholder: \"example@email.com\",\n        ...register('email', {\n          required: true\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"password\",\n        placeholder: \"\\u2022\\u2022\\u2022\\u2022\\u2022\\u2022\\u2022\",\n        ...register('password', {\n          required: true\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"Btn\",\n        children: \"Connexion\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 57,\n    columnNumber: 5\n  }, this);\n}\n\n_s(ReturnInPut, \"LGK4nv2gX2cLYE4YdxN86BiEBgQ=\", false, function () {\n  return [useNavigate, useForm];\n});\n\n_c = ReturnInPut;\n;\n\nvar _c;\n\n$RefreshReg$(_c, \"ReturnInPut\");","map":{"version":3,"sources":["/Users/USER/Desktop/Agent/src/Hm/Sign/Input.js"],"names":["useForm","useNavigate","auth","createUserWithEmailAndPassword","signInWithEmailAndPassword","ReturnInPut","navigation","register","handleSubmit","reset","onSubmit","data","email","password","then","userCredential","user","uid","window","alert","catch","error","errorCode","code","errorMessage","message","console","log","required"],"mappings":";;;AACA,OAAO,aAAP;AACA,SAASA,OAAT,QAAwB,iBAAxB;AACA,SAASC,WAAT,QAA4B,kBAA5B;AACA,SAASC,IAAT,QAAqB,gBAArB;AACA,SAASC,8BAAT,EAAyCC,0BAAzC,QAA2E,eAA3E,C,CAEA;;;AACA,eAAe,SAASC,WAAT,GAAuB;AAAA;;AAEpC,QAAMC,UAAU,GAAGL,WAAW,EAA9B;AACA,QAAM;AAAEM,IAAAA,QAAF;AAAYC,IAAAA,YAAZ;AAA0BC,IAAAA;AAA1B,MAAoCT,OAAO,EAAjD,CAHoC,CAKpC;;AACA,QAAMU,QAAQ,GAAG,MAAOC,IAAP,IAAgB;AAG/B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAGA,UAAMP,0BAA0B,CAACF,IAAD,EAAOS,IAAI,CAACC,KAAZ,EAAmBD,IAAI,CAACE,QAAxB,CAA1B,CACHC,IADG,CACGC,cAAD,IAAoB;AACxB;AACA,YAAMC,IAAI,GAAGD,cAAc,CAACC,IAA5B;;AAEA,UAAIA,IAAI,CAACC,GAAL,IAAY,8BAAhB,EAAgD;AAC9CC,QAAAA,MAAM,CAACC,KAAP,CAAc,qFAAd;AACAV,QAAAA,KAAK;AACN,OAHD,MAGO;AACLH,QAAAA,UAAU,CAAC,OAAD,CAAV;AACD;AAEF,KAZG,EAaHc,KAbG,CAaIC,KAAD,IAAW;AAChB,YAAMC,SAAS,GAAGD,KAAK,CAACE,IAAxB;AACA,YAAMC,YAAY,GAAGH,KAAK,CAACI,OAA3B;AACAP,MAAAA,MAAM,CAACQ,OAAP,CAAeC,GAAf,CAAmBL,SAAS,GAAG,GAAZ,GAAkBE,YAArC;AACAN,MAAAA,MAAM,CAACC,KAAP,CAAc,qFAAd;AACAV,MAAAA,KAAK;AACN,KAnBG,CAAN;AAqBD,GAvCD;;AAyCA,sBACE;AAAK,IAAA,SAAS,EAAC,gBAAf;AAAA,2BACE;AAAM,MAAA,QAAQ,EAAED,YAAY,CAACE,QAAD,CAA5B;AAAA,8BACE;AAAO,QAAA,IAAI,EAAC,MAAZ;AAAmB,QAAA,WAAW,EAAC,mBAA/B;AAAA,WAAwDH,QAAQ,CAAC,OAAD,EAAU;AAAEqB,UAAAA,QAAQ,EAAE;AAAZ,SAAV;AAAhE;AAAA;AAAA;AAAA;AAAA,cADF,eAEE;AAAO,QAAA,IAAI,EAAC,UAAZ;AAAuB,QAAA,WAAW,EAAC,4CAAnC;AAAA,WAAkDrB,QAAQ,CAAC,UAAD,EAAa;AAAEqB,UAAAA,QAAQ,EAAE;AAAZ,SAAb;AAA1D;AAAA;AAAA;AAAA;AAAA,cAFF,eAGE;AAAQ,QAAA,SAAS,EAAC,KAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAHF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,UADF;AASD;;GAxDuBvB,W;UAEHJ,W,EACuBD,O;;;KAHpBK,W;AAwDvB","sourcesContent":["\nimport './Input.css';\nimport { useForm } from 'react-hook-form';\nimport { useNavigate } from 'react-router-dom';\nimport { auth } from '../../firebase';\nimport { createUserWithEmailAndPassword, signInWithEmailAndPassword } from \"firebase/auth\";\n\n// Input form field \nexport default function ReturnInPut() {\n\n  const navigation = useNavigate();\n  const { register, handleSubmit, reset } = useForm();\n\n  // Ref collection database!\n  const onSubmit = async (data) => {\n\n\n    // await createUserWithEmailAndPassword(auth, data.email, data.password)\n    //  .then((userCredential) => {\n    //   // Signed in \n    //   const user = userCredential.user;\n    //   console.log(user);\n    //  })\n    //  .catch((error) => {\n    //   const errorCode = error.code;\n    //   const errorMessage = error.message;\n    //   window.console.log(errorCode + ' ' + errorMessage);\n    //   window.alert(`L'accès n'est pas autorisé,e-mail ou mot de passe administrateur, n'est pas valide.`);\n    //   reset();\n    //  });\n\n\n    await signInWithEmailAndPassword(auth, data.email, data.password)\n      .then((userCredential) => {\n        // Signed in \n        const user = userCredential.user;\n\n        if (user.uid != '5c4lmhTZMoQt0Xse1nPRcVXXkk13') {\n          window.alert(`L'accès n'est pas autorisé,e-mail ou mot de passe administrateur, n'est pas valide.`);\n          reset();\n        } else {\n          navigation('/dash');\n        }\n\n      })\n      .catch((error) => {\n        const errorCode = error.code;\n        const errorMessage = error.message;\n        window.console.log(errorCode + ' ' + errorMessage);\n        window.alert(`L'accès n'est pas autorisé,e-mail ou mot de passe administrateur, n'est pas valide.`);\n        reset();\n      });\n\n  };\n\n  return (\n    <div className='wrp-input-sign'>\n      <form onSubmit={handleSubmit(onSubmit)}>\n        <input type='text' placeholder='example@email.com'  {...register('email', { required: true })} />\n        <input type='password' placeholder='•••••••'  {...register('password', { required: true })} />\n        <button className='Btn'>Connexion</button>\n      </form>\n    </div>\n  );\n};"]},"metadata":{},"sourceType":"module"}