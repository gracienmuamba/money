{"ast":null,"code":"var _jsxFileName = \"/Users/USER/Documents/Money/src/Profil/Pin/Now/Input.js\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport './Input.css';\nimport Media from 'react-media';\nimport { useNavigate } from 'react-router-dom';\nimport { useForm, Controller } from 'react-hook-form';\nimport { collection, getDocs, doc, onSnapshot } from 'firebase/firestore';\nimport { db } from '../../../firebase';\nimport Button from '@mui/material/Button';\nimport Dialog from '@mui/material/Dialog';\nimport DialogActions from '@mui/material/DialogActions';\nimport DialogContent from '@mui/material/DialogContent';\nimport DialogTitle from '@mui/material/DialogTitle';\nimport DialogContentText from '@mui/material/DialogContentText';\nimport IconButton from '@mui/material/IconButton';\nimport Input from '@mui/material/Input';\nimport InputLabel from '@mui/material/InputLabel';\nimport InputAdornment from '@mui/material/InputAdornment';\nimport FormControl from '@mui/material/FormControl';\nimport Visibility from '@mui/icons-material/Visibility';\nimport VisibilityOff from '@mui/icons-material/VisibilityOff'; // View Form Update view\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport default function ReturnFormUpdate() {\n  return /*#__PURE__*/_jsxDEV(Media, {\n    queries: {\n      small: '(max-width: 599px)',\n      medium: '(min-width: 600px) and (max-width:1199px)',\n      large: '(min-width: 1200px)'\n    },\n    children: matches => /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [matches.small && /*#__PURE__*/_jsxDEV(ScreenSmall, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 29\n      }, this), matches.medium && /*#__PURE__*/_jsxDEV(ScreenLarge, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 30\n      }, this), matches.large && /*#__PURE__*/_jsxDEV(ScreenLarge, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 29\n      }, this)]\n    }, void 0, true)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 29,\n    columnNumber: 5\n  }, this);\n}\n_c = ReturnFormUpdate;\n;\nexport const ScreenLarge = () => /*#__PURE__*/_jsxDEV(\"div\", {\n  className: \"wrp-form-input-nows\",\n  children: /*#__PURE__*/_jsxDEV(FormInputField, {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 48,\n    columnNumber: 5\n  }, this)\n}, void 0, false, {\n  fileName: _jsxFileName,\n  lineNumber: 47,\n  columnNumber: 3\n}, this);\n_c2 = ScreenLarge;\nexport const ScreenSmall = () => /*#__PURE__*/_jsxDEV(\"div\", {\n  className: \"wrp-form-input-nows\",\n  children: /*#__PURE__*/_jsxDEV(FormInputField, {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 53,\n    columnNumber: 5\n  }, this)\n}, void 0, false, {\n  fileName: _jsxFileName,\n  lineNumber: 52,\n  columnNumber: 3\n}, this);\n_c3 = ScreenSmall;\nexport const FormInputField = () => {\n  _s();\n\n  let pushDocs = new Array();\n  let regular = /[a-z]+/;\n  const navigation = useNavigate();\n  const {\n    handleSubmit,\n    reset,\n    control\n  } = useForm();\n  const [pin, setPin] = React.useState(null);\n  const [open, setOpen] = React.useState(false);\n  const [fullWidth, setFullWidth] = React.useState(true);\n  const [maxWidth, setMaxWidth] = React.useState('sm');\n  const [showPassword, setShowPassword] = React.useState(false);\n\n  const handleClickShowPassword = () => setShowPassword(show => !show);\n\n  const handleMouseDownPassword = event => {\n    event.preventDefault();\n  };\n\n  const handleClose = () => {\n    setOpen(false);\n  };\n\n  React.useEffect(async () => {\n    const querySnapshot = await getDocs(collection(db, \"client\"));\n    querySnapshot.forEach(doc => {\n      pushDocs.push(doc.id);\n    });\n    const verifierCollection = pushDocs.some(value => value == JSON.parse(window.localStorage.getItem('USER')));\n    const unsub = onSnapshot(doc(db, verifierCollection ? \"client\" : \"agent\", JSON.parse(window.localStorage.getItem('USER'))), doc => {\n      setPin(doc.data().code);\n    });\n  }, []);\n\n  const onSubmit = async data => {\n    if (data.code === undefined) {\n      setOpen(true);\n    } else {\n      if (data.code.length != 6 || regular.test(data.code)) {\n        setOpen(true);\n        reset();\n      } else {\n        if (pin != data.code) {\n          setOpen(true);\n          reset();\n        } else {\n          window.localStorage.setItem('@!che03', JSON.stringify(true));\n          navigation('/pin/update');\n        }\n      }\n\n      ;\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    onSubmit: handleSubmit(onSubmit),\n    children: [/*#__PURE__*/_jsxDEV(FormControl, {\n      sx: {\n        width: '100%'\n      },\n      variant: \"standard\",\n      children: [/*#__PURE__*/_jsxDEV(InputLabel, {\n        htmlFor: \"standard-adornment-password\",\n        children: /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"pop-up\",\n          children: \"Pin actuel\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 132,\n          columnNumber: 59\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 132,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Controller, {\n        name: \"code\",\n        control: control,\n        render: ({\n          field\n        }) => /*#__PURE__*/_jsxDEV(Input, {\n          id: \"standard-adornment-password\",\n          autocomplete: \"new-password\",\n          inputProps: {\n            autoComplete: \"off\",\n            inputMode: 'numeric'\n          },\n          ...field,\n          type: showPassword ? 'text' : 'password',\n          endAdornment: /*#__PURE__*/_jsxDEV(InputAdornment, {\n            position: \"end\",\n            children: /*#__PURE__*/_jsxDEV(IconButton, {\n              \"aria-label\": \"toggle password visibility\",\n              onClick: handleClickShowPassword,\n              onMouseDown: handleMouseDownPassword,\n              children: showPassword ? /*#__PURE__*/_jsxDEV(VisibilityOff, {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 156,\n                columnNumber: 37\n              }, this) : /*#__PURE__*/_jsxDEV(Visibility, {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 156,\n                columnNumber: 57\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 151,\n              columnNumber: 19\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 149,\n            columnNumber: 17\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 139,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 134,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 128,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Dialog, {\n      fullWidth: fullWidth,\n      maxWidth: maxWidth,\n      open: open,\n      onClose: handleClose,\n      children: [/*#__PURE__*/_jsxDEV(DialogTitle, {\n        children: /*#__PURE__*/_jsxDEV(\"h1\", {\n          className: \"pop-up\",\n          children: \"MuunganoMoney\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 173,\n          columnNumber: 22\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 173,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(DialogContent, {\n        children: /*#__PURE__*/_jsxDEV(DialogContentText, {\n          children: /*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"pop-up\",\n            children: \"code PIN ,Incorrect\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 177,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 176,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 174,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(DialogActions, {\n        children: /*#__PURE__*/_jsxDEV(Button, {\n          onClick: handleClose,\n          children: /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"pop-up\",\n            children: \"Fermer\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 184,\n            columnNumber: 41\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 184,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 183,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 167,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"Btn\",\n      children: \"Suivant\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 188,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 126,\n    columnNumber: 5\n  }, this);\n};\n\n_s(FormInputField, \"4YZJLH/92IkOS7CRSvR+pMmFGWU=\", false, function () {\n  return [useNavigate, useForm];\n});\n\n_c4 = FormInputField;\n\nvar _c, _c2, _c3, _c4;\n\n$RefreshReg$(_c, \"ReturnFormUpdate\");\n$RefreshReg$(_c2, \"ScreenLarge\");\n$RefreshReg$(_c3, \"ScreenSmall\");\n$RefreshReg$(_c4, \"FormInputField\");","map":{"version":3,"sources":["/Users/USER/Documents/Money/src/Profil/Pin/Now/Input.js"],"names":["React","Media","useNavigate","useForm","Controller","collection","getDocs","doc","onSnapshot","db","Button","Dialog","DialogActions","DialogContent","DialogTitle","DialogContentText","IconButton","Input","InputLabel","InputAdornment","FormControl","Visibility","VisibilityOff","ReturnFormUpdate","small","medium","large","matches","ScreenLarge","ScreenSmall","FormInputField","pushDocs","Array","regular","navigation","handleSubmit","reset","control","pin","setPin","useState","open","setOpen","fullWidth","setFullWidth","maxWidth","setMaxWidth","showPassword","setShowPassword","handleClickShowPassword","show","handleMouseDownPassword","event","preventDefault","handleClose","useEffect","querySnapshot","forEach","push","id","verifierCollection","some","value","JSON","parse","window","localStorage","getItem","unsub","data","code","onSubmit","undefined","length","test","setItem","stringify","width","field","autoComplete","inputMode"],"mappings":"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","sourcesContent":["import React from 'react';\nimport './Input.css';\nimport Media from 'react-media';\nimport { useNavigate } from 'react-router-dom';\nimport { useForm, Controller } from 'react-hook-form';\n\nimport { collection, getDocs, doc, onSnapshot } from 'firebase/firestore';\nimport { db } from '../../../firebase';\n\nimport Button from '@mui/material/Button';\nimport Dialog from '@mui/material/Dialog';\nimport DialogActions from '@mui/material/DialogActions';\nimport DialogContent from '@mui/material/DialogContent';\nimport DialogTitle from '@mui/material/DialogTitle';\nimport DialogContentText from '@mui/material/DialogContentText';\n\nimport IconButton from '@mui/material/IconButton';\nimport Input from '@mui/material/Input';\nimport InputLabel from '@mui/material/InputLabel';\nimport InputAdornment from '@mui/material/InputAdornment';\nimport FormControl from '@mui/material/FormControl';\nimport Visibility from '@mui/icons-material/Visibility';\nimport VisibilityOff from '@mui/icons-material/VisibilityOff';\n\n\n// View Form Update view\nexport default function ReturnFormUpdate() {\n  return (\n    <Media\n      queries={{\n        small: '(max-width: 599px)',\n        medium: '(min-width: 600px) and (max-width:1199px)',\n        large: '(min-width: 1200px)',\n      }}>\n      {matches => (\n        <>\n          {matches.small && <ScreenSmall />}\n          {matches.medium && <ScreenLarge />}\n          {matches.large && <ScreenLarge />}\n        </>\n      )}\n    </Media>\n  );\n};\n\nexport const ScreenLarge = () => (\n  <div className='wrp-form-input-nows'>\n    <FormInputField />\n  </div>\n);\nexport const ScreenSmall = () => (\n  <div className='wrp-form-input-nows'>\n    <FormInputField />\n  </div>\n);\nexport const FormInputField = () => {\n\n  let pushDocs = new Array();\n  let regular = /[a-z]+/;\n\n  const navigation = useNavigate();\n  const { handleSubmit, reset, control } = useForm();\n  const [pin, setPin] = React.useState(null);\n\n  const [open, setOpen] = React.useState(false);\n  const [fullWidth, setFullWidth] = React.useState(true);\n  const [maxWidth, setMaxWidth] = React.useState('sm');\n\n\n  const [showPassword, setShowPassword] = React.useState(false);\n\n  const handleClickShowPassword = () => setShowPassword((show) => !show);\n  const handleMouseDownPassword = (event) => {\n    event.preventDefault();\n  };\n\n  const handleClose = () => {\n    setOpen(false);\n  };\n\n\n  React.useEffect(async () => {\n\n    const querySnapshot = await getDocs(collection(db, \"client\"));\n    querySnapshot.forEach((doc) => {\n      pushDocs.push(doc.id);\n    });\n\n    const verifierCollection = pushDocs.some((value) => value == JSON.parse(window.localStorage.getItem('USER')));\n    const unsub = onSnapshot(doc(db, verifierCollection ? \"client\" : \"agent\", JSON.parse(window.localStorage.getItem('USER'))), (doc) => {\n      setPin(doc.data().code);\n    });\n\n  }, []);\n\n  const onSubmit = async (data) => {\n\n    if (data.code === undefined) {\n      setOpen(true);\n\n    } else {\n\n      if (data.code.length != 6 || regular.test(data.code)) {\n        setOpen(true);\n        reset();\n\n      } else {\n\n        if (pin != data.code) {\n          setOpen(true);\n          reset();\n        } else {\n\n          window.localStorage.setItem('@!che03', JSON.stringify(true));\n          navigation('/pin/update');\n        }\n\n      };\n\n    }\n\n\n  };\n\n  return (\n    <form onSubmit={handleSubmit(onSubmit)}>\n\n      <FormControl\n        sx={{ width: '100%' }}\n\n        variant=\"standard\">\n        <InputLabel htmlFor=\"standard-adornment-password\"><span className='pop-up'>Pin actuel</span></InputLabel>\n\n        <Controller\n          name=\"code\"\n          control={control}\n          render={({ field }) =>\n\n            <Input\n              id=\"standard-adornment-password\"\n              autocomplete=\"new-password\"\n              inputProps={{\n                autoComplete: \"off\", inputMode: 'numeric'\n              }}\n              {...field}\n              type={showPassword ? 'text' : 'password'}\n\n              endAdornment={\n                <InputAdornment position=\"end\">\n\n                  <IconButton\n                    aria-label=\"toggle password visibility\"\n                    onClick={handleClickShowPassword}\n                    onMouseDown={handleMouseDownPassword}\n                  >\n                    {showPassword ? <VisibilityOff /> : <Visibility />}\n                  </IconButton>\n\n                </InputAdornment>\n              }\n\n            />}\n        />\n\n      </FormControl>\n\n      <Dialog\n        fullWidth={fullWidth}\n        maxWidth={maxWidth}\n        open={open}\n        onClose={handleClose}>\n\n        <DialogTitle><h1 className='pop-up'>MuunganoMoney</h1></DialogTitle>\n        <DialogContent>\n\n          <DialogContentText>\n            <p className='pop-up'>\n              code PIN ,Incorrect\n     </p>\n          </DialogContentText>\n\n        </DialogContent>\n        <DialogActions>\n          <Button onClick={handleClose}><span className='pop-up'>Fermer</span></Button>\n        </DialogActions>\n      </Dialog>\n\n      <button className='Btn'>Suivant</button>\n    </form>\n  );\n};\n\n"]},"metadata":{},"sourceType":"module"}