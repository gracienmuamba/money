{"ast":null,"code":"var _jsxFileName = \"/Users/USER/Desktop/Agent/src/Hm/Sign/Input.js\",\n    _s = $RefreshSig$();\n\nimport './Input.css';\nimport { useForm } from 'react-hook-form';\nimport { useNavigate } from 'react-router-dom';\nimport { auth } from '../../firebase';\nimport { // createUserWithEmailAndPassword,\nsignInWithEmailAndPassword } from \"firebase/auth\"; // Input form field \n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function ReturnInPut() {\n  _s();\n\n  const navigation = useNavigate();\n  const {\n    register,\n    handleSubmit,\n    reset\n  } = useForm(); // Ref collection database!\n\n  const onSubmit = async data => {\n    // await createUserWithEmailAndPassword(auth, data.email, data.password)\n    //  .then((userCredential) => {\n    //   // Signed in \n    //   const user = userCredential.user;\n    //   console.log(user);\n    //  })\n    //  .catch((error) => {\n    //   const errorCode = error.code;\n    //   const errorMessage = error.message;\n    //   window.console.log(errorCode + ' ' + errorMessage);\n    //   window.alert(`L'accès n'est pas autorisé,e-mail ou mot de passe administrateur, n'est pas valide.`);\n    //   reset();\n    //  });\n    // await signInWithEmailAndPassword(auth, data.email, data.password)\n    //  .then((userCredential) => {\n    //   // Signed in \n    //   const user = userCredential.user;\n    //   if (user.uid != '5c4lmhTZMoQt0Xse1nPRcVXXkk13') {\n    //    window.alert(`L'accès n'est pas autorisé,e-mail ou mot de passe administrateur, n'est pas valide.`);\n    //    reset();\n    //   } else {\n    //    navigation('/dash');\n    //   }\n    //  })\n    //  .catch((error) => {\n    //   const errorCode = error.code;\n    //   const errorMessage = error.message;\n    //   window.console.log(errorCode + ' ' + errorMessage);\n    //   window.alert(`L'accès n'est pas autorisé,e-mail ou mot de passe administrateur, n'est pas valide.`);\n    //   reset();\n    //  });\n    navigation('/dash');\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"wrp-input-sign\",\n    children: /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit(onSubmit),\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        placeholder: \"example@email.com\",\n        ...register('email', {\n          required: true\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"password\",\n        placeholder: \"\\u2022\\u2022\\u2022\\u2022\\u2022\\u2022\\u2022\",\n        ...register('password', {\n          required: true\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"Btn\",\n        children: \"Connexion\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 5\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 4\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 67,\n    columnNumber: 3\n  }, this);\n}\n\n_s(ReturnInPut, \"LGK4nv2gX2cLYE4YdxN86BiEBgQ=\", false, function () {\n  return [useNavigate, useForm];\n});\n\n_c = ReturnInPut;\n;\n\nvar _c;\n\n$RefreshReg$(_c, \"ReturnInPut\");","map":{"version":3,"sources":["/Users/USER/Desktop/Agent/src/Hm/Sign/Input.js"],"names":["useForm","useNavigate","auth","signInWithEmailAndPassword","ReturnInPut","navigation","register","handleSubmit","reset","onSubmit","data","required"],"mappings":";;;AACA,OAAO,aAAP;AACA,SAASA,OAAT,QAAwB,iBAAxB;AACA,SAASC,WAAT,QAA4B,kBAA5B;AACA,SAASC,IAAT,QAAqB,gBAArB;AACA,SACC;AACAC,0BAFD,QAGO,eAHP,C,CAKA;;;AACA,eAAe,SAASC,WAAT,GAAuB;AAAA;;AAErC,QAAMC,UAAU,GAAGJ,WAAW,EAA9B;AACA,QAAM;AAAEK,IAAAA,QAAF;AAAYC,IAAAA,YAAZ;AAA0BC,IAAAA;AAA1B,MAAoCR,OAAO,EAAjD,CAHqC,CAKrC;;AACA,QAAMS,QAAQ,GAAG,MAAOC,IAAP,IAAgB;AAGhC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAOA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAIAL,IAAAA,UAAU,CAAC,OAAD,CAAV;AACA,GA9CD;;AAgDA,sBACC;AAAK,IAAA,SAAS,EAAC,gBAAf;AAAA,2BACC;AAAM,MAAA,QAAQ,EAAEE,YAAY,CAACE,QAAD,CAA5B;AAAA,8BACC;AAAO,QAAA,IAAI,EAAC,MAAZ;AAAmB,QAAA,WAAW,EAAC,mBAA/B;AAAA,WAAwDH,QAAQ,CAAC,OAAD,EAAU;AAAEK,UAAAA,QAAQ,EAAE;AAAZ,SAAV;AAAhE;AAAA;AAAA;AAAA;AAAA,cADD,eAEC;AAAO,QAAA,IAAI,EAAC,UAAZ;AAAuB,QAAA,WAAW,EAAC,4CAAnC;AAAA,WAAkDL,QAAQ,CAAC,UAAD,EAAa;AAAEK,UAAAA,QAAQ,EAAE;AAAZ,SAAb;AAA1D;AAAA;AAAA;AAAA;AAAA,cAFD,eAGC;AAAQ,QAAA,SAAS,EAAC,KAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAHD;AAAA;AAAA;AAAA;AAAA;AAAA;AADD;AAAA;AAAA;AAAA;AAAA,UADD;AASA;;GA/DuBP,W;UAEJH,W,EACuBD,O;;;KAHnBI,W;AA+DvB","sourcesContent":["\nimport './Input.css';\nimport { useForm } from 'react-hook-form';\nimport { useNavigate } from 'react-router-dom';\nimport { auth } from '../../firebase';\nimport {\n // createUserWithEmailAndPassword,\n signInWithEmailAndPassword\n} from \"firebase/auth\";\n\n// Input form field \nexport default function ReturnInPut() {\n\n const navigation = useNavigate();\n const { register, handleSubmit, reset } = useForm();\n\n // Ref collection database!\n const onSubmit = async (data) => {\n\n\n  // await createUserWithEmailAndPassword(auth, data.email, data.password)\n  //  .then((userCredential) => {\n  //   // Signed in \n  //   const user = userCredential.user;\n  //   console.log(user);\n  //  })\n  //  .catch((error) => {\n  //   const errorCode = error.code;\n  //   const errorMessage = error.message;\n  //   window.console.log(errorCode + ' ' + errorMessage);\n  //   window.alert(`L'accès n'est pas autorisé,e-mail ou mot de passe administrateur, n'est pas valide.`);\n  //   reset();\n  //  });\n\n\n\n\n\n\n  // await signInWithEmailAndPassword(auth, data.email, data.password)\n  //  .then((userCredential) => {\n  //   // Signed in \n  //   const user = userCredential.user;\n\n  //   if (user.uid != '5c4lmhTZMoQt0Xse1nPRcVXXkk13') {\n  //    window.alert(`L'accès n'est pas autorisé,e-mail ou mot de passe administrateur, n'est pas valide.`);\n  //    reset();\n  //   } else {\n  //    navigation('/dash');\n  //   }\n\n  //  })\n  //  .catch((error) => {\n  //   const errorCode = error.code;\n  //   const errorMessage = error.message;\n  //   window.console.log(errorCode + ' ' + errorMessage);\n  //   window.alert(`L'accès n'est pas autorisé,e-mail ou mot de passe administrateur, n'est pas valide.`);\n  //   reset();\n  //  });\n\n\n\n  navigation('/dash');\n };\n\n return (\n  <div className='wrp-input-sign'>\n   <form onSubmit={handleSubmit(onSubmit)}>\n    <input type='text' placeholder='example@email.com'  {...register('email', { required: true })} />\n    <input type='password' placeholder='•••••••'  {...register('password', { required: true })} />\n    <button className='Btn'>Connexion</button>\n   </form>\n  </div>\n );\n};"]},"metadata":{},"sourceType":"module"}