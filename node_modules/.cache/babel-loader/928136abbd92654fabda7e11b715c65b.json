{"ast":null,"code":"var _jsxFileName = \"/Users/USER/Documents/Money/src/Wallet/Home/Slide1/Small.js\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport './Small.css';\nimport Media from 'react-media';\nimport { db } from '../../../firebase';\nimport { collection, getDocs, doc, onSnapshot } from \"firebase/firestore\"; // Return CDF Components\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport default function ReturnCDF() {\n  return /*#__PURE__*/_jsxDEV(Media, {\n    queries: {\n      small: '(max-width: 599px)',\n      medium: '(min-width: 600px) and (max-width:1199px)',\n      large: '(min-width: 1200px)'\n    },\n    children: matches => /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [matches.small && /*#__PURE__*/_jsxDEV(ScreenSmall, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 19,\n        columnNumber: 24\n      }, this), matches.medium && /*#__PURE__*/_jsxDEV(ScreenLarge, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 20,\n        columnNumber: 25\n      }, this), matches.large && /*#__PURE__*/_jsxDEV(ScreenLarge, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 21,\n        columnNumber: 24\n      }, this)]\n    }, void 0, true)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 11,\n    columnNumber: 3\n  }, this);\n}\n_c = ReturnCDF;\n;\nexport const ScreenLarge = () => /*#__PURE__*/_jsxDEV(\"div\", {\n  className: \"slide-money-small\",\n  children: [/*#__PURE__*/_jsxDEV(\"div\", {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 32,\n    columnNumber: 3\n  }, this), /*#__PURE__*/_jsxDEV(View, {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 33,\n    columnNumber: 3\n  }, this)]\n}, void 0, true, {\n  fileName: _jsxFileName,\n  lineNumber: 31,\n  columnNumber: 2\n}, this);\n_c2 = ScreenLarge;\nexport const ScreenSmall = () => /*#__PURE__*/_jsxDEV(\"div\", {\n  className: \"slide-money-small\",\n  children: [/*#__PURE__*/_jsxDEV(\"div\", {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 38,\n    columnNumber: 3\n  }, this), /*#__PURE__*/_jsxDEV(View, {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 39,\n    columnNumber: 3\n  }, this)]\n}, void 0, true, {\n  fileName: _jsxFileName,\n  lineNumber: 37,\n  columnNumber: 2\n}, this);\n_c3 = ScreenSmall;\nexport const View = () => {\n  _s();\n\n  let pushDocs = new Array();\n  const [usd, setUsd] = React.useState(0);\n  React.useEffect(async () => {\n    const querySnapshotClient = await getDocs(collection(db, \"client\"));\n    querySnapshotClient.forEach(doc => {\n      pushDocs.push(doc.id);\n    });\n    var verifierCollection = pushDocs.some(value => value == JSON.parse(window.localStorage.getItem('USER')));\n\n    try {\n      await onSnapshot(doc(db, verifierCollection ? \"client\" : \"agent\", JSON.parse(window.localStorage.getItem('USER'))), doc => {\n        setUsd(doc.data().thriftusd);\n      });\n    } catch {\n      window.console.log(`Erreur console cdf`);\n    }\n  }, []);\n  let money = usd.toFixed(2);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [/*#__PURE__*/_jsxDEV(\"img\", {\n        src: '/img/dollars.png',\n        alt: \"dollars\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 7\n      }, this), \" \", money]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 4\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 69,\n    columnNumber: 3\n  }, this);\n};\n\n_s(View, \"7LxixK2+IWCaLw9Fy08FZvA88vY=\");\n\n_c4 = View;\n\nvar _c, _c2, _c3, _c4;\n\n$RefreshReg$(_c, \"ReturnCDF\");\n$RefreshReg$(_c2, \"ScreenLarge\");\n$RefreshReg$(_c3, \"ScreenSmall\");\n$RefreshReg$(_c4, \"View\");","map":{"version":3,"sources":["/Users/USER/Documents/Money/src/Wallet/Home/Slide1/Small.js"],"names":["React","Media","db","collection","getDocs","doc","onSnapshot","ReturnCDF","small","medium","large","matches","ScreenLarge","ScreenSmall","View","pushDocs","Array","usd","setUsd","useState","useEffect","querySnapshotClient","forEach","push","id","verifierCollection","some","value","JSON","parse","window","localStorage","getItem","data","thriftusd","console","log","money","toFixed"],"mappings":"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","sourcesContent":["import React from 'react';\nimport './Small.css';\nimport Media from 'react-media';\nimport { db } from '../../../firebase';\nimport { collection, getDocs, doc, onSnapshot } from \"firebase/firestore\";\n\n\n// Return CDF Components\nexport default function ReturnCDF() {\n return (\n  <Media\n   queries={{\n    small: '(max-width: 599px)',\n    medium: '(min-width: 600px) and (max-width:1199px)',\n    large: '(min-width: 1200px)',\n   }}>\n   {matches => (\n    <>\n     {matches.small && <ScreenSmall />}\n     {matches.medium && <ScreenLarge />}\n     {matches.large && <ScreenLarge />}\n    </>\n   )}\n  </Media>\n );\n\n};\n\n\nexport const ScreenLarge = () => (\n <div className='slide-money-small'>\n  <div></div>\n  <View />\n </div>\n);\nexport const ScreenSmall = () => (\n <div className='slide-money-small'>\n  <div></div>\n  <View />\n </div>\n);\nexport const View = () => {\n\n let pushDocs = new Array();\n const [usd, setUsd] = React.useState(0);\n\n React.useEffect(async () => {\n\n  const querySnapshotClient = await getDocs(collection(db, \"client\"));\n  querySnapshotClient.forEach((doc) => {\n   pushDocs.push(doc.id);\n  });\n\n  var verifierCollection = pushDocs.some((value) => value == JSON.parse(window.localStorage.getItem('USER')));\n\n  try {\n   await onSnapshot(doc(db, verifierCollection ? \"client\" : \"agent\", JSON.parse(window.localStorage.getItem('USER'))), (doc) => {\n    setUsd(doc.data().thriftusd);\n   });\n  } catch {\n   window.console.log(`Erreur console cdf`);\n  }\n\n }, []);\n\n let money = (usd).toFixed(2);\n\n return (\n  <div>\n   <p><img src={'/img/dollars.png'} alt='dollars' /> {money}</p>\n  </div>\n );\n}"]},"metadata":{},"sourceType":"module"}