{"ast":null,"code":"var _jsxFileName = \"/Users/USER/Desktop/Awesome/src/Test.js\",\n    _s = $RefreshSig$();\n\nimport { motion } from \"framer-motion\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst variants = {\n  open: {\n    opacity: 1,\n    x: 0\n  },\n  closed: {\n    opacity: 0,\n    x: \"-100%\"\n  }\n};\n\nconst MyComponent = () => {\n  _s();\n\n  const [isOpen, setIsOpen] = useState(false);\n  return /*#__PURE__*/_jsxDEV(motion.nav, {\n    animate: isOpen ? \"open\" : \"closed\",\n    variants: variants,\n    children: [/*#__PURE__*/_jsxDEV(Toggle, {\n      onClick: () => setIsOpen(isOpen => !isOpen)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Items, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 12,\n    columnNumber: 5\n  }, this);\n};\n\n_s(MyComponent, \"+sus0Lb0ewKHdwiUhiTAJFoFyQ0=\");\n\n_c = MyComponent;\nexport default MyComponent;\n\nvar _c;\n\n$RefreshReg$(_c, \"MyComponent\");","map":{"version":3,"sources":["/Users/USER/Desktop/Awesome/src/Test.js"],"names":["motion","variants","open","opacity","x","closed","MyComponent","isOpen","setIsOpen","useState"],"mappings":";;;AAAA,SAASA,MAAT,QAAuB,eAAvB;;AAEA,MAAMC,QAAQ,GAAG;AACfC,EAAAA,IAAI,EAAE;AAAEC,IAAAA,OAAO,EAAE,CAAX;AAAcC,IAAAA,CAAC,EAAE;AAAjB,GADS;AAEfC,EAAAA,MAAM,EAAE;AAAEF,IAAAA,OAAO,EAAE,CAAX;AAAcC,IAAAA,CAAC,EAAE;AAAjB;AAFO,CAAjB;;AAKA,MAAME,WAAW,GAAG,MAAM;AAAA;;AACxB,QAAM,CAACC,MAAD,EAASC,SAAT,IAAsBC,QAAQ,CAAC,KAAD,CAApC;AAEA,sBACE,QAAC,MAAD,CAAQ,GAAR;AACE,IAAA,OAAO,EAAEF,MAAM,GAAG,MAAH,GAAY,QAD7B;AAEE,IAAA,QAAQ,EAAEN,QAFZ;AAAA,4BAIE,QAAC,MAAD;AAAQ,MAAA,OAAO,EAAE,MAAMO,SAAS,CAACD,MAAM,IAAI,CAACA,MAAZ;AAAhC;AAAA;AAAA;AAAA;AAAA,YAJF,eAKE,QAAC,KAAD;AAAA;AAAA;AAAA;AAAA,YALF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AASD,CAZD;;GAAMD,W;;KAAAA,W;AAcN,eAAeA,WAAf","sourcesContent":["import { motion } from \"framer-motion\"\n\nconst variants = {\n  open: { opacity: 1, x: 0 },\n  closed: { opacity: 0, x: \"-100%\" },\n}\n\nconst MyComponent = () => {\n  const [isOpen, setIsOpen] = useState(false)\n\n  return (\n    <motion.nav\n      animate={isOpen ? \"open\" : \"closed\"}\n      variants={variants}\n    >\n      <Toggle onClick={() => setIsOpen(isOpen => !isOpen)} />\n      <Items />\n    </motion.nav>\n  )\n}\n\nexport default MyComponent;"]},"metadata":{},"sourceType":"module"}