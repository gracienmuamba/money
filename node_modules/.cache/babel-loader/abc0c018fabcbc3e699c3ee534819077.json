{"ast":null,"code":"var _jsxFileName = \"/Users/USER/Desktop/Agent/src/Send/Success/Count.js\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport './Count.css';\nimport Media from 'react-media';\nimport { doc, getDoc } from \"firebase/firestore\";\nimport { db } from '../../firebase';\nimport { phoneX } from '../Phone/Input';\nimport { prixSuccess } from '../FC/Input'; // Return view Name\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport default function RetuRnCount() {\n  return /*#__PURE__*/_jsxDEV(Media, {\n    queries: {\n      small: '(max-width: 599px)',\n      medium: '(min-width: 600px) and (max-width:1199px)',\n      large: '(min-width: 1200px)'\n    },\n    children: matches => /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [matches.small && /*#__PURE__*/_jsxDEV(ScreenSmall, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 21,\n        columnNumber: 24\n      }, this), matches.medium && /*#__PURE__*/_jsxDEV(ScreenLarge, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 22,\n        columnNumber: 25\n      }, this), matches.large && /*#__PURE__*/_jsxDEV(ScreenLarge, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 23,\n        columnNumber: 24\n      }, this)]\n    }, void 0, true)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 13,\n    columnNumber: 3\n  }, this);\n}\n_c = RetuRnCount;\n;\nexport const ScreenLarge = () => /*#__PURE__*/_jsxDEV(\"div\", {\n  className: \"wrp-name-insolde\",\n  children: /*#__PURE__*/_jsxDEV(ViewText, {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 32,\n    columnNumber: 3\n  }, this)\n}, void 0, false, {\n  fileName: _jsxFileName,\n  lineNumber: 31,\n  columnNumber: 2\n}, this);\n_c2 = ScreenLarge;\nexport const ScreenSmall = () => /*#__PURE__*/_jsxDEV(\"div\", {\n  className: \"wrp-name-insolde-sm\",\n  children: /*#__PURE__*/_jsxDEV(ViewText, {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 37,\n    columnNumber: 3\n  }, this)\n}, void 0, false, {\n  fileName: _jsxFileName,\n  lineNumber: 36,\n  columnNumber: 2\n}, this);\n_c3 = ScreenSmall;\nexport const ViewText = () => {\n  _s();\n\n  const [solde, setSolde] = React.useState(prixSuccess);\n  const [unity, setUnity] = React.useState('Fc');\n  React.useEffect(async () => {\n    const docRef = doc(db, \"agent\", phoneX);\n    const docSnap = await getDoc(docRef);\n\n    if (docSnap.exists()) {\n      setSolde(docSnap.data().money);\n      setUnity(docSnap.data().unity);\n    } else {\n      console.log(\"No such document!\");\n    }\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"h2\", {\n    children: [solde, unity]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 61,\n    columnNumber: 3\n  }, this);\n};\n\n_s(ViewText, \"qqHGHwT1BLGToVm7Q/iygCOk1WU=\");\n\n_c4 = ViewText;\n\nvar _c, _c2, _c3, _c4;\n\n$RefreshReg$(_c, \"RetuRnCount\");\n$RefreshReg$(_c2, \"ScreenLarge\");\n$RefreshReg$(_c3, \"ScreenSmall\");\n$RefreshReg$(_c4, \"ViewText\");","map":{"version":3,"sources":["/Users/USER/Desktop/Agent/src/Send/Success/Count.js"],"names":["React","Media","doc","getDoc","db","phoneX","prixSuccess","RetuRnCount","small","medium","large","matches","ScreenLarge","ScreenSmall","ViewText","solde","setSolde","useState","unity","setUnity","useEffect","docRef","docSnap","exists","data","money","console","log"],"mappings":";;;AACA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAO,aAAP;AACA,OAAOC,KAAP,MAAkB,aAAlB;AACA,SAASC,GAAT,EAAcC,MAAd,QAA4B,oBAA5B;AACA,SAASC,EAAT,QAAmB,gBAAnB;AACA,SAASC,MAAT,QAAuB,gBAAvB;AACA,SAASC,WAAT,QAA4B,aAA5B,C,CAEA;;;;AACA,eAAe,SAASC,WAAT,GAAuB;AACrC,sBACC,QAAC,KAAD;AACC,IAAA,OAAO,EAAE;AACRC,MAAAA,KAAK,EAAE,oBADC;AAERC,MAAAA,MAAM,EAAE,2CAFA;AAGRC,MAAAA,KAAK,EAAE;AAHC,KADV;AAAA,cAMEC,OAAO,iBACP;AAAA,iBACEA,OAAO,CAACH,KAAR,iBAAiB,QAAC,WAAD;AAAA;AAAA;AAAA;AAAA,cADnB,EAEEG,OAAO,CAACF,MAAR,iBAAkB,QAAC,WAAD;AAAA;AAAA;AAAA;AAAA,cAFpB,EAGEE,OAAO,CAACD,KAAR,iBAAiB,QAAC,WAAD;AAAA;AAAA;AAAA;AAAA,cAHnB;AAAA;AAPF;AAAA;AAAA;AAAA;AAAA,UADD;AAgBA;KAjBuBH,W;AAiBvB;AAED,OAAO,MAAMK,WAAW,GAAG,mBAC1B;AAAK,EAAA,SAAS,EAAC,kBAAf;AAAA,yBACC,QAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AADD;AAAA;AAAA;AAAA;AAAA,QADM;MAAMA,W;AAKb,OAAO,MAAMC,WAAW,GAAG,mBAC1B;AAAK,EAAA,SAAS,EAAC,qBAAf;AAAA,yBACC,QAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AADD;AAAA;AAAA;AAAA;AAAA,QADM;MAAMA,W;AAKb,OAAO,MAAMC,QAAQ,GAAG,MAAM;AAAA;;AAG7B,QAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBhB,KAAK,CAACiB,QAAN,CAAeX,WAAf,CAA1B;AACA,QAAM,CAACY,KAAD,EAAQC,QAAR,IAAoBnB,KAAK,CAACiB,QAAN,CAAe,IAAf,CAA1B;AAEAjB,EAAAA,KAAK,CAACoB,SAAN,CAAgB,YAAY;AAE3B,UAAMC,MAAM,GAAGnB,GAAG,CAACE,EAAD,EAAK,OAAL,EAAcC,MAAd,CAAlB;AACA,UAAMiB,OAAO,GAAG,MAAMnB,MAAM,CAACkB,MAAD,CAA5B;;AAEA,QAAIC,OAAO,CAACC,MAAR,EAAJ,EAAsB;AACrBP,MAAAA,QAAQ,CAACM,OAAO,CAACE,IAAR,GAAeC,KAAhB,CAAR;AACAN,MAAAA,QAAQ,CAACG,OAAO,CAACE,IAAR,GAAeN,KAAhB,CAAR;AACA,KAHD,MAGO;AACNQ,MAAAA,OAAO,CAACC,GAAR,CAAY,mBAAZ;AACA;AAED,GAZD,EAYG,EAZH;AAcA,sBACC;AAAA,eAAKZ,KAAL,EAAYG,KAAZ;AAAA;AAAA;AAAA;AAAA;AAAA,UADD;AAGA,CAvBM;;GAAMJ,Q;;MAAAA,Q","sourcesContent":["\nimport React from 'react';\nimport './Count.css';\nimport Media from 'react-media';\nimport { doc, getDoc } from \"firebase/firestore\";\nimport { db } from '../../firebase';\nimport { phoneX } from '../Phone/Input';\nimport { prixSuccess } from '../FC/Input';\n\n// Return view Name\nexport default function RetuRnCount() {\n return (\n  <Media\n   queries={{\n    small: '(max-width: 599px)',\n    medium: '(min-width: 600px) and (max-width:1199px)',\n    large: '(min-width: 1200px)',\n   }}>\n   {matches => (\n    <>\n     {matches.small && <ScreenSmall />}\n     {matches.medium && <ScreenLarge />}\n     {matches.large && <ScreenLarge />}\n    </>\n   )}\n  </Media>\n );\n};\n\nexport const ScreenLarge = () => (\n <div className='wrp-name-insolde'>\n  <ViewText />\n </div>\n);\nexport const ScreenSmall = () => (\n <div className='wrp-name-insolde-sm'>\n  <ViewText />\n </div>\n);\nexport const ViewText = () => {\n\n\n const [solde, setSolde] = React.useState(prixSuccess);\n const [unity, setUnity] = React.useState('Fc');\n\n React.useEffect(async () => {\n\n  const docRef = doc(db, \"agent\", phoneX);\n  const docSnap = await getDoc(docRef);\n\n  if (docSnap.exists()) {\n   setSolde(docSnap.data().money)\n   setUnity(docSnap.data().unity)\n  } else {\n   console.log(\"No such document!\");\n  }\n\n }, []);\n\n return (\n  <h2>{solde}{unity}</h2>\n );\n};\n\n"]},"metadata":{},"sourceType":"module"}