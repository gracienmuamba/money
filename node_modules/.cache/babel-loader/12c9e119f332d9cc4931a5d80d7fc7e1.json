{"ast":null,"code":"var _jsxFileName = \"/Users/USER/Desktop/Agent/src/Hm/Sign/Input.js\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport './Input.css';\nimport { useForm } from 'react-hook-form';\nimport { useNavigate } from 'react-router-dom';\nimport { auth } from '../../firebase';\nimport { createUserWithEmailAndPassword, signInWithEmailAndPassword, onAuthStateChanged } from \"firebase/auth\";\nimport Button from '@mui/material/Button';\nimport Dialog from '@mui/material/Dialog';\nimport DialogActions from '@mui/material/DialogActions';\nimport DialogContent from '@mui/material/DialogContent';\nimport DialogTitle from '@mui/material/DialogTitle';\nimport DialogContentText from '@mui/material/DialogContentText';\nimport moment from 'moment';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nlet now = moment().date(); // Input form field \n\nexport default function ReturnInPut() {\n  _s();\n\n  const navigation = useNavigate();\n  const {\n    register,\n    handleSubmit,\n    reset\n  } = useForm();\n  const [open, setOpen] = React.useState(false);\n  const [currentUser, setCurrentUser] = React.useState(null);\n  const [fullWidth, setFullWidth] = React.useState(true);\n  const [maxWidth, setMaxWidth] = React.useState('sm'); // Array Admin emoney and \n\n  const [tableEmCdf, setTableEmCdf] = React.useState();\n  const [tableAgentCdf, setTableAgentCdf] = React.useState();\n  React.useEffect(async () => {\n    onAuthStateChanged(auth, user => {\n      setCurrentUser(user);\n    });\n  }, [currentUser]);\n  React.useEffect(async () => {\n    try {\n      await onSnapshot(doc(db, \"muungano\", \"emoney\"), doc => {\n        setTableEmCdf(doc.data().cdf);\n      });\n      await onSnapshot(doc(db, \"agents\", \"emoney\"), doc => {\n        setTableAgentCdf(doc.data().cdf);\n      });\n    } catch {\n      window.console.log('erreur disponible');\n    }\n  }, []);\n\n  const handleClickOpen = () => {\n    setOpen(true);\n  };\n\n  const handleClose = () => {\n    setOpen(false);\n  }; // Ref collection database!\n\n\n  const onSubmit = async data => {\n    // await createUserWithEmailAndPassword(auth, data.email, data.password)\n    //   .then((userCredential) => {\n    //     // Signed in \n    //     const user = userCredential.user;\n    //     console.log(user);\n    //   })\n    //   .catch((error) => {\n    //     const errorCode = error.code;\n    //     const errorMessage = error.message;\n    //     window.console.log(errorCode + ' ' + errorMessage);\n    //     setOpen(true);\n    //     // window.alert(`L'accès n'est pas autorisé,e-mail ou mot de passe administrateur, n'est pas valide.`);\n    //     reset();\n    //   });\n    await signInWithEmailAndPassword(auth, data.email, data.password).then(userCredential => {\n      // Signed in \n      const user = userCredential.user;\n\n      if (user.uid != null) {\n        window.localStorage.setItem('ACTIVE', JSON.stringify(true));\n        navigation('/dash');\n      }\n    }).catch(error => {\n      const errorCode = error.code;\n      const errorMessage = error.message;\n      window.console.log(errorCode + ' ' + errorMessage);\n      setOpen(true);\n      reset();\n    }); // Admin Input\n\n    let soldeEmCDF = Number(Math.max(tableEmCdf)) + Number(data.count);\n    let soldeAgentCDF = Number(Math.max(tableAgentCdf)) + Number(data.count);\n    let arrayEmCdf = tableEmCdf;\n    let arrayAgentCdf = tableAgentCdf;\n\n    for (let i = now; i <= 31; i++) {\n      arrayEmCdf[i] = soldeEmCDF;\n      arrayAgentCdf[i] = soldeAgentCDF;\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"wrp-input-sign\",\n    children: [/*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit(onSubmit),\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        placeholder: \"example@email.com\",\n        ...register('email', {\n          required: true\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 128,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"password\",\n        placeholder: \"\\u2022\\u2022\\u2022\\u2022\\u2022\\u2022\\u2022\",\n        ...register('password', {\n          required: true\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 129,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"Btn\",\n        children: \"Connexion\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 130,\n        columnNumber: 5\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 127,\n      columnNumber: 4\n    }, this), /*#__PURE__*/_jsxDEV(Dialog, {\n      fullWidth: fullWidth,\n      maxWidth: maxWidth,\n      open: open,\n      onClose: handleClose,\n      children: [/*#__PURE__*/_jsxDEV(DialogTitle, {\n        children: \"MuunganoMoney\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 139,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(DialogContent, {\n        children: /*#__PURE__*/_jsxDEV(DialogContentText, {\n          children: \"L'acc\\xE8s n'est pas autoris\\xE9,e-mail ou mot de passe administrateur, n'est pas valide.\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 142,\n          columnNumber: 6\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 140,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(DialogActions, {\n        children: /*#__PURE__*/_jsxDEV(Button, {\n          onClick: handleClose,\n          children: \"Fermer\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 148,\n          columnNumber: 6\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 147,\n        columnNumber: 5\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 133,\n      columnNumber: 4\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 126,\n    columnNumber: 3\n  }, this);\n}\n\n_s(ReturnInPut, \"92MtV+m1W8iaw08XB2jJFmS6Oes=\", false, function () {\n  return [useNavigate, useForm];\n});\n\n_c = ReturnInPut;\n;\n\nasync function updateMuungano(emCdf, agentCdf) {\n  const emoneyRef = doc(db, \"muungano\", \"emoney\");\n  await updateDoc(emoneyRef, {\n    cdf: emCdf\n  });\n  const agentsemoneyRef = doc(db, \"agents\", \"emoney\");\n  await updateDoc(agentsemoneyRef, {\n    cdf: agentCdf\n  });\n}\n\n;\n\nvar _c;\n\n$RefreshReg$(_c, \"ReturnInPut\");","map":{"version":3,"sources":["/Users/USER/Desktop/Agent/src/Hm/Sign/Input.js"],"names":["React","useForm","useNavigate","auth","createUserWithEmailAndPassword","signInWithEmailAndPassword","onAuthStateChanged","Button","Dialog","DialogActions","DialogContent","DialogTitle","DialogContentText","moment","now","date","ReturnInPut","navigation","register","handleSubmit","reset","open","setOpen","useState","currentUser","setCurrentUser","fullWidth","setFullWidth","maxWidth","setMaxWidth","tableEmCdf","setTableEmCdf","tableAgentCdf","setTableAgentCdf","useEffect","user","onSnapshot","doc","db","data","cdf","window","console","log","handleClickOpen","handleClose","onSubmit","email","password","then","userCredential","uid","localStorage","setItem","JSON","stringify","catch","error","errorCode","code","errorMessage","message","soldeEmCDF","Number","Math","max","count","soldeAgentCDF","arrayEmCdf","arrayAgentCdf","i","required","updateMuungano","emCdf","agentCdf","emoneyRef","updateDoc","agentsemoneyRef"],"mappings":"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","sourcesContent":["import React from 'react';\nimport './Input.css';\nimport { useForm } from 'react-hook-form';\nimport { useNavigate } from 'react-router-dom';\nimport { auth } from '../../firebase';\nimport {\n createUserWithEmailAndPassword,\n signInWithEmailAndPassword, onAuthStateChanged\n} from \"firebase/auth\";\n\nimport Button from '@mui/material/Button';\nimport Dialog from '@mui/material/Dialog';\nimport DialogActions from '@mui/material/DialogActions';\nimport DialogContent from '@mui/material/DialogContent';\nimport DialogTitle from '@mui/material/DialogTitle';\nimport DialogContentText from '@mui/material/DialogContentText';\nimport moment from 'moment';\n\nlet now = moment().date();\n\n\n// Input form field \nexport default function ReturnInPut() {\n\n const navigation = useNavigate();\n const { register, handleSubmit, reset } = useForm();\n\n const [open, setOpen] = React.useState(false);\n const [currentUser, setCurrentUser] = React.useState(null);\n const [fullWidth, setFullWidth] = React.useState(true);\n const [maxWidth, setMaxWidth] = React.useState('sm');\n\n\n // Array Admin emoney and \n const [tableEmCdf, setTableEmCdf] = React.useState();\n const [tableAgentCdf, setTableAgentCdf] = React.useState();\n\n\n React.useEffect(async () => {\n  onAuthStateChanged(auth, user => { setCurrentUser(user) });\n }, [currentUser]);\n\n\n React.useEffect(async () => {\n\n  try {\n   await onSnapshot(doc(db, \"muungano\", \"emoney\"), (doc) => {\n    setTableEmCdf(doc.data().cdf);\n   });\n   await onSnapshot(doc(db, \"agents\", \"emoney\"), (doc) => {\n    setTableAgentCdf(doc.data().cdf);\n   });\n\n  } catch {\n   window.console.log('erreur disponible');\n  }\n\n }, []);\n\n\n const handleClickOpen = () => {\n  setOpen(true);\n };\n const handleClose = () => {\n  setOpen(false);\n };\n\n // Ref collection database!\n const onSubmit = async (data) => {\n\n  // await createUserWithEmailAndPassword(auth, data.email, data.password)\n  //   .then((userCredential) => {\n  //     // Signed in \n  //     const user = userCredential.user;\n  //     console.log(user);\n  //   })\n  //   .catch((error) => {\n  //     const errorCode = error.code;\n  //     const errorMessage = error.message;\n  //     window.console.log(errorCode + ' ' + errorMessage);\n  //     setOpen(true);\n  //     // window.alert(`L'accès n'est pas autorisé,e-mail ou mot de passe administrateur, n'est pas valide.`);\n  //     reset();\n  //   });\n\n\n\n  await signInWithEmailAndPassword(auth, data.email, data.password)\n   .then((userCredential) => {\n\n    // Signed in \n    const user = userCredential.user;\n    if (user.uid != null) {\n     window.localStorage.setItem('ACTIVE', JSON.stringify(true));\n     navigation('/dash');\n    }\n\n   })\n   .catch((error) => {\n\n    const errorCode = error.code;\n    const errorMessage = error.message;\n    window.console.log(errorCode + ' ' + errorMessage);\n    setOpen(true);\n    reset();\n   });\n\n\n  // Admin Input\n  let soldeEmCDF = Number(Math.max(tableEmCdf)) + Number(data.count);\n  let soldeAgentCDF = Number(Math.max(tableAgentCdf)) + Number(data.count);\n\n  let arrayEmCdf = tableEmCdf;\n  let arrayAgentCdf = tableAgentCdf;\n\n  for (let i = now; i <= 31; i++) {\n   arrayEmCdf[i] = soldeEmCDF;\n   arrayAgentCdf[i] = soldeAgentCDF;\n  }\n\n\n\n };\n\n return (\n  <div className='wrp-input-sign'>\n   <form onSubmit={handleSubmit(onSubmit)}>\n    <input type='text' placeholder='example@email.com'  {...register('email', { required: true })} />\n    <input type='password' placeholder='•••••••'  {...register('password', { required: true })} />\n    <button className='Btn'>Connexion</button>\n   </form>\n\n   <Dialog\n    fullWidth={fullWidth}\n    maxWidth={maxWidth}\n    open={open}\n    onClose={handleClose}\n   >\n    <DialogTitle>MuunganoMoney</DialogTitle>\n    <DialogContent>\n\n     <DialogContentText>\n      L'accès n'est pas autorisé,e-mail ou mot de passe administrateur, n'est pas valide.\n     </DialogContentText>\n\n    </DialogContent>\n    <DialogActions>\n     <Button onClick={handleClose}>Fermer</Button>\n    </DialogActions>\n   </Dialog>\n\n  </div>\n )\n};\n\n\nasync function updateMuungano(emCdf, agentCdf) {\n\n const emoneyRef = doc(db, \"muungano\", \"emoney\");\n await updateDoc(emoneyRef, {\n  cdf: emCdf,\n });\n\n const agentsemoneyRef = doc(db, \"agents\", \"emoney\");\n await updateDoc(agentsemoneyRef, {\n  cdf: agentCdf,\n });\n\n};"]},"metadata":{},"sourceType":"module"}