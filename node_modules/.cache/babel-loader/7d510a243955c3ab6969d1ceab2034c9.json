{"ast":null,"code":"var _jsxFileName = \"/Users/USER/Desktop/Agent/src/Send/USD/Input.js\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport './Input.css';\nimport { useForm } from 'react-hook-form';\nimport Media from 'react-media';\nimport { useNavigate } from 'react-router-dom';\nimport { phoneX } from '../Phone/Input';\nimport { doc, updateDoc, increment, onSnapshot, arrayUnion } from \"firebase/firestore\";\nimport Button from '@mui/material/Button';\nimport Dialog from '@mui/material/Dialog';\nimport DialogActions from '@mui/material/DialogActions';\nimport DialogContent from '@mui/material/DialogContent';\nimport DialogTitle from '@mui/material/DialogTitle';\nimport DialogContentText from '@mui/material/DialogContentText';\nimport { db } from '../../firebase';\nimport ReturnQuOte from './Quote';\nimport moment from 'moment';\nimport 'moment/locale/fr';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport let nowField = moment().date();\nexport let now = moment().date();\nexport let prixSuccess = 0;\nvar regular = /[a-z]+/; // withdraw input\n\nexport default function ReturnWithdrAwInput() {\n  return /*#__PURE__*/_jsxDEV(Media, {\n    queries: {\n      small: '(max-width: 599px)',\n      medium: '(min-width: 600px) and (max-width:1199px)',\n      large: '(min-width: 1200px)'\n    },\n    children: matches => /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [matches.small && /*#__PURE__*/_jsxDEV(ScreenSmall, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 24\n      }, this), matches.medium && /*#__PURE__*/_jsxDEV(ScreenLarge, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 25\n      }, this), matches.large && /*#__PURE__*/_jsxDEV(ScreenLarge, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 24\n      }, this)]\n    }, void 0, true)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 30,\n    columnNumber: 3\n  }, this);\n}\n_c = ReturnWithdrAwInput;\n;\nexport const ScreenLarge = () => /*#__PURE__*/_jsxDEV(\"div\", {\n  className: \"wrp-withdraw-input\",\n  children: [/*#__PURE__*/_jsxDEV(ReturnQuOte, {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 49,\n    columnNumber: 3\n  }, this), /*#__PURE__*/_jsxDEV(FormInput, {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 50,\n    columnNumber: 3\n  }, this)]\n}, void 0, true, {\n  fileName: _jsxFileName,\n  lineNumber: 48,\n  columnNumber: 2\n}, this);\n_c2 = ScreenLarge;\nexport const ScreenSmall = () => /*#__PURE__*/_jsxDEV(\"div\", {\n  className: \"wrp-withdraw-input-sm\",\n  children: [/*#__PURE__*/_jsxDEV(ReturnQuOte, {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 55,\n    columnNumber: 3\n  }, this), /*#__PURE__*/_jsxDEV(FormInput, {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 56,\n    columnNumber: 3\n  }, this)]\n}, void 0, true, {\n  fileName: _jsxFileName,\n  lineNumber: 54,\n  columnNumber: 2\n}, this);\n_c3 = ScreenSmall;\nexport const FormInput = () => {\n  _s();\n\n  const navigation = useNavigate();\n  const {\n    handleSubmit,\n    register,\n    reset\n  } = useForm();\n  const [getPin, setGetPin] = React.useState('');\n  const [solde, setSolde] = React.useState(null);\n  const [open, setOpen] = React.useState(false);\n  const [passe, setPasse] = React.useState(false);\n  const [fullWidth, setFullWidth] = React.useState(true);\n  const [maxWidth, setMaxWidth] = React.useState('sm');\n\n  const handleClose = () => {\n    setOpen(false);\n  };\n\n  const handlePasseClose = () => {\n    setPasse(false);\n  };\n\n  React.useEffect(async () => {\n    try {\n      await onSnapshot(doc(db, \"muunganomoney\", \"money\"), doc => {\n        setGetPin(doc.data().code);\n        setSolde(doc.data().cdf);\n      });\n    } catch {\n      window.console.log('erreur disponible');\n    }\n  }, []);\n\n  const onSubmit = async data => {\n    const phoneItem = window.localStorage.getItem('PHONE_SEND');\n    const sendEMCdf = window.localStorage.getItem('SEND_EM_CDF');\n    const sendEMAgentCdf = window.localStorage.getItem('SEND_EM_AGENT_CDF');\n    const sendUser = window.localStorage.getItem('SEND_USER');\n\n    if (getPin == data.code) {\n      if (data.count > 1000 || data.count < 1 || solde < 10 || data.count > solde || regular.test(data.count)) {\n        setOpen(true);\n        reset();\n      } else {\n        // let User = first + ' ' + last;\n        sendAgentMoney(Math.floor(Number(data.count)), JSON.parse(phoneItem));\n        updateAdmin(Number(data.count), Math.floor(Number(data.count)), JSON.parse(sendUser));\n        let arraySendEMCdf = JSON.parse(sendEMCdf);\n        let arraySendEMAgentCdf = JSON.parse(sendEMAgentCdf);\n        let soldeEmCDF = Number(Math.max(...arraySendEMCdf)) + Number(data.count);\n        let soldeAgentCDF = Number(Math.max(...arraySendEMAgentCdf)) + Number(data.count);\n        let arrayEmCdf = arraySendEMCdf;\n        let arrayAgentCdf = arraySendEMAgentCdf;\n\n        for (let i = now; i <= 31; i++) {\n          arrayEmCdf[i] = soldeEmCDF;\n          arrayAgentCdf[i] = soldeAgentCDF;\n        }\n\n        prixSuccess = data.count;\n        updateMuungano(arrayEmCdf, arrayAgentCdf);\n        window.localStorage.setItem('PHONE_SEND', JSON.stringify(null));\n        window.localStorage.setItem('SEND_EM_CDF', JSON.stringify(null));\n        window.localStorage.setItem('SEND_EM_AGENT_CDF', JSON.stringify(null));\n        window.localStorage.setItem('#62^^ts@&', JSON.stringify(false));\n        navigation('/send/success-usd');\n      }\n    } else {\n      prixSuccess = data.count;\n      setPasse(true);\n      reset();\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    onSubmit: handleSubmit(onSubmit),\n    children: [/*#__PURE__*/_jsxDEV(\"input\", {\n      type: 'text',\n      ...register('count', {\n        required: true\n      }),\n      name: \"count\",\n      placeholder: 'USD'\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 149,\n      columnNumber: 4\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: 'password',\n      ...register('code', {\n        required: true\n      }),\n      name: \"code\",\n      placeholder: '••••••',\n      className: \"letter-space-pwd\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 154,\n      columnNumber: 4\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"Btn\",\n      children: \"Envoyer\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 160,\n      columnNumber: 4\n    }, this), /*#__PURE__*/_jsxDEV(Dialog, {\n      fullWidth: fullWidth,\n      maxWidth: maxWidth,\n      open: passe,\n      onClose: handlePasseClose,\n      children: [/*#__PURE__*/_jsxDEV(DialogTitle, {\n        children: \"MuunganoMoney\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 168,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(DialogContent, {\n        children: /*#__PURE__*/_jsxDEV(DialogContentText, {\n          children: \"Veuillez v\\xE9rifier le mot de passe administrateur\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 171,\n          columnNumber: 6\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 169,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(DialogActions, {\n        children: /*#__PURE__*/_jsxDEV(Button, {\n          onClick: handlePasseClose,\n          children: \"Fermer\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 177,\n          columnNumber: 6\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 176,\n        columnNumber: 5\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 162,\n      columnNumber: 4\n    }, this), /*#__PURE__*/_jsxDEV(Dialog, {\n      fullWidth: fullWidth,\n      maxWidth: maxWidth,\n      open: open,\n      onClose: handleClose,\n      children: [/*#__PURE__*/_jsxDEV(DialogTitle, {\n        children: \"MuunganoMoney\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 187,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(DialogContent, {\n        children: /*#__PURE__*/_jsxDEV(DialogContentText, {\n          children: \"Le solde entre n'est pas valide, veuillez v\\xE9rifier\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 190,\n          columnNumber: 6\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 188,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(DialogActions, {\n        children: /*#__PURE__*/_jsxDEV(Button, {\n          onClick: handleClose,\n          children: \"Fermer\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 196,\n          columnNumber: 6\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 195,\n        columnNumber: 5\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 181,\n      columnNumber: 4\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 147,\n    columnNumber: 3\n  }, this);\n};\n\n_s(FormInput, \"olHIv0gjBMlUD9pRVLp18EXAE/o=\", false, function () {\n  return [useNavigate, useForm];\n});\n\n_c4 = FormInput;\n\nasync function sendAgentMoney(solde, numPhone) {\n  let time = moment().format('LLL');\n  let send = {\n    date: time,\n    solde: `${solde} USD`,\n    phone: numPhone,\n    user: 'muunganomoney',\n    type: 'réussi'\n  };\n  const washingtonRef = doc(db, \"agent\", numPhone); // Set the \"capital\" field of the city 'DC'\n\n  await updateDoc(washingtonRef, {\n    usd: increment(solde),\n    money: solde,\n    unite: 'USD',\n    user: 'muunganomoney',\n    delay: moment().format(),\n    swap: arrayUnion(send)\n  });\n}\n\n;\n\nasync function updateAdmin(solde, money, User) {\n  const washingtonRef = doc(db, \"muunganomoney\", \"money\"); // Set the \"capital\" field of the city 'DC'\n\n  await updateDoc(washingtonRef, {\n    usd: increment(-solde),\n    money: money,\n    buyusd: solde,\n    unite: 'USD',\n    user: User,\n    delay: moment().format()\n  });\n  const emoneyRef = doc(db, \"muunganomoney\", \"e-money\");\n  await updateDoc(emoneyRef, {\n    usd: solde\n  });\n  const moneyRef = doc(db, \"muunganomoney\", \"money\");\n  await updateDoc(moneyRef, {\n    usd: increment(-solde)\n  });\n}\n\n;\n\nasync function updateMuungano(emUsd, agentUsd) {\n  const emoneyRef = doc(db, \"muungano\", \"emoney\");\n  await updateDoc(emoneyRef, {\n    usd: emUsd\n  });\n  const agentsemoneyRef = doc(db, \"agents\", \"emoney\");\n  await updateDoc(agentsemoneyRef, {\n    usd: agentUsd\n  });\n}\n\n;\n\nvar _c, _c2, _c3, _c4;\n\n$RefreshReg$(_c, \"ReturnWithdrAwInput\");\n$RefreshReg$(_c2, \"ScreenLarge\");\n$RefreshReg$(_c3, \"ScreenSmall\");\n$RefreshReg$(_c4, \"FormInput\");","map":{"version":3,"sources":["/Users/USER/Desktop/Agent/src/Send/USD/Input.js"],"names":["React","useForm","Media","useNavigate","phoneX","doc","updateDoc","increment","onSnapshot","arrayUnion","Button","Dialog","DialogActions","DialogContent","DialogTitle","DialogContentText","db","ReturnQuOte","moment","nowField","date","now","prixSuccess","regular","ReturnWithdrAwInput","small","medium","large","matches","ScreenLarge","ScreenSmall","FormInput","navigation","handleSubmit","register","reset","getPin","setGetPin","useState","solde","setSolde","open","setOpen","passe","setPasse","fullWidth","setFullWidth","maxWidth","setMaxWidth","handleClose","handlePasseClose","useEffect","data","code","cdf","window","console","log","onSubmit","phoneItem","localStorage","getItem","sendEMCdf","sendEMAgentCdf","sendUser","count","test","sendAgentMoney","Math","floor","Number","JSON","parse","updateAdmin","arraySendEMCdf","arraySendEMAgentCdf","soldeEmCDF","max","soldeAgentCDF","arrayEmCdf","arrayAgentCdf","i","updateMuungano","setItem","stringify","required","numPhone","time","format","send","phone","user","type","washingtonRef","usd","money","unite","delay","swap","User","buyusd","emoneyRef","moneyRef","emUsd","agentUsd","agentsemoneyRef"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAO,aAAP;AACA,SAASC,OAAT,QAAwB,iBAAxB;AACA,OAAOC,KAAP,MAAkB,aAAlB;AACA,SAASC,WAAT,QAA4B,kBAA5B;AACA,SAASC,MAAT,QAAuB,gBAAvB;AACA,SAASC,GAAT,EAAcC,SAAd,EAAyBC,SAAzB,EAAoCC,UAApC,EAAgDC,UAAhD,QAAkE,oBAAlE;AAEA,OAAOC,MAAP,MAAmB,sBAAnB;AACA,OAAOC,MAAP,MAAmB,sBAAnB;AACA,OAAOC,aAAP,MAA0B,6BAA1B;AACA,OAAOC,aAAP,MAA0B,6BAA1B;AACA,OAAOC,WAAP,MAAwB,2BAAxB;AACA,OAAOC,iBAAP,MAA8B,iCAA9B;AACA,SAASC,EAAT,QAAmB,gBAAnB;AAEA,OAAOC,WAAP,MAAwB,SAAxB;AACA,OAAOC,MAAP,MAAmB,QAAnB;AACA,OAAO,kBAAP;;;AAEA,OAAO,IAAIC,QAAQ,GAAGD,MAAM,GAAGE,IAAT,EAAf;AACP,OAAO,IAAIC,GAAG,GAAGH,MAAM,GAAGE,IAAT,EAAV;AACP,OAAO,IAAIE,WAAW,GAAG,CAAlB;AAEP,IAAIC,OAAO,GAAG,QAAd,C,CAEA;;AACA,eAAe,SAASC,mBAAT,GAA+B;AAC7C,sBACC,QAAC,KAAD;AACC,IAAA,OAAO,EAAE;AACRC,MAAAA,KAAK,EAAE,oBADC;AAERC,MAAAA,MAAM,EAAE,2CAFA;AAGRC,MAAAA,KAAK,EAAE;AAHC,KADV;AAAA,cAMEC,OAAO,iBACP;AAAA,iBACEA,OAAO,CAACH,KAAR,iBAAiB,QAAC,WAAD;AAAA;AAAA;AAAA;AAAA,cADnB,EAEEG,OAAO,CAACF,MAAR,iBAAkB,QAAC,WAAD;AAAA;AAAA;AAAA;AAAA,cAFpB,EAGEE,OAAO,CAACD,KAAR,iBAAiB,QAAC,WAAD;AAAA;AAAA;AAAA;AAAA,cAHnB;AAAA;AAPF;AAAA;AAAA;AAAA;AAAA,UADD;AAgBA;KAjBuBH,mB;AAiBvB;AAED,OAAO,MAAMK,WAAW,GAAG,mBAC1B;AAAK,EAAA,SAAS,EAAC,oBAAf;AAAA,0BACC,QAAC,WAAD;AAAA;AAAA;AAAA;AAAA,UADD,eAEC,QAAC,SAAD;AAAA;AAAA;AAAA;AAAA,UAFD;AAAA;AAAA;AAAA;AAAA;AAAA,QADM;MAAMA,W;AAMb,OAAO,MAAMC,WAAW,GAAG,mBAC1B;AAAK,EAAA,SAAS,EAAC,uBAAf;AAAA,0BACC,QAAC,WAAD;AAAA;AAAA;AAAA;AAAA,UADD,eAEC,QAAC,SAAD;AAAA;AAAA;AAAA;AAAA,UAFD;AAAA;AAAA;AAAA;AAAA;AAAA,QADM;MAAMA,W;AAMb,OAAO,MAAMC,SAAS,GAAG,MAAM;AAAA;;AAE9B,QAAMC,UAAU,GAAG7B,WAAW,EAA9B;AAEA,QAAM;AAAE8B,IAAAA,YAAF;AAAgBC,IAAAA,QAAhB;AAA0BC,IAAAA;AAA1B,MAAoClC,OAAO,EAAjD;AACA,QAAM,CAACmC,MAAD,EAASC,SAAT,IAAsBrC,KAAK,CAACsC,QAAN,CAAe,EAAf,CAA5B;AACA,QAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBxC,KAAK,CAACsC,QAAN,CAAe,IAAf,CAA1B;AAEA,QAAM,CAACG,IAAD,EAAOC,OAAP,IAAkB1C,KAAK,CAACsC,QAAN,CAAe,KAAf,CAAxB;AACA,QAAM,CAACK,KAAD,EAAQC,QAAR,IAAoB5C,KAAK,CAACsC,QAAN,CAAe,KAAf,CAA1B;AACA,QAAM,CAACO,SAAD,EAAYC,YAAZ,IAA4B9C,KAAK,CAACsC,QAAN,CAAe,IAAf,CAAlC;AACA,QAAM,CAACS,QAAD,EAAWC,WAAX,IAA0BhD,KAAK,CAACsC,QAAN,CAAe,IAAf,CAAhC;;AAGA,QAAMW,WAAW,GAAG,MAAM;AACzBP,IAAAA,OAAO,CAAC,KAAD,CAAP;AACA,GAFD;;AAIA,QAAMQ,gBAAgB,GAAG,MAAM;AAC9BN,IAAAA,QAAQ,CAAC,KAAD,CAAR;AACA,GAFD;;AAIA5C,EAAAA,KAAK,CAACmD,SAAN,CAAgB,YAAY;AAE3B,QAAI;AAEH,YAAM3C,UAAU,CAACH,GAAG,CAACW,EAAD,EAAK,eAAL,EAAsB,OAAtB,CAAJ,EAAqCX,GAAD,IAAS;AAC5DgC,QAAAA,SAAS,CAAChC,GAAG,CAAC+C,IAAJ,GAAWC,IAAZ,CAAT;AACAb,QAAAA,QAAQ,CAACnC,GAAG,CAAC+C,IAAJ,GAAWE,GAAZ,CAAR;AACA,OAHe,CAAhB;AAKA,KAPD,CAOE,MAAM;AACPC,MAAAA,MAAM,CAACC,OAAP,CAAeC,GAAf,CAAmB,mBAAnB;AACA;AAED,GAbD,EAaG,EAbH;;AAeA,QAAMC,QAAQ,GAAG,MAAON,IAAP,IAAgB;AAEhC,UAAMO,SAAS,GAAGJ,MAAM,CAACK,YAAP,CAAoBC,OAApB,CAA4B,YAA5B,CAAlB;AACA,UAAMC,SAAS,GAAGP,MAAM,CAACK,YAAP,CAAoBC,OAApB,CAA4B,aAA5B,CAAlB;AACA,UAAME,cAAc,GAAGR,MAAM,CAACK,YAAP,CAAoBC,OAApB,CAA4B,mBAA5B,CAAvB;AACA,UAAMG,QAAQ,GAAGT,MAAM,CAACK,YAAP,CAAoBC,OAApB,CAA4B,WAA5B,CAAjB;;AAEA,QAAIzB,MAAM,IAAIgB,IAAI,CAACC,IAAnB,EAAyB;AAExB,UAAID,IAAI,CAACa,KAAL,GAAa,IAAb,IAAqBb,IAAI,CAACa,KAAL,GAAa,CAAlC,IAAuC1B,KAAK,GAAG,EAA/C,IAAqDa,IAAI,CAACa,KAAL,GAAa1B,KAAlE,IAA2EhB,OAAO,CAAC2C,IAAR,CAAad,IAAI,CAACa,KAAlB,CAA/E,EAAyG;AACxGvB,QAAAA,OAAO,CAAC,IAAD,CAAP;AACAP,QAAAA,KAAK;AACL,OAHD,MAGO;AAEN;AACAgC,QAAAA,cAAc,CAACC,IAAI,CAACC,KAAL,CAAWC,MAAM,CAAClB,IAAI,CAACa,KAAN,CAAjB,CAAD,EAAiCM,IAAI,CAACC,KAAL,CAAWb,SAAX,CAAjC,CAAd;AACAc,QAAAA,WAAW,CAACH,MAAM,CAAClB,IAAI,CAACa,KAAN,CAAP,EAAqBG,IAAI,CAACC,KAAL,CAAWC,MAAM,CAAClB,IAAI,CAACa,KAAN,CAAjB,CAArB,EAAqDM,IAAI,CAACC,KAAL,CAAWR,QAAX,CAArD,CAAX;AAEA,YAAIU,cAAc,GAAGH,IAAI,CAACC,KAAL,CAAWV,SAAX,CAArB;AACA,YAAIa,mBAAmB,GAAGJ,IAAI,CAACC,KAAL,CAAWT,cAAX,CAA1B;AAEA,YAAIa,UAAU,GAAGN,MAAM,CAACF,IAAI,CAACS,GAAL,CAAS,GAAGH,cAAZ,CAAD,CAAN,GAAsCJ,MAAM,CAAClB,IAAI,CAACa,KAAN,CAA7D;AACA,YAAIa,aAAa,GAAGR,MAAM,CAACF,IAAI,CAACS,GAAL,CAAS,GAAGF,mBAAZ,CAAD,CAAN,GAA2CL,MAAM,CAAClB,IAAI,CAACa,KAAN,CAArE;AAEA,YAAIc,UAAU,GAAGL,cAAjB;AACA,YAAIM,aAAa,GAAGL,mBAApB;;AAEA,aAAK,IAAIM,CAAC,GAAG5D,GAAb,EAAkB4D,CAAC,IAAI,EAAvB,EAA2BA,CAAC,EAA5B,EAAgC;AAC/BF,UAAAA,UAAU,CAACE,CAAD,CAAV,GAAgBL,UAAhB;AACAI,UAAAA,aAAa,CAACC,CAAD,CAAb,GAAmBH,aAAnB;AACA;;AAEDxD,QAAAA,WAAW,GAAG8B,IAAI,CAACa,KAAnB;AAEAiB,QAAAA,cAAc,CAACH,UAAD,EAAaC,aAAb,CAAd;AACAzB,QAAAA,MAAM,CAACK,YAAP,CAAoBuB,OAApB,CAA4B,YAA5B,EAA0CZ,IAAI,CAACa,SAAL,CAAe,IAAf,CAA1C;AACA7B,QAAAA,MAAM,CAACK,YAAP,CAAoBuB,OAApB,CAA4B,aAA5B,EAA2CZ,IAAI,CAACa,SAAL,CAAe,IAAf,CAA3C;AACA7B,QAAAA,MAAM,CAACK,YAAP,CAAoBuB,OAApB,CAA4B,mBAA5B,EAAiDZ,IAAI,CAACa,SAAL,CAAe,IAAf,CAAjD;AACA7B,QAAAA,MAAM,CAACK,YAAP,CAAoBuB,OAApB,CAA4B,WAA5B,EAAyCZ,IAAI,CAACa,SAAL,CAAe,KAAf,CAAzC;AAEApD,QAAAA,UAAU,CAAC,mBAAD,CAAV;AACA;AACD,KAnCD,MAmCO;AACNV,MAAAA,WAAW,GAAG8B,IAAI,CAACa,KAAnB;AACArB,MAAAA,QAAQ,CAAC,IAAD,CAAR;AACAT,MAAAA,KAAK;AACL;AAED,GAhDD;;AAkDA,sBACC;AAAM,IAAA,QAAQ,EAAEF,YAAY,CAACyB,QAAD,CAA5B;AAAA,4BAEC;AAAO,MAAA,IAAI,EAAE,MAAb;AAAA,SACKxB,QAAQ,CAAC,OAAD,EAAU;AAAEmD,QAAAA,QAAQ,EAAE;AAAZ,OAAV,CADb;AAEC,MAAA,IAAI,EAAC,OAFN;AAGC,MAAA,WAAW,EAAE;AAHd;AAAA;AAAA;AAAA;AAAA,YAFD,eAOC;AAAO,MAAA,IAAI,EAAE,UAAb;AAAA,SACKnD,QAAQ,CAAC,MAAD,EAAS;AAAEmD,QAAAA,QAAQ,EAAE;AAAZ,OAAT,CADb;AAEC,MAAA,IAAI,EAAC,MAFN;AAGC,MAAA,WAAW,EAAE,QAHd;AAIC,MAAA,SAAS,EAAC;AAJX;AAAA;AAAA;AAAA;AAAA,YAPD,eAaC;AAAQ,MAAA,SAAS,EAAC,KAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAbD,eAeC,QAAC,MAAD;AACC,MAAA,SAAS,EAAExC,SADZ;AAEC,MAAA,QAAQ,EAAEE,QAFX;AAGC,MAAA,IAAI,EAAEJ,KAHP;AAIC,MAAA,OAAO,EAAEO,gBAJV;AAAA,8BAMC,QAAC,WAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAND,eAOC,QAAC,aAAD;AAAA,+BAEC,QAAC,iBAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAFD;AAAA;AAAA;AAAA;AAAA,cAPD,eAcC,QAAC,aAAD;AAAA,+BACC,QAAC,MAAD;AAAQ,UAAA,OAAO,EAAEA,gBAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADD;AAAA;AAAA;AAAA;AAAA,cAdD;AAAA;AAAA;AAAA;AAAA;AAAA,YAfD,eAkCC,QAAC,MAAD;AACC,MAAA,SAAS,EAAEL,SADZ;AAEC,MAAA,QAAQ,EAAEE,QAFX;AAGC,MAAA,IAAI,EAAEN,IAHP;AAIC,MAAA,OAAO,EAAEQ,WAJV;AAAA,8BAMC,QAAC,WAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAND,eAOC,QAAC,aAAD;AAAA,+BAEC,QAAC,iBAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAFD;AAAA;AAAA;AAAA;AAAA,cAPD,eAcC,QAAC,aAAD;AAAA,+BACC,QAAC,MAAD;AAAQ,UAAA,OAAO,EAAEA,WAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADD;AAAA;AAAA;AAAA;AAAA,cAdD;AAAA;AAAA;AAAA;AAAA;AAAA,YAlCD;AAAA;AAAA;AAAA;AAAA;AAAA,UADD;AAwDA,CA/IM;;GAAMlB,S;UAEO5B,W,EAEuBF,O;;;MAJ9B8B,S;;AAiJb,eAAeoC,cAAf,CAA8B5B,KAA9B,EAAqC+C,QAArC,EAA+C;AAE9C,MAAIC,IAAI,GAAGrE,MAAM,GAAGsE,MAAT,CAAgB,KAAhB,CAAX;AACA,MAAIC,IAAI,GAAG;AAAErE,IAAAA,IAAI,EAAEmE,IAAR;AAAchD,IAAAA,KAAK,EAAG,GAAEA,KAAM,MAA9B;AAAqCmD,IAAAA,KAAK,EAAEJ,QAA5C;AAAsDK,IAAAA,IAAI,EAAE,eAA5D;AAA6EC,IAAAA,IAAI,EAAE;AAAnF,GAAX;AAEA,QAAMC,aAAa,GAAGxF,GAAG,CAACW,EAAD,EAAK,OAAL,EAAcsE,QAAd,CAAzB,CAL8C,CAM9C;;AACA,QAAMhF,SAAS,CAACuF,aAAD,EAAgB;AAC9BC,IAAAA,GAAG,EAAEvF,SAAS,CAACgC,KAAD,CADgB;AAE9BwD,IAAAA,KAAK,EAAExD,KAFuB;AAG9ByD,IAAAA,KAAK,EAAE,KAHuB;AAI9BL,IAAAA,IAAI,EAAE,eAJwB;AAK9BM,IAAAA,KAAK,EAAE/E,MAAM,GAAGsE,MAAT,EALuB;AAM9BU,IAAAA,IAAI,EAAEzF,UAAU,CAACgF,IAAD;AANc,GAAhB,CAAf;AASA;;AAAA;;AACD,eAAehB,WAAf,CAA2BlC,KAA3B,EAAkCwD,KAAlC,EAAyCI,IAAzC,EAA+C;AAE9C,QAAMN,aAAa,GAAGxF,GAAG,CAACW,EAAD,EAAK,eAAL,EAAsB,OAAtB,CAAzB,CAF8C,CAG9C;;AACA,QAAMV,SAAS,CAACuF,aAAD,EAAgB;AAC9BC,IAAAA,GAAG,EAAEvF,SAAS,CAAC,CAACgC,KAAF,CADgB;AAE9BwD,IAAAA,KAAK,EAAEA,KAFuB;AAG9BK,IAAAA,MAAM,EAAE7D,KAHsB;AAI9ByD,IAAAA,KAAK,EAAE,KAJuB;AAK9BL,IAAAA,IAAI,EAAEQ,IALwB;AAM9BF,IAAAA,KAAK,EAAE/E,MAAM,GAAGsE,MAAT;AANuB,GAAhB,CAAf;AASA,QAAMa,SAAS,GAAGhG,GAAG,CAACW,EAAD,EAAK,eAAL,EAAsB,SAAtB,CAArB;AACA,QAAMV,SAAS,CAAC+F,SAAD,EAAY;AAC1BP,IAAAA,GAAG,EAAEvD;AADqB,GAAZ,CAAf;AAIA,QAAM+D,QAAQ,GAAGjG,GAAG,CAACW,EAAD,EAAK,eAAL,EAAsB,OAAtB,CAApB;AACA,QAAMV,SAAS,CAACgG,QAAD,EAAW;AACzBR,IAAAA,GAAG,EAAEvF,SAAS,CAAC,CAACgC,KAAF;AADW,GAAX,CAAf;AAIA;;AAAA;;AACD,eAAe2C,cAAf,CAA8BqB,KAA9B,EAAqCC,QAArC,EAA+C;AAE9C,QAAMH,SAAS,GAAGhG,GAAG,CAACW,EAAD,EAAK,UAAL,EAAiB,QAAjB,CAArB;AACA,QAAMV,SAAS,CAAC+F,SAAD,EAAY;AAC1BP,IAAAA,GAAG,EAAES;AADqB,GAAZ,CAAf;AAIA,QAAME,eAAe,GAAGpG,GAAG,CAACW,EAAD,EAAK,QAAL,EAAe,QAAf,CAA3B;AACA,QAAMV,SAAS,CAACmG,eAAD,EAAkB;AAChCX,IAAAA,GAAG,EAAEU;AAD2B,GAAlB,CAAf;AAIA;;AAAA","sourcesContent":["import React from 'react';\nimport './Input.css';\nimport { useForm } from 'react-hook-form';\nimport Media from 'react-media';\nimport { useNavigate } from 'react-router-dom';\nimport { phoneX } from '../Phone/Input';\nimport { doc, updateDoc, increment, onSnapshot, arrayUnion } from \"firebase/firestore\";\n\nimport Button from '@mui/material/Button';\nimport Dialog from '@mui/material/Dialog';\nimport DialogActions from '@mui/material/DialogActions';\nimport DialogContent from '@mui/material/DialogContent';\nimport DialogTitle from '@mui/material/DialogTitle';\nimport DialogContentText from '@mui/material/DialogContentText';\nimport { db } from '../../firebase';\n\nimport ReturnQuOte from './Quote';\nimport moment from 'moment';\nimport 'moment/locale/fr';\n\nexport let nowField = moment().date();\nexport let now = moment().date();\nexport let prixSuccess = 0;\n\nvar regular = /[a-z]+/;\n\n// withdraw input\nexport default function ReturnWithdrAwInput() {\n return (\n  <Media\n   queries={{\n    small: '(max-width: 599px)',\n    medium: '(min-width: 600px) and (max-width:1199px)',\n    large: '(min-width: 1200px)',\n   }}>\n   {matches => (\n    <>\n     {matches.small && <ScreenSmall />}\n     {matches.medium && <ScreenLarge />}\n     {matches.large && <ScreenLarge />}\n    </>\n   )}\n  </Media>\n );\n};\n\nexport const ScreenLarge = () => (\n <div className='wrp-withdraw-input'>\n  <ReturnQuOte />\n  <FormInput />\n </div>\n);\nexport const ScreenSmall = () => (\n <div className='wrp-withdraw-input-sm'>\n  <ReturnQuOte />\n  <FormInput />\n </div>\n);\nexport const FormInput = () => {\n\n const navigation = useNavigate();\n\n const { handleSubmit, register, reset } = useForm();\n const [getPin, setGetPin] = React.useState('');\n const [solde, setSolde] = React.useState(null);\n\n const [open, setOpen] = React.useState(false);\n const [passe, setPasse] = React.useState(false);\n const [fullWidth, setFullWidth] = React.useState(true);\n const [maxWidth, setMaxWidth] = React.useState('sm');\n\n\n const handleClose = () => {\n  setOpen(false);\n };\n\n const handlePasseClose = () => {\n  setPasse(false);\n };\n\n React.useEffect(async () => {\n\n  try {\n\n   await onSnapshot(doc(db, \"muunganomoney\", \"money\"), (doc) => {\n    setGetPin(doc.data().code);\n    setSolde(doc.data().cdf);\n   });\n\n  } catch {\n   window.console.log('erreur disponible');\n  }\n\n }, []);\n\n const onSubmit = async (data) => {\n\n  const phoneItem = window.localStorage.getItem('PHONE_SEND');\n  const sendEMCdf = window.localStorage.getItem('SEND_EM_CDF');\n  const sendEMAgentCdf = window.localStorage.getItem('SEND_EM_AGENT_CDF');\n  const sendUser = window.localStorage.getItem('SEND_USER');\n\n  if (getPin == data.code) {\n\n   if (data.count > 1000 || data.count < 1 || solde < 10 || data.count > solde || regular.test(data.count)) {\n    setOpen(true);\n    reset();\n   } else {\n\n    // let User = first + ' ' + last;\n    sendAgentMoney(Math.floor(Number(data.count)), JSON.parse(phoneItem));\n    updateAdmin(Number(data.count), Math.floor(Number(data.count)), JSON.parse(sendUser));\n\n    let arraySendEMCdf = JSON.parse(sendEMCdf);\n    let arraySendEMAgentCdf = JSON.parse(sendEMAgentCdf);\n\n    let soldeEmCDF = Number(Math.max(...arraySendEMCdf)) + Number(data.count);\n    let soldeAgentCDF = Number(Math.max(...arraySendEMAgentCdf)) + Number(data.count);\n\n    let arrayEmCdf = arraySendEMCdf;\n    let arrayAgentCdf = arraySendEMAgentCdf;\n\n    for (let i = now; i <= 31; i++) {\n     arrayEmCdf[i] = soldeEmCDF;\n     arrayAgentCdf[i] = soldeAgentCDF;\n    }\n\n    prixSuccess = data.count;\n\n    updateMuungano(arrayEmCdf, arrayAgentCdf);\n    window.localStorage.setItem('PHONE_SEND', JSON.stringify(null));\n    window.localStorage.setItem('SEND_EM_CDF', JSON.stringify(null));\n    window.localStorage.setItem('SEND_EM_AGENT_CDF', JSON.stringify(null));\n    window.localStorage.setItem('#62^^ts@&', JSON.stringify(false));\n\n    navigation('/send/success-usd');\n   }\n  } else {\n   prixSuccess = data.count;\n   setPasse(true);\n   reset();\n  }\n\n };\n\n return (\n  <form onSubmit={handleSubmit(onSubmit)}>\n\n   <input type={'text'}\n    {...register('count', { required: true })}\n    name=\"count\"\n    placeholder={'USD'}\n   />\n   <input type={'password'}\n    {...register('code', { required: true })}\n    name=\"code\"\n    placeholder={'••••••'}\n    className='letter-space-pwd'\n   />\n   <button className='Btn'>Envoyer</button>\n\n   <Dialog\n    fullWidth={fullWidth}\n    maxWidth={maxWidth}\n    open={passe}\n    onClose={handlePasseClose}\n   >\n    <DialogTitle>MuunganoMoney</DialogTitle>\n    <DialogContent>\n\n     <DialogContentText>\n      Veuillez vérifier le mot de passe administrateur\n     </DialogContentText>\n\n    </DialogContent>\n    <DialogActions>\n     <Button onClick={handlePasseClose}>Fermer</Button>\n    </DialogActions>\n   </Dialog>\n\n   <Dialog\n    fullWidth={fullWidth}\n    maxWidth={maxWidth}\n    open={open}\n    onClose={handleClose}\n   >\n    <DialogTitle>MuunganoMoney</DialogTitle>\n    <DialogContent>\n\n     <DialogContentText>\n      Le solde entre n'est pas valide, veuillez vérifier\n     </DialogContentText>\n\n    </DialogContent>\n    <DialogActions>\n     <Button onClick={handleClose}>Fermer</Button>\n    </DialogActions>\n   </Dialog>\n\n  </form>\n );\n};\n\nasync function sendAgentMoney(solde, numPhone) {\n\n let time = moment().format('LLL');\n let send = { date: time, solde: `${solde} USD`, phone: numPhone, user: 'muunganomoney', type: 'réussi' }\n\n const washingtonRef = doc(db, \"agent\", numPhone);\n // Set the \"capital\" field of the city 'DC'\n await updateDoc(washingtonRef, {\n  usd: increment(solde),\n  money: solde,\n  unite: 'USD',\n  user: 'muunganomoney',\n  delay: moment().format(),\n  swap: arrayUnion(send)\n });\n\n};\nasync function updateAdmin(solde, money, User) {\n\n const washingtonRef = doc(db, \"muunganomoney\", \"money\");\n // Set the \"capital\" field of the city 'DC'\n await updateDoc(washingtonRef, {\n  usd: increment(-solde),\n  money: money,\n  buyusd: solde,\n  unite: 'USD',\n  user: User,\n  delay: moment().format()\n });\n\n const emoneyRef = doc(db, \"muunganomoney\", \"e-money\");\n await updateDoc(emoneyRef, {\n  usd: solde\n });\n\n const moneyRef = doc(db, \"muunganomoney\", \"money\");\n await updateDoc(moneyRef, {\n  usd: increment(-solde)\n });\n\n};\nasync function updateMuungano(emUsd, agentUsd) {\n\n const emoneyRef = doc(db, \"muungano\", \"emoney\");\n await updateDoc(emoneyRef, {\n  usd: emUsd\n });\n\n const agentsemoneyRef = doc(db, \"agents\", \"emoney\");\n await updateDoc(agentsemoneyRef, {\n  usd: agentUsd\n });\n\n};"]},"metadata":{},"sourceType":"module"}