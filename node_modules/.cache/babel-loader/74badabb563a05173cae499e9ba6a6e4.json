{"ast":null,"code":"var _jsxFileName = \"/Users/USER/Desktop/Money/src/Profil/FormUpdate.js\",\n    _s = $RefreshSig$();\n\nimport './FormUpdate.css';\nimport Media from 'react-media';\nimport { useForm } from 'react-hook-form';\nimport { useNavigate } from 'react-router-dom';\nimport { db } from '../firebase';\nimport { getFirestore, doc, setDoc } from 'firebase/firestore'; // View Form Update view\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport default function ReturnFormUpdate() {\n  return /*#__PURE__*/_jsxDEV(Media, {\n    queries: {\n      small: '(max-width: 599px)',\n      medium: '(min-width: 600px) and (max-width:1199px)',\n      large: '(min-width: 1200px)'\n    },\n    children: matches => /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [matches.small && /*#__PURE__*/_jsxDEV(ScreenSmall, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 21,\n        columnNumber: 24\n      }, this), matches.medium && /*#__PURE__*/_jsxDEV(ScreenLarge, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 22,\n        columnNumber: 25\n      }, this), matches.large && /*#__PURE__*/_jsxDEV(ScreenLarge, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 23,\n        columnNumber: 24\n      }, this)]\n    }, void 0, true)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 13,\n    columnNumber: 3\n  }, this);\n}\n_c = ReturnFormUpdate;\n;\nexport const ScreenLarge = () => /*#__PURE__*/_jsxDEV(\"div\", {\n  className: \"wrp-form-input-update\",\n  children: /*#__PURE__*/_jsxDEV(FormInputField, {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 33,\n    columnNumber: 3\n  }, this)\n}, void 0, false, {\n  fileName: _jsxFileName,\n  lineNumber: 32,\n  columnNumber: 2\n}, this);\n_c2 = ScreenLarge;\nexport const ScreenSmall = () => /*#__PURE__*/_jsxDEV(\"div\", {\n  className: \"wrp-form-input-update-sm\",\n  children: /*#__PURE__*/_jsxDEV(FormInputField, {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 38,\n    columnNumber: 3\n  }, this)\n}, void 0, false, {\n  fileName: _jsxFileName,\n  lineNumber: 37,\n  columnNumber: 2\n}, this);\n_c3 = ScreenSmall;\nexport const FormInputField = () => {\n  _s();\n\n  const navigation = useNavigate();\n  const {\n    register,\n    handleSubmit,\n    reset\n  } = useForm();\n\n  const onSubmit = data => {\n    if (data.pin.length != 6) {\n      window.alert('Minimum que 6 lettres accepter.');\n    } else {\n      const docRef = doc(db, 'Client');\n      setDoc(docRef, data, {\n        merge: true\n      });\n      window.alert(`PIN modifier (${data.pin})`);\n      console.log(data.pin);\n    }\n\n    ; // navigation('/dash');\n\n    reset();\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    onSubmit: handleSubmit(onSubmit),\n    children: [/*#__PURE__*/_jsxDEV(\"input\", {\n      type: 'text',\n      placeholder: \"\\u2022\\u2022\\u2022\\u2022\\u2022\\u2022\",\n      ...register('pin')\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 4\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"Btn\",\n      children: \"Enregistre\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 4\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 66,\n    columnNumber: 3\n  }, this);\n};\n\n_s(FormInputField, \"LGK4nv2gX2cLYE4YdxN86BiEBgQ=\", false, function () {\n  return [useNavigate, useForm];\n});\n\n_c4 = FormInputField;\n\nvar _c, _c2, _c3, _c4;\n\n$RefreshReg$(_c, \"ReturnFormUpdate\");\n$RefreshReg$(_c2, \"ScreenLarge\");\n$RefreshReg$(_c3, \"ScreenSmall\");\n$RefreshReg$(_c4, \"FormInputField\");","map":{"version":3,"sources":["/Users/USER/Desktop/Money/src/Profil/FormUpdate.js"],"names":["Media","useForm","useNavigate","db","getFirestore","doc","setDoc","ReturnFormUpdate","small","medium","large","matches","ScreenLarge","ScreenSmall","FormInputField","navigation","register","handleSubmit","reset","onSubmit","data","pin","length","window","alert","docRef","merge","console","log"],"mappings":";;;AACA,OAAO,kBAAP;AACA,OAAOA,KAAP,MAAkB,aAAlB;AACA,SAASC,OAAT,QAAwB,iBAAxB;AACA,SAASC,WAAT,QAA4B,kBAA5B;AAEA,SAASC,EAAT,QAAmB,aAAnB;AACA,SAASC,YAAT,EAAuBC,GAAvB,EAA4BC,MAA5B,QAA0C,oBAA1C,C,CAEA;;;;AACA,eAAe,SAASC,gBAAT,GAA4B;AAC1C,sBACC,QAAC,KAAD;AACC,IAAA,OAAO,EAAE;AACRC,MAAAA,KAAK,EAAE,oBADC;AAERC,MAAAA,MAAM,EAAE,2CAFA;AAGRC,MAAAA,KAAK,EAAE;AAHC,KADV;AAAA,cAMEC,OAAO,iBACP;AAAA,iBACEA,OAAO,CAACH,KAAR,iBAAiB,QAAC,WAAD;AAAA;AAAA;AAAA;AAAA,cADnB,EAEEG,OAAO,CAACF,MAAR,iBAAkB,QAAC,WAAD;AAAA;AAAA;AAAA;AAAA,cAFpB,EAGEE,OAAO,CAACD,KAAR,iBAAiB,QAAC,WAAD;AAAA;AAAA;AAAA;AAAA,cAHnB;AAAA;AAPF;AAAA;AAAA;AAAA;AAAA,UADD;AAgBA;KAjBuBH,gB;AAiBvB;AAGD,OAAO,MAAMK,WAAW,GAAG,mBAC1B;AAAK,EAAA,SAAS,EAAC,uBAAf;AAAA,yBACC,QAAC,cAAD;AAAA;AAAA;AAAA;AAAA;AADD;AAAA;AAAA;AAAA;AAAA,QADM;MAAMA,W;AAKb,OAAO,MAAMC,WAAW,GAAG,mBAC1B;AAAK,EAAA,SAAS,EAAC,0BAAf;AAAA,yBACC,QAAC,cAAD;AAAA;AAAA;AAAA;AAAA;AADD;AAAA;AAAA;AAAA;AAAA,QADM;MAAMA,W;AAKb,OAAO,MAAMC,cAAc,GAAG,MAAM;AAAA;;AAEnC,QAAMC,UAAU,GAAGb,WAAW,EAA9B;AAEA,QAAM;AAAEc,IAAAA,QAAF;AAAYC,IAAAA,YAAZ;AAA0BC,IAAAA;AAA1B,MAAoCjB,OAAO,EAAjD;;AAEA,QAAMkB,QAAQ,GAAIC,IAAD,IAAU;AAE1B,QAAIA,IAAI,CAACC,GAAL,CAASC,MAAT,IAAmB,CAAvB,EAA0B;AACzBC,MAAAA,MAAM,CAACC,KAAP,CAAa,iCAAb;AACA,KAFD,MAEO;AAEN,YAAMC,MAAM,GAAGpB,GAAG,CAACF,EAAD,EAAK,QAAL,CAAlB;AACAG,MAAAA,MAAM,CAACmB,MAAD,EAASL,IAAT,EAAe;AAAEM,QAAAA,KAAK,EAAE;AAAT,OAAf,CAAN;AAEAH,MAAAA,MAAM,CAACC,KAAP,CAAc,iBAAgBJ,IAAI,CAACC,GAAI,GAAvC;AACAM,MAAAA,OAAO,CAACC,GAAR,CAAYR,IAAI,CAACC,GAAjB;AAGA;;AAAA,KAbyB,CAc1B;;AACAH,IAAAA,KAAK;AACL,GAhBD;;AAkBA,sBACC;AAAM,IAAA,QAAQ,EAAED,YAAY,CAACE,QAAD,CAA5B;AAAA,4BACC;AAAO,MAAA,IAAI,EAAE,MAAb;AAAqB,MAAA,WAAW,EAAC,sCAAjC;AAAA,SAA8CH,QAAQ,CAAC,KAAD;AAAtD;AAAA;AAAA;AAAA;AAAA,YADD,eAEC;AAAQ,MAAA,SAAS,EAAC,KAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAFD;AAAA;AAAA;AAAA;AAAA;AAAA,UADD;AAMA,CA9BM;;GAAMF,c;UAEOZ,W,EAEuBD,O;;;MAJ9Ba,c","sourcesContent":["\nimport './FormUpdate.css';\nimport Media from 'react-media';\nimport { useForm } from 'react-hook-form';\nimport { useNavigate } from 'react-router-dom';\n\nimport { db } from '../firebase';\nimport { getFirestore, doc, setDoc } from 'firebase/firestore';\n\n// View Form Update view\nexport default function ReturnFormUpdate() {\n return (\n  <Media\n   queries={{\n    small: '(max-width: 599px)',\n    medium: '(min-width: 600px) and (max-width:1199px)',\n    large: '(min-width: 1200px)',\n   }}>\n   {matches => (\n    <>\n     {matches.small && <ScreenSmall />}\n     {matches.medium && <ScreenLarge />}\n     {matches.large && <ScreenLarge />}\n    </>\n   )}\n  </Media>\n );\n};\n\n\nexport const ScreenLarge = () => (\n <div className='wrp-form-input-update'>\n  <FormInputField />\n </div>\n);\nexport const ScreenSmall = () => (\n <div className='wrp-form-input-update-sm'>\n  <FormInputField />\n </div>\n);\nexport const FormInputField = () => {\n\n const navigation = useNavigate();\n\n const { register, handleSubmit, reset } = useForm();\n\n const onSubmit = (data) => {\n\n  if (data.pin.length != 6) {\n   window.alert('Minimum que 6 lettres accepter.');\n  } else {\n\n   const docRef = doc(db, 'Client');\n   setDoc(docRef, data, { merge: true });\n\n   window.alert(`PIN modifier (${data.pin})`);\n   console.log(data.pin);\n\n\n  };\n  // navigation('/dash');\n  reset();\n };\n\n return (\n  <form onSubmit={handleSubmit(onSubmit)}>\n   <input type={'text'} placeholder='••••••' {...register('pin')} />\n   <button className='Btn'>Enregistre</button>\n  </form>\n );\n};"]},"metadata":{},"sourceType":"module"}