{"ast":null,"code":"var _jsxFileName = \"/Users/USER/Desktop/Agent/src/Reset/Input.js\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport './Input.css';\nimport Media from 'react-media';\nimport { useForm, Controller } from 'react-hook-form';\nimport { useNavigate } from 'react-router-dom';\nimport { updatePassword } from \"firebase/auth\";\nimport { auth } from '../firebase';\nimport Button from '@mui/material/Button';\nimport Dialog from '@mui/material/Dialog';\nimport DialogActions from '@mui/material/DialogActions';\nimport DialogContent from '@mui/material/DialogContent';\nimport DialogTitle from '@mui/material/DialogTitle';\nimport DialogContentText from '@mui/material/DialogContentText';\nimport ReturnQuote from './Quote';\nimport Input from '@mui/material/Input';\nimport InputLabel from '@mui/material/InputLabel';\nimport FormControl from '@mui/material/FormControl';\nimport ReturnQuOte from './Quote';\nimport REturnLogo from './Logo';\nimport Backdrop from '@mui/material/Backdrop';\nimport CircularProgress from '@mui/material/CircularProgress'; // Input Field Component \n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport default function ReturnInput() {\n  return /*#__PURE__*/_jsxDEV(Media, {\n    queries: {\n      small: '(max-width: 599px)',\n      medium: '(min-width: 600px) and (max-width:1199px)',\n      large: '(min-width: 1200px)'\n    },\n    children: matches => /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [matches.small && /*#__PURE__*/_jsxDEV(ScreenSmall, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 24\n      }, this), matches.medium && /*#__PURE__*/_jsxDEV(SreenLarge, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 25\n      }, this), matches.large && /*#__PURE__*/_jsxDEV(SreenLarge, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 24\n      }, this)]\n    }, void 0, true)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 30,\n    columnNumber: 3\n  }, this);\n}\n_c = ReturnInput;\n;\nexport const SreenLarge = () => /*#__PURE__*/_jsxDEV(\"div\", {\n  className: \"form-input-auth\",\n  children: [/*#__PURE__*/_jsxDEV(ReturnQuote, {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 48,\n    columnNumber: 3\n  }, this), /*#__PURE__*/_jsxDEV(FormInput, {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 49,\n    columnNumber: 3\n  }, this)]\n}, void 0, true, {\n  fileName: _jsxFileName,\n  lineNumber: 47,\n  columnNumber: 2\n}, this);\n_c2 = SreenLarge;\nexport const ScreenSmall = () => /*#__PURE__*/_jsxDEV(\"div\", {\n  className: \"form-input-auth\",\n  children: [/*#__PURE__*/_jsxDEV(ReturnQuote, {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 55,\n    columnNumber: 3\n  }, this), /*#__PURE__*/_jsxDEV(FormInput, {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 56,\n    columnNumber: 3\n  }, this)]\n}, void 0, true, {\n  fileName: _jsxFileName,\n  lineNumber: 54,\n  columnNumber: 2\n}, this);\n_c3 = ScreenSmall;\nexport const FormInput = () => {\n  _s();\n\n  const user = auth.currentUser;\n  const navigation = useNavigate();\n  const {\n    register,\n    handleSubmit,\n    reset\n  } = useForm();\n  const [open, setOpen] = React.useState(false);\n  const [fullWidth, setFullWidth] = React.useState(true);\n  const [maxWidth, setMaxWidth] = React.useState('sm');\n\n  const handleClose = () => {\n    setOpen(false);\n  };\n\n  const onSubmit = async data => {\n    window.console.log(user.uid);\n    updatePassword(user, data.pwd).then(() => {\n      // Update successful.\n      window.localStorage.setItem('?bu%^%ild--#', JSON.stringify(false));\n      navigation('/');\n    }).catch(error => {\n      // An error ocurred\n      setOpen(true);\n      window.console.log(error);\n    });\n    reset();\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    onSubmit: handleSubmit(onSubmit),\n    children: [/*#__PURE__*/_jsxDEV(FormControl, {\n      sx: {\n        width: '100%'\n      },\n      variant: \"standard\",\n      children: [/*#__PURE__*/_jsxDEV(InputLabel, {\n        htmlFor: \"standard-adornment-password\",\n        children: \"Mot de passe\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 98,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(Controller, {\n        name: \"password\",\n        defaultValue: \"\",\n        control: control,\n        render: ({\n          field\n        }) => /*#__PURE__*/_jsxDEV(Input, {\n          id: \"standard-adornment-password\",\n          ...field,\n          style: {\n            textAlign: 'center'\n          },\n          type: \"password\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 106,\n          columnNumber: 7\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 100,\n        columnNumber: 5\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 4\n    }, this), /*#__PURE__*/_jsxDEV(Dialog, {\n      fullWidth: fullWidth,\n      maxWidth: maxWidth,\n      open: open,\n      onClose: handleClose,\n      children: [/*#__PURE__*/_jsxDEV(DialogTitle, {\n        children: \"MuunganoMoney\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 123,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(DialogContent, {\n        children: /*#__PURE__*/_jsxDEV(DialogContentText, {\n          children: \"Le mot de passe n'est pas valide\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 126,\n          columnNumber: 6\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 124,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(DialogActions, {\n        children: /*#__PURE__*/_jsxDEV(Button, {\n          onClick: handleClose,\n          children: \"Fermer\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 132,\n          columnNumber: 6\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 131,\n        columnNumber: 5\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 117,\n      columnNumber: 4\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"Btn\",\n      children: \"Enregistre\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 136,\n      columnNumber: 4\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 91,\n    columnNumber: 3\n  }, this);\n};\n\n_s(FormInput, \"OIy1rSpfvCkYg9eF5JpBZx9pAWg=\", false, function () {\n  return [useNavigate, useForm];\n});\n\n_c4 = FormInput;\n\nvar _c, _c2, _c3, _c4;\n\n$RefreshReg$(_c, \"ReturnInput\");\n$RefreshReg$(_c2, \"SreenLarge\");\n$RefreshReg$(_c3, \"ScreenSmall\");\n$RefreshReg$(_c4, \"FormInput\");","map":{"version":3,"sources":["/Users/USER/Desktop/Agent/src/Reset/Input.js"],"names":["React","Media","useForm","Controller","useNavigate","updatePassword","auth","Button","Dialog","DialogActions","DialogContent","DialogTitle","DialogContentText","ReturnQuote","Input","InputLabel","FormControl","ReturnQuOte","REturnLogo","Backdrop","CircularProgress","ReturnInput","small","medium","large","matches","SreenLarge","ScreenSmall","FormInput","user","currentUser","navigation","register","handleSubmit","reset","open","setOpen","useState","fullWidth","setFullWidth","maxWidth","setMaxWidth","handleClose","onSubmit","data","window","console","log","uid","pwd","then","localStorage","setItem","JSON","stringify","catch","error","width","control","field","textAlign"],"mappings":"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","sourcesContent":["import React from 'react';\nimport './Input.css';\nimport Media from 'react-media';\nimport { useForm, Controller } from 'react-hook-form';\nimport { useNavigate } from 'react-router-dom';\nimport { updatePassword } from \"firebase/auth\";\nimport { auth } from '../firebase';\n\nimport Button from '@mui/material/Button';\nimport Dialog from '@mui/material/Dialog';\nimport DialogActions from '@mui/material/DialogActions';\nimport DialogContent from '@mui/material/DialogContent';\nimport DialogTitle from '@mui/material/DialogTitle';\nimport DialogContentText from '@mui/material/DialogContentText';\n\nimport ReturnQuote from './Quote';\nimport Input from '@mui/material/Input';\nimport InputLabel from '@mui/material/InputLabel';\nimport FormControl from '@mui/material/FormControl';\nimport ReturnQuOte from './Quote';\nimport REturnLogo from './Logo';\n\nimport Backdrop from '@mui/material/Backdrop';\nimport CircularProgress from '@mui/material/CircularProgress';\n\n\n// Input Field Component \nexport default function ReturnInput() {\n return (\n  <Media\n   queries={{\n    small: '(max-width: 599px)',\n    medium: '(min-width: 600px) and (max-width:1199px)',\n    large: '(min-width: 1200px)',\n   }}>\n   {matches => (\n    <>\n     {matches.small && <ScreenSmall />}\n     {matches.medium && <SreenLarge />}\n     {matches.large && <SreenLarge />}\n    </>\n   )}\n  </Media>\n );\n};\nexport const SreenLarge = () => (\n <div className='form-input-auth'>\n  <ReturnQuote />\n  <FormInput />\n\n </div>\n);\nexport const ScreenSmall = () => (\n <div className='form-input-auth'>\n  <ReturnQuote />\n  <FormInput />\n </div>\n);\nexport const FormInput = () => {\n\n const user = auth.currentUser;\n const navigation = useNavigate();\n const { register, handleSubmit, reset } = useForm();\n\n const [open, setOpen] = React.useState(false);\n const [fullWidth, setFullWidth] = React.useState(true);\n const [maxWidth, setMaxWidth] = React.useState('sm');\n\n const handleClose = () => {\n  setOpen(false);\n };\n\n const onSubmit = async (data) => {\n  window.console.log(user.uid);\n\n  updatePassword(user, data.pwd).then(() => {\n   // Update successful.\n   window.localStorage.setItem('?bu%^%ild--#', JSON.stringify(false));\n   navigation('/');\n\n  }).catch((error) => {\n   // An error ocurred\n   setOpen(true);\n   window.console.log(error);\n  });\n\n  reset();\n };\n\n return (\n  <form onSubmit={handleSubmit(onSubmit)}>\n   {/* <input type='password' placeholder='•••••••' name='pwd' {...register('pwd', { required: true })} /> */}\n\n   <FormControl\n    sx={{ width: '100%' }}\n\n    variant=\"standard\">\n    <InputLabel htmlFor=\"standard-adornment-password\">Mot de passe</InputLabel>\n\n    <Controller\n     name=\"password\"\n     defaultValue=''\n     control={control}\n     render={({ field }) =>\n\n      <Input\n       id=\"standard-adornment-password\"\n       {...field}\n\n       style={{ textAlign: 'center' }}\n       type='password'\n      />}\n    />\n\n   </FormControl>\n\n   <Dialog\n    fullWidth={fullWidth}\n    maxWidth={maxWidth}\n    open={open}\n    onClose={handleClose}\n   >\n    <DialogTitle>MuunganoMoney</DialogTitle>\n    <DialogContent>\n\n     <DialogContentText>\n      Le mot de passe n'est pas valide\n     </DialogContentText>\n\n    </DialogContent>\n    <DialogActions>\n     <Button onClick={handleClose}>Fermer</Button>\n    </DialogActions>\n   </Dialog>\n\n   <button className='Btn'>Enregistre</button>\n  </form>\n )\n};\n"]},"metadata":{},"sourceType":"module"}