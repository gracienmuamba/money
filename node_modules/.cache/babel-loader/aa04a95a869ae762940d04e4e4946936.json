{"ast":null,"code":"var _jsxFileName = \"/Users/USER/Desktop/Agent/src/Send/Withdraw/Input.js\",\n    _s = $RefreshSig$();\n\nimport './Input.css';\nimport { useForm } from 'react-hook-form';\nimport Media from 'react-media';\nimport { useNavigate } from 'react-router-dom';\nimport { doc, getDoc, updateDoc } from \"firebase/firestore\";\nimport { db } from '../../firebase'; // withdraw input\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport default function ReturnWithdrAwInput() {\n  return /*#__PURE__*/_jsxDEV(Media, {\n    queries: {\n      small: '(max-width: 599px)',\n      medium: '(min-width: 600px) and (max-width:1199px)',\n      large: '(min-width: 1200px)'\n    },\n    children: matches => /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [matches.small && /*#__PURE__*/_jsxDEV(ScreenSmall, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 22,\n        columnNumber: 24\n      }, this), matches.medium && /*#__PURE__*/_jsxDEV(ScreenLarge, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 23,\n        columnNumber: 25\n      }, this), matches.large && /*#__PURE__*/_jsxDEV(ScreenLarge, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 24,\n        columnNumber: 24\n      }, this)]\n    }, void 0, true)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 14,\n    columnNumber: 3\n  }, this);\n}\n_c = ReturnWithdrAwInput;\n;\nexport const ScreenLarge = () => /*#__PURE__*/_jsxDEV(\"div\", {\n  className: \"wrp-withdraw-input\",\n  children: /*#__PURE__*/_jsxDEV(FormInput, {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 33,\n    columnNumber: 3\n  }, this)\n}, void 0, false, {\n  fileName: _jsxFileName,\n  lineNumber: 32,\n  columnNumber: 2\n}, this);\n_c2 = ScreenLarge;\nexport const ScreenSmall = () => /*#__PURE__*/_jsxDEV(\"div\", {\n  className: \"wrp-withdraw-input-sm\",\n  children: /*#__PURE__*/_jsxDEV(FormInput, {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 38,\n    columnNumber: 3\n  }, this)\n}, void 0, false, {\n  fileName: _jsxFileName,\n  lineNumber: 37,\n  columnNumber: 2\n}, this);\n_c3 = ScreenSmall;\nexport const FormInput = () => {\n  _s();\n\n  const navigation = useNavigate();\n  const {\n    handleSubmit,\n    register,\n    reset\n  } = useForm();\n\n  const onSubmit = async data => {\n    // if (verifierCode() == data.code) {\n    //  sendInWithnumberPhone(data.count, phoneX);\n    // } else {\n    //  window.alert(`Erreur Code Invalid.`);\n    // };\n    reset(); // navigation('/send/success');\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    onSubmit: handleSubmit(onSubmit),\n    children: [/*#__PURE__*/_jsxDEV(\"input\", {\n      type: 'text',\n      ...register('count', {\n        required: true\n      }),\n      name: \"count\",\n      placeholder: '0',\n      className: \"input-count\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 4\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"wrp-Btn-input-withdraw\",\n      children: /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"Btn\",\n        children: \"Suivant\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 5\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 4\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 60,\n    columnNumber: 3\n  }, this);\n}; // verifier code access input\n\n_s(FormInput, \"ZcRYcKuuvjHisz5kN28vdxBcyI8=\", false, function () {\n  return [useNavigate, useForm];\n});\n\n_c4 = FormInput;\nexport const verifierCode = async () => {\n  const docRef = doc(db, \"ungama\", \"money\");\n  const docSnap = await getDoc(docRef);\n\n  if (docSnap.exists()) {\n    return docSnap.data().code;\n  } else {\n    // doc.data() will be undefined in this case\n    return \"not found\";\n  }\n};\nexport const sendInWithnumberPhone = async (solde, numberPhone) => {\n  let value = 0;\n  const docRef = doc(db, \"agent\", numberPhone);\n  const docSnap = await getDoc(docRef);\n\n  if (docSnap.exists()) {\n    value = docSnap.data().fc;\n  } else {\n    // doc.data() will be undefined in this case\n    console.log(\"No such document!\");\n  }\n\n  value = Number(value) + Number(solde);\n  const washingtonRef = doc(db, \"agent\", numberPhone); // Set the \"capital\" field of the city 'DC'\n\n  await updateDoc(washingtonRef, {\n    fc: Math.floor(value)\n  });\n};\n\nvar _c, _c2, _c3, _c4;\n\n$RefreshReg$(_c, \"ReturnWithdrAwInput\");\n$RefreshReg$(_c2, \"ScreenLarge\");\n$RefreshReg$(_c3, \"ScreenSmall\");\n$RefreshReg$(_c4, \"FormInput\");","map":{"version":3,"sources":["/Users/USER/Desktop/Agent/src/Send/Withdraw/Input.js"],"names":["useForm","Media","useNavigate","doc","getDoc","updateDoc","db","ReturnWithdrAwInput","small","medium","large","matches","ScreenLarge","ScreenSmall","FormInput","navigation","handleSubmit","register","reset","onSubmit","data","required","verifierCode","docRef","docSnap","exists","code","sendInWithnumberPhone","solde","numberPhone","value","fc","console","log","Number","washingtonRef","Math","floor"],"mappings":"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","sourcesContent":["\nimport './Input.css';\nimport { useForm } from 'react-hook-form';\nimport Media from 'react-media';\nimport { useNavigate } from 'react-router-dom';\n\nimport { doc, getDoc, updateDoc } from \"firebase/firestore\";\nimport { db } from '../../firebase';\n\n\n// withdraw input\nexport default function ReturnWithdrAwInput() {\n return (\n  <Media\n   queries={{\n    small: '(max-width: 599px)',\n    medium: '(min-width: 600px) and (max-width:1199px)',\n    large: '(min-width: 1200px)',\n   }}>\n   {matches => (\n    <>\n     {matches.small && <ScreenSmall />}\n     {matches.medium && <ScreenLarge />}\n     {matches.large && <ScreenLarge />}\n    </>\n   )}\n  </Media>\n );\n};\n\nexport const ScreenLarge = () => (\n <div className='wrp-withdraw-input'>\n  <FormInput />\n </div>\n);\nexport const ScreenSmall = () => (\n <div className='wrp-withdraw-input-sm'>\n  <FormInput />\n </div>\n);\n\nexport const FormInput = () => {\n\n const navigation = useNavigate();\n const { handleSubmit, register, reset } = useForm();\n\n const onSubmit = async (data) => {\n\n  // if (verifierCode() == data.code) {\n  //  sendInWithnumberPhone(data.count, phoneX);\n  // } else {\n  //  window.alert(`Erreur Code Invalid.`);\n  // };\n\n  reset();\n  // navigation('/send/success');\n };\n\n return (\n  <form onSubmit={handleSubmit(onSubmit)}>\n   <input type={'text'}\n    {...register('count', { required: true })}\n    name=\"count\"\n    placeholder={'0'}\n    className='input-count'\n   />\n\n   <div className='wrp-Btn-input-withdraw'>\n    <button className='Btn'>Suivant</button>\n   </div>\n  </form>\n );\n};\n\n// verifier code access input\nexport const verifierCode = async () => {\n\n const docRef = doc(db, \"ungama\", \"money\");\n const docSnap = await getDoc(docRef);\n\n if (docSnap.exists()) {\n  return docSnap.data().code;\n } else {\n  // doc.data() will be undefined in this case\n  return \"not found\";\n }\n\n};\nexport const sendInWithnumberPhone = async (solde, numberPhone) => {\n\n let value = 0;\n const docRef = doc(db, \"agent\", numberPhone);\n const docSnap = await getDoc(docRef);\n\n\n if (docSnap.exists()) {\n  value = docSnap.data().fc\n } else {\n  // doc.data() will be undefined in this case\n  console.log(\"No such document!\");\n }\n\n\n value = Number(value) + Number(solde);\n\n const washingtonRef = doc(db, \"agent\", numberPhone);\n // Set the \"capital\" field of the city 'DC'\n await updateDoc(washingtonRef, {\n  fc: Math.floor(value)\n });\n\n};\n"]},"metadata":{},"sourceType":"module"}