{"ast":null,"code":"var _jsxFileName = \"/Users/USER/Desktop/MuunganoMoney/src/Current/Time.js\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport './Time.css';\nimport REturnPriX from './Prix';\nimport Media from 'react-media';\nimport { doc, onSnapshot, getDocs, collection, updateDoc, increment } from \"firebase/firestore\";\nimport { phoneX } from '../Sign/Input';\nimport { db } from '../firebase';\nimport moment from 'moment';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport let exchAnge = 0; // Export view \n// Return Phone input component\n\nexport default function REturnInputPhone() {\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(Media, {\n      queries: {\n        small: '(max-width: 599px)',\n        medium: '(min-width: 600px) and (max-width:1199px)',\n        large: '(min-width: 1200px)'\n      },\n      children: matches => /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [matches.small && /*#__PURE__*/_jsxDEV(ScreenSmall, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 25,\n          columnNumber: 25\n        }, this), matches.medium && /*#__PURE__*/_jsxDEV(ScreenLarge, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 26,\n          columnNumber: 26\n        }, this), matches.large && /*#__PURE__*/_jsxDEV(ScreenLarge, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 27,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 4\n    }, this)\n  }, void 0, false);\n}\n_c = REturnInputPhone;\n;\nexport const ScreenLarge = () => {\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(REturnPriX, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 4\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"wrp-frais-current\",\n      children: /*#__PURE__*/_jsxDEV(FormInputValue, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 5\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 4\n    }, this)]\n  }, void 0, true);\n};\n_c2 = ScreenLarge;\nexport const ScreenSmall = () => {\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(REturnPriX, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 4\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"wrp-frais-current-sm\",\n      children: /*#__PURE__*/_jsxDEV(FormInputValue, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 5\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 4\n    }, this)]\n  }, void 0, true);\n};\n_c3 = ScreenSmall;\nexport const FormInputValue = () => {\n  _s();\n\n  let pushArray = new Array();\n  const [time, setTime] = React.useState(null);\n  const [checked, setChecked] = React.useState(null);\n  const [state, setState] = React.useState(null);\n  const [prix, setPrix] = React.useState(null);\n  React.useEffect(async () => {\n    const querySnapshot = await getDocs(collection(db, \"client\"));\n    querySnapshot.forEach(doc => {\n      pushArray.push(doc.id);\n    });\n    const verifier = pushArray.some(index => index == phoneX);\n    const unsub = onSnapshot(doc(db, verifier ? \"client\" : \"agent\", phoneX), doc => {\n      setTime(doc.data().datethrift);\n      setChecked(doc.data().verifierthrift);\n      setState(doc.data().state);\n      setPrix(doc.data().thrift);\n    });\n    moment();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"span\", {\n      children: `Compte d'Ã©pargne disponible`\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 4\n    }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n      children: time\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 4\n    }, this)]\n  }, void 0, true);\n};\n\n_s(FormInputValue, \"3ySurhm29YeCj3J6p9BzK4VlQsg=\");\n\n_c4 = FormInputValue;\n\nasync function sendSavingsMoney(solde, status, phoneNumber) {\n  const savingsRef = doc(db, `${status}`, phoneNumber); // Set the \"capital\" field of the city 'DC'\n\n  await updateDoc(savingsRef, {\n    cdf: increment(solde),\n    thrift: 0,\n    verifierthrift: false\n  });\n}\n\nvar _c, _c2, _c3, _c4;\n\n$RefreshReg$(_c, \"REturnInputPhone\");\n$RefreshReg$(_c2, \"ScreenLarge\");\n$RefreshReg$(_c3, \"ScreenSmall\");\n$RefreshReg$(_c4, \"FormInputValue\");","map":{"version":3,"sources":["/Users/USER/Desktop/MuunganoMoney/src/Current/Time.js"],"names":["React","REturnPriX","Media","doc","onSnapshot","getDocs","collection","updateDoc","increment","phoneX","db","moment","exchAnge","REturnInputPhone","small","medium","large","matches","ScreenLarge","ScreenSmall","FormInputValue","pushArray","Array","time","setTime","useState","checked","setChecked","state","setState","prix","setPrix","useEffect","querySnapshot","forEach","push","id","verifier","some","index","unsub","data","datethrift","verifierthrift","thrift","sendSavingsMoney","solde","status","phoneNumber","savingsRef","cdf"],"mappings":"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","sourcesContent":["\nimport React from 'react';\nimport './Time.css';\nimport REturnPriX from './Prix';\nimport Media from 'react-media';\nimport { doc, onSnapshot, getDocs, collection, updateDoc, increment } from \"firebase/firestore\";\nimport { phoneX } from '../Sign/Input';\nimport { db } from '../firebase';\nimport moment from 'moment';\n\nexport let exchAnge = 0; // Export view \n\n// Return Phone input component\nexport default function REturnInputPhone() {\n return (\n  <>\n   <Media\n    queries={{\n     small: '(max-width: 599px)',\n     medium: '(min-width: 600px) and (max-width:1199px)',\n     large: '(min-width: 1200px)',\n    }}>\n    {matches => (\n     <>\n      {matches.small && <ScreenSmall />}\n      {matches.medium && <ScreenLarge />}\n      {matches.large && <ScreenLarge />}\n     </>\n    )}\n   </Media>\n  </>\n );\n};\n\nexport const ScreenLarge = () => {\n return (\n  <>\n   <REturnPriX />\n   <div className='wrp-frais-current'>\n    <FormInputValue />\n   </div>\n  </>\n );\n};\nexport const ScreenSmall = () => {\n return (\n  <>\n   <REturnPriX />\n   <div className='wrp-frais-current-sm'>\n    <FormInputValue />\n   </div>\n  </>\n )\n};\nexport const FormInputValue = () => {\n\n let pushArray = new Array();\n const [time, setTime] = React.useState(null);\n const [checked, setChecked] = React.useState(null);\n const [state, setState] = React.useState(null);\n const [prix, setPrix] = React.useState(null);\n\n React.useEffect(async () => {\n\n  const querySnapshot = await getDocs(collection(db, \"client\"));\n  querySnapshot.forEach((doc) => {\n   pushArray.push(doc.id);\n\n  });\n  const verifier = pushArray.some(index => index == phoneX);\n  const unsub = onSnapshot(doc(db, verifier ? \"client\" : \"agent\", phoneX), (doc) => {\n\n   setTime(doc.data().datethrift);\n   setChecked(doc.data().verifierthrift);\n   setState(doc.data().state);\n   setPrix(doc.data().thrift);\n\n  });\n\n\n  moment()\n\n }, []);\n\n return (\n  <>\n   <span>{`Compte d'Ã©pargne disponible`}</span>\n   <span>{time}</span>\n  </>\n );\n};\n\nasync function sendSavingsMoney(solde, status, phoneNumber) {\n\n const savingsRef = doc(db, `${status}`, phoneNumber);\n // Set the \"capital\" field of the city 'DC'\n await updateDoc(savingsRef, {\n  cdf: increment(solde),\n  thrift: 0,\n  verifierthrift: false\n });\n\n}"]},"metadata":{},"sourceType":"module"}