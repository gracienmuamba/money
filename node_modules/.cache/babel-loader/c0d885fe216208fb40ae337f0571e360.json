{"ast":null,"code":"var _jsxFileName = \"/Users/USER/Desktop/MuunganoMoney/src/Register/SignIn/Input.js\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport './Input.css';\nimport Media from 'react-media';\nimport { useForm } from 'react-hook-form';\nimport { useNavigate } from 'react-router-dom';\nimport { doc, setDoc, updateDoc, increment, onSnapshot } from 'firebase/firestore';\nimport { db } from '../../firebase';\nimport { phoneX } from '../Phone/Input';\nimport dayjs from 'dayjs';\nimport Stack from '@mui/material/Stack';\nimport TextField from '@mui/material/TextField';\nimport { LocalizationProvider } from '@mui/x-date-pickers/LocalizationProvider';\nimport { AdapterDayjs } from '@mui/x-date-pickers/AdapterDayjs';\nimport { TimePicker } from '@mui/x-date-pickers/TimePicker';\nimport { DateTimePicker } from '@mui/x-date-pickers/DateTimePicker';\nimport { DesktopDatePicker } from '@mui/x-date-pickers/DesktopDatePicker';\nimport { MobileDatePicker } from '@mui/x-date-pickers/MobileDatePicker';\nimport moment from 'moment';\nimport 'moment/locale/fr';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport let nowField = moment().date() - 1; // Input Field Component \n\nexport default function ReturnInput() {\n  return /*#__PURE__*/_jsxDEV(Media, {\n    queries: {\n      small: '(max-width: 599px)',\n      medium: '(min-width: 600px) and (max-width:1199px)',\n      large: '(min-width: 1200px)'\n    },\n    children: matches => /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [matches.small && /*#__PURE__*/_jsxDEV(ScreenSmall, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 24\n      }, this), matches.medium && /*#__PURE__*/_jsxDEV(SreenLarge, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 25\n      }, this), matches.large && /*#__PURE__*/_jsxDEV(SreenLarge, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 24\n      }, this)]\n    }, void 0, true)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 30,\n    columnNumber: 3\n  }, this);\n}\n_c = ReturnInput;\n;\nexport const SreenLarge = () => {\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"wrp-input-signin-register\",\n    children: /*#__PURE__*/_jsxDEV(FormInput, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 4\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 49,\n    columnNumber: 3\n  }, this);\n};\n_c2 = SreenLarge;\nexport const ScreenSmall = () => {\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"wrp-input-signin-register-sm\",\n    children: /*#__PURE__*/_jsxDEV(FormInput, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 4\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 57,\n    columnNumber: 3\n  }, this);\n};\n_c3 = ScreenSmall;\nexport const FormInput = () => {\n  _s();\n\n  const [value, setValue] = React.useState(dayjs('2000-08-18T21:11:54'));\n  const [tablepartner, setTablepartner] = React.useState();\n\n  const handleChange = newValue => {\n    setValue(newValue);\n  };\n\n  let regular = /[a-z]+/;\n  const navigation = useNavigate();\n  const existing = {\n    state: \"client\",\n    cdf: 0,\n    usd: 0,\n    thriftcdf: 0,\n    thriftusd: 0,\n    accountdate: moment().format(),\n    delay: '',\n    code: 'muuganomoney',\n    phoneclient: '',\n    unite: '',\n    solde: 0,\n    money: 0,\n    frais: 0,\n    user: ''\n  };\n  const {\n    register,\n    handleSubmit\n  } = useForm({\n    defaultValues: {\n      phone: '+243'\n    }\n  });\n  React.useEffect(async () => {\n    try {\n      await onSnapshot(doc(db, \"muungano\", \"partner\"), doc => {\n        setTablepartner(doc.data().client);\n      });\n    } catch {\n      window.console.log('erreur disponible');\n    }\n  }, []); // Ref collection database!\n\n  const onSubmit = async data => {\n    if (data.phone.length != 13 || regular.test(data.phone)) {\n      window.alert('Numéro de téléphone est Incorrect!');\n    } else {\n      let valuePartner = Number(tablepartner[nowField]) + 1;\n      let arrayPartner = tablepartner;\n      arrayPartner[nowField] = valuePartner;\n      const clone = Object.assign(data, existing, arrayPartner);\n      saveInfoInWithDocs(phoneX, clone);\n      navigation('/register/success');\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    onSubmit: handleSubmit(onSubmit),\n    children: [/*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      placeholder: \"Nom\",\n      name: \"firstname\",\n      ...register('firstname', {\n        required: true\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 113,\n      columnNumber: 4\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      placeholder: \"Pr\\xE8nom\",\n      name: \"lastname\",\n      ...register('lastname', {\n        required: true\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 114,\n      columnNumber: 4\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"email\",\n      placeholder: \"Email\",\n      name: \"email\",\n      ...register('email', {\n        required: false\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 115,\n      columnNumber: 4\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"phone\",\n      placeholder: \"Phone\",\n      name: \"phone\",\n      ...register('phone', {\n        required: true\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 116,\n      columnNumber: 4\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      placeholder: \"Ville\",\n      name: \"ville\",\n      ...register('ville', {\n        required: true\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 118,\n      columnNumber: 4\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      placeholder: \"Addresse\",\n      name: \"addresse\",\n      ...register('addresse', {\n        required: true\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 119,\n      columnNumber: 4\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"date\",\n      placeholder: \"date de naissance\",\n      name: \"birth\",\n      ...register('birth', {\n        required: true\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 120,\n      columnNumber: 4\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"Btn\",\n      children: \"Enregistre\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 139,\n      columnNumber: 4\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 112,\n    columnNumber: 3\n  }, this);\n};\n\n_s(FormInput, \"K+VO/MQMpJ96e3K7CIZZ6c6GDyY=\", false, function () {\n  return [useNavigate, useForm];\n});\n\n_c4 = FormInput;\n\nasync function saveInfoInWithDocs(phoneInDocs, user, arrayPartner) {\n  await setDoc(doc(db, \"client\", phoneInDocs), user);\n  const washingtonRef = doc(db, \"muunganomoney\", \"partner\");\n  await updateDoc(washingtonRef, {\n    client: increment(1)\n  });\n  const partnerRef = doc(db, \"muungano\", \"partner\");\n  await updateDoc(partnerRef, {\n    client: arrayPartner\n  });\n}\n\n;\n\nvar _c, _c2, _c3, _c4;\n\n$RefreshReg$(_c, \"ReturnInput\");\n$RefreshReg$(_c2, \"SreenLarge\");\n$RefreshReg$(_c3, \"ScreenSmall\");\n$RefreshReg$(_c4, \"FormInput\");","map":{"version":3,"sources":["/Users/USER/Desktop/MuunganoMoney/src/Register/SignIn/Input.js"],"names":["React","Media","useForm","useNavigate","doc","setDoc","updateDoc","increment","onSnapshot","db","phoneX","dayjs","Stack","TextField","LocalizationProvider","AdapterDayjs","TimePicker","DateTimePicker","DesktopDatePicker","MobileDatePicker","moment","nowField","date","ReturnInput","small","medium","large","matches","SreenLarge","ScreenSmall","FormInput","value","setValue","useState","tablepartner","setTablepartner","handleChange","newValue","regular","navigation","existing","state","cdf","usd","thriftcdf","thriftusd","accountdate","format","delay","code","phoneclient","unite","solde","money","frais","user","register","handleSubmit","defaultValues","phone","useEffect","data","client","window","console","log","onSubmit","length","test","alert","valuePartner","Number","arrayPartner","clone","Object","assign","saveInfoInWithDocs","required","phoneInDocs","washingtonRef","partnerRef"],"mappings":"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","sourcesContent":["\nimport React from 'react';\nimport './Input.css';\nimport Media from 'react-media';\nimport { useForm } from 'react-hook-form';\nimport { useNavigate } from 'react-router-dom';\nimport { doc, setDoc, updateDoc, increment, onSnapshot } from 'firebase/firestore';\nimport { db } from '../../firebase';\nimport { phoneX } from '../Phone/Input';\n\nimport dayjs from 'dayjs';\nimport Stack from '@mui/material/Stack';\nimport TextField from '@mui/material/TextField';\nimport { LocalizationProvider } from '@mui/x-date-pickers/LocalizationProvider';\nimport { AdapterDayjs } from '@mui/x-date-pickers/AdapterDayjs';\nimport { TimePicker } from '@mui/x-date-pickers/TimePicker';\nimport { DateTimePicker } from '@mui/x-date-pickers/DateTimePicker';\nimport { DesktopDatePicker } from '@mui/x-date-pickers/DesktopDatePicker';\nimport { MobileDatePicker } from '@mui/x-date-pickers/MobileDatePicker';\n\n\nimport moment from 'moment';\nimport 'moment/locale/fr';\nexport let nowField = (moment().date()) - 1;\n\n\n// Input Field Component \nexport default function ReturnInput() {\n return (\n  <Media\n   queries={{\n    small: '(max-width: 599px)',\n    medium: '(min-width: 600px) and (max-width:1199px)',\n    large: '(min-width: 1200px)',\n   }}>\n   {matches => (\n    <>\n     {matches.small && <ScreenSmall />}\n     {matches.medium && <SreenLarge />}\n     {matches.large && <SreenLarge />}\n    </>\n   )}\n  </Media>\n );\n};\n\nexport const SreenLarge = () => {\n return (\n  <div className='wrp-input-signin-register'>\n   <FormInput />\n\n  </div>\n )\n}\nexport const ScreenSmall = () => {\n return (\n  <div className='wrp-input-signin-register-sm'>\n   <FormInput />\n\n  </div>\n )\n};\nexport const FormInput = () => {\n\n const [value, setValue] = React.useState(dayjs('2000-08-18T21:11:54'));\n const [tablepartner, setTablepartner] = React.useState();\n\n const handleChange = (newValue) => {\n  setValue(newValue);\n };\n\n let regular = /[a-z]+/;\n const navigation = useNavigate();\n const existing = { state: \"client\", cdf: 0, usd: 0, thriftcdf: 0, thriftusd: 0, accountdate: moment().format(), delay: '', code: 'muuganomoney', phoneclient: '', unite: '', solde: 0, money: 0, frais: 0, user: '' }\n const { register, handleSubmit } = useForm({\n  defaultValues: {\n   phone: '+243'\n  }\n });\n\n React.useEffect(async () => {\n\n  try {\n   await onSnapshot(doc(db, \"muungano\", \"partner\"), (doc) => {\n    setTablepartner(doc.data().client);\n   });\n\n  } catch {\n   window.console.log('erreur disponible');\n  }\n\n }, []);\n\n // Ref collection database!\n const onSubmit = async (data) => {\n\n  if (data.phone.length != 13 || regular.test(data.phone)) {\n   window.alert('Numéro de téléphone est Incorrect!');\n  } else {\n\n   let valuePartner = Number(tablepartner[nowField]) + 1;\n   let arrayPartner = tablepartner;\n   arrayPartner[nowField] = valuePartner;\n\n   const clone = Object.assign(data, existing, arrayPartner);\n   saveInfoInWithDocs(phoneX, clone);\n   navigation('/register/success');\n  }\n };\n\n return (\n  <form onSubmit={handleSubmit(onSubmit)}>\n   <input type='text' placeholder='Nom' name='firstname' {...register('firstname', { required: true })} />\n   <input type='text' placeholder='Prènom' name='lastname' {...register('lastname', { required: true })} />\n   <input type='email' placeholder='Email' name='email' {...register('email', { required: false })} />\n   <input type='phone' placeholder='Phone' name='phone' {...register('phone', { required: true })} />\n   {/* <input type='text' placeholder='Nom du Business' name='job' {...register('job', { required: true })} /> */}\n   <input type='text' placeholder='Ville' name='ville' {...register('ville', { required: true })} />\n   <input type='text' placeholder='Addresse' name='addresse' {...register('addresse', { required: true })} />\n   <input type='date' placeholder='date de naissance' name='birth' {...register('birth', { required: true })} />\n\n\n   {/* <LocalizationProvider dateAdapter={AdapterDayjs}>\n    <Stack spacing={3}>\n\n     <DesktopDatePicker\n      label=\"Date de naissance\"\n      inputFormat=\"MM/DD/YYYY\"\n      value={value}\n      onChange={handleChange}\n      name='birth'\n      {...register('birth', { required: true })}\n      renderInput={(params) => <TextField {...params} />}\n     />\n    </Stack>\n   </LocalizationProvider> */}\n\n\n   <button className='Btn'>Enregistre</button>\n  </form>\n )\n};\n\nasync function saveInfoInWithDocs(phoneInDocs, user, arrayPartner) {\n await setDoc(doc(db, \"client\", phoneInDocs), user);\n\n const washingtonRef = doc(db, \"muunganomoney\", \"partner\");\n await updateDoc(washingtonRef, {\n  client: increment(1)\n });\n\n const partnerRef = doc(db, \"muungano\", \"partner\");\n await updateDoc(partnerRef, {\n  client: arrayPartner,\n });\n\n};"]},"metadata":{},"sourceType":"module"}