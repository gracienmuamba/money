{"ast":null,"code":"var _jsxFileName = \"/Users/USER/Desktop/Money/src/Home/Body/Subject.js\";\nimport './Subject.css';\nimport Media from 'react-media'; // Subject main view \n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport default function REturnSUBJect() {\n  return /*#__PURE__*/_jsxDEV(Media, {\n    queries: {\n      small: '(max-width: 599px)',\n      medium: '(min-width: 600px) and (max-width:1199px)',\n      large: '(min-width: 1200px)'\n    },\n    children: matches => /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [matches.small && /*#__PURE__*/_jsxDEV(ScreenSmall, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 16,\n        columnNumber: 24\n      }, this), matches.medium && /*#__PURE__*/_jsxDEV(ScreenLarge, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 17,\n        columnNumber: 25\n      }, this), matches.large && /*#__PURE__*/_jsxDEV(ScreenLarge, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 18,\n        columnNumber: 24\n      }, this)]\n    }, void 0, true)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 8,\n    columnNumber: 3\n  }, this);\n}\n_c = REturnSUBJect;\n;\nexport const ScreenLarge = () => /*#__PURE__*/_jsxDEV(\"div\", {\n  className: \"wrp-subject\",\n  children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n    children: \"Meet your Smart account A tap is all it takes\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 28,\n    columnNumber: 3\n  }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n    children: \"Lors de la comparaison des types de param\\xE8tres de fonction, l'affectation r\\xE9ussit si le param\\xE8tre source peut \\xEAtre affect\\xE9 au param\\xE8tre cible, ou vice versa. Cela n'est pas sain car un appelant pourrait finir par se voir attribuer\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 29,\n    columnNumber: 3\n  }, this)]\n}, void 0, true, {\n  fileName: _jsxFileName,\n  lineNumber: 27,\n  columnNumber: 2\n}, this);\n_c2 = ScreenLarge;\nexport const ScreenSmall = () => /*#__PURE__*/_jsxDEV(\"div\", {\n  className: \"wrp-subject-sm\",\n  children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n    children: \"Meet your Smart account A tap is all it takes\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 34,\n    columnNumber: 3\n  }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n    children: \"Lors de la comparaison des types de param\\xE8tres de fonction, l'affectation r\\xE9ussit si le param\\xE8tre source peut \\xEAtre affect\\xE9 au param\\xE8tre cible, ou vice versa. Cela n'est pas sain car un appelant pourrait finir par se voir attribuer\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 35,\n    columnNumber: 3\n  }, this)]\n}, void 0, true, {\n  fileName: _jsxFileName,\n  lineNumber: 33,\n  columnNumber: 2\n}, this);\n_c3 = ScreenSmall;\n\nvar _c, _c2, _c3;\n\n$RefreshReg$(_c, \"REturnSUBJect\");\n$RefreshReg$(_c2, \"ScreenLarge\");\n$RefreshReg$(_c3, \"ScreenSmall\");","map":{"version":3,"sources":["/Users/USER/Desktop/Money/src/Home/Body/Subject.js"],"names":["Media","REturnSUBJect","small","medium","large","matches","ScreenLarge","ScreenSmall"],"mappings":";AACA,OAAO,eAAP;AACA,OAAOA,KAAP,MAAkB,aAAlB,C,CAEA;;;;AACA,eAAe,SAASC,aAAT,GAAyB;AACvC,sBACC,QAAC,KAAD;AACC,IAAA,OAAO,EAAE;AACRC,MAAAA,KAAK,EAAE,oBADC;AAERC,MAAAA,MAAM,EAAE,2CAFA;AAGRC,MAAAA,KAAK,EAAE;AAHC,KADV;AAAA,cAMEC,OAAO,iBACP;AAAA,iBACEA,OAAO,CAACH,KAAR,iBAAiB,QAAC,WAAD;AAAA;AAAA;AAAA;AAAA,cADnB,EAEEG,OAAO,CAACF,MAAR,iBAAkB,QAAC,WAAD;AAAA;AAAA;AAAA;AAAA,cAFpB,EAGEE,OAAO,CAACD,KAAR,iBAAiB,QAAC,WAAD;AAAA;AAAA;AAAA;AAAA,cAHnB;AAAA;AAPF;AAAA;AAAA;AAAA;AAAA,UADD;AAgBA;KAjBuBH,a;AAiBvB;AAGD,OAAO,MAAMK,WAAW,GAAG,mBAC1B;AAAK,EAAA,SAAS,EAAC,aAAf;AAAA,0BACC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UADD,eAEC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAFD;AAAA;AAAA;AAAA;AAAA;AAAA,QADM;MAAMA,W;AAMb,OAAO,MAAMC,WAAW,GAAG,mBAC1B;AAAK,EAAA,SAAS,EAAC,gBAAf;AAAA,0BACC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UADD,eAEC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAFD;AAAA;AAAA;AAAA;AAAA;AAAA,QADM;MAAMA,W","sourcesContent":["\nimport './Subject.css';\nimport Media from 'react-media';\n\n// Subject main view \nexport default function REturnSUBJect() {\n return (\n  <Media\n   queries={{\n    small: '(max-width: 599px)',\n    medium: '(min-width: 600px) and (max-width:1199px)',\n    large: '(min-width: 1200px)',\n   }}>\n   {matches => (\n    <>\n     {matches.small && <ScreenSmall />}\n     {matches.medium && <ScreenLarge />}\n     {matches.large && <ScreenLarge />}\n    </>\n   )}\n  </Media>\n );\n};\n\n\nexport const ScreenLarge = () => (\n <div className='wrp-subject'>\n  <h2>Meet your Smart account A tap is all it takes</h2>\n  <p>Lors de la comparaison des types de paramètres de fonction, l'affectation réussit si le paramètre source peut être affecté au paramètre cible, ou vice versa. Cela n'est pas sain car un appelant pourrait finir par se voir attribuer</p>\n </div>\n);\nexport const ScreenSmall = () => (\n <div className='wrp-subject-sm'>\n  <h2>Meet your Smart account A tap is all it takes</h2>\n  <p>Lors de la comparaison des types de paramètres de fonction, l'affectation réussit si le paramètre source peut être affecté au paramètre cible, ou vice versa. Cela n'est pas sain car un appelant pourrait finir par se voir attribuer</p>\n </div>\n);"]},"metadata":{},"sourceType":"module"}