{"ast":null,"code":"var _jsxFileName = \"/Users/USER/Desktop/Money/src/Sign/InputPhone.js\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport './InputPhone.css';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport Media from 'react-media';\nimport { useForm } from 'react-hook-form';\nimport { useNavigate } from 'react-router-dom'; // Firebase Auth for phone\n\nimport { signInWithPhoneNumber, RecaptchaVerifier } from \"firebase/auth\";\nimport { auth } from '../firebase'; // Input Field form\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport default function REturnInPutCode() {\n  return /*#__PURE__*/_jsxDEV(Media, {\n    queries: {\n      small: '(max-width: 599px)',\n      medium: '(min-width: 600px) and (max-width:1199px)',\n      large: '(min-width: 1200px)'\n    },\n    children: matches => /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [matches.small && /*#__PURE__*/_jsxDEV(ScreenSmall, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 24\n      }, this), matches.medium && /*#__PURE__*/_jsxDEV(ScreenLarge, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 25\n      }, this), matches.large && /*#__PURE__*/_jsxDEV(ScreenLarge, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 24\n      }, this)]\n    }, void 0, true)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 18,\n    columnNumber: 3\n  }, this);\n}\n_c = REturnInPutCode;\n;\nexport const ScreenLarge = () => /*#__PURE__*/_jsxDEV(\"div\", {\n  className: \"form-input-sign\",\n  children: /*#__PURE__*/_jsxDEV(FormDataInput, {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 37,\n    columnNumber: 3\n  }, this)\n}, void 0, false, {\n  fileName: _jsxFileName,\n  lineNumber: 36,\n  columnNumber: 2\n}, this);\n_c2 = ScreenLarge;\nexport const ScreenSmall = () => /*#__PURE__*/_jsxDEV(\"div\", {\n  className: \"form-input-sign-sm\",\n  children: /*#__PURE__*/_jsxDEV(FormDataInput, {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 42,\n    columnNumber: 3\n  }, this)\n}, void 0, false, {\n  fileName: _jsxFileName,\n  lineNumber: 41,\n  columnNumber: 2\n}, this);\n_c3 = ScreenSmall;\nexport const FormDataInput = () => {\n  _s();\n\n  const [checked, setChecked] = React.useState(true);\n  const {\n    register,\n    handleSubmit,\n    formState,\n    reset\n  } = useForm({\n    defaultValues: {\n      phone: '+243'\n    },\n    mode: 'onChange'\n  });\n  const {\n    isSubmitting,\n    isValid,\n    isSubmitSuccessful\n  } = formState;\n  const navigation = useNavigate();\n\n  const generateRecaptcha = () => {\n    window.RecaptchaVerifier = new RecaptchaVerifier('recaptcha-container', {\n      'size': 'invisible',\n      'callback': reponse => {}\n    }, auth);\n  };\n\n  const onSubmit = async data => {\n    if (data.phone.length != 13 && checked == true) {\n      window.alert('Numero Invalid!');\n    } else {\n      // generateRecaptcha();\n      // let appVerifier = window.recaptchaVerifier;\n      // signInWithPhoneNumber(auth, data, appVerifier).then(confirmationResult => {\n      //  window.confirmationResult = confirmationResult;\n      // }).catch((error) => { console.log(error) });\n      setChecked(false); // Modifier state!\n    }\n\n    ;\n\n    if (checked === false) {\n      // let confirmationResult = window.confirmationResult;\n      // confirmationResult.confirm(data.code).then((result) => {\n      //  const user = result.user;\n      //  console.log(user);\n      // }).catch((error) => console.log(error));\n      data.code != 6 ? setChecked(true) : navigation('/dash');\n    }\n\n    reset();\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    onSubmit: handleSubmit(onSubmit),\n    children: checked ? /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"phone\",\n        id: \"phone\",\n        placeholder: \"Phone\",\n        name: \"phone\",\n        ...register('phone', {\n          required: true\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 98,\n        columnNumber: 6\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        id: \"recaptcha-container\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 99,\n        columnNumber: 6\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        disabled: isSubmitting,\n        className: \"Btn\",\n        children: \"Suivant\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 100,\n        columnNumber: 6\n      }, this)]\n    }, void 0, true) : /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        placeholder: \"Code Envoyer\",\n        name: \"code\",\n        ...register('code', {\n          required: true\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 104,\n        columnNumber: 6\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        disabled: isSubmitting || !isValid,\n        className: \"Btn\",\n        children: \"Connexion\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 105,\n        columnNumber: 6\n      }, this)]\n    }, void 0, true)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 95,\n    columnNumber: 3\n  }, this);\n};\n\n_s(FormDataInput, \"ru6pyAOQF2NgKuNOa2APntXiJ20=\", false, function () {\n  return [useForm, useNavigate];\n});\n\n_c4 = FormDataInput;\n\nvar _c, _c2, _c3, _c4;\n\n$RefreshReg$(_c, \"REturnInPutCode\");\n$RefreshReg$(_c2, \"ScreenLarge\");\n$RefreshReg$(_c3, \"ScreenSmall\");\n$RefreshReg$(_c4, \"FormDataInput\");","map":{"version":3,"sources":["/Users/USER/Desktop/Money/src/Sign/InputPhone.js"],"names":["React","Media","useForm","useNavigate","signInWithPhoneNumber","RecaptchaVerifier","auth","REturnInPutCode","small","medium","large","matches","ScreenLarge","ScreenSmall","FormDataInput","checked","setChecked","useState","register","handleSubmit","formState","reset","defaultValues","phone","mode","isSubmitting","isValid","isSubmitSuccessful","navigation","generateRecaptcha","window","reponse","onSubmit","data","length","alert","code","required"],"mappings":"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","sourcesContent":["import React from 'react';\nimport './InputPhone.css';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport Media from 'react-media';\nimport { useForm } from 'react-hook-form';\nimport { useNavigate } from 'react-router-dom';\n\n// Firebase Auth for phone\nimport { signInWithPhoneNumber, RecaptchaVerifier } from \"firebase/auth\";\nimport { auth } from '../firebase';\n\n\n\n\n// Input Field form\nexport default function REturnInPutCode() {\n return (\n  <Media\n   queries={{\n    small: '(max-width: 599px)',\n    medium: '(min-width: 600px) and (max-width:1199px)',\n    large: '(min-width: 1200px)',\n   }}>\n   {matches => (\n    <>\n     {matches.small && <ScreenSmall />}\n     {matches.medium && <ScreenLarge />}\n     {matches.large && <ScreenLarge />}\n    </>\n   )}\n  </Media>\n );\n};\n\nexport const ScreenLarge = () => (\n <div className='form-input-sign'>\n  <FormDataInput />\n </div>\n);\nexport const ScreenSmall = () => (\n <div className='form-input-sign-sm'>\n  <FormDataInput />\n </div>\n);\nexport const FormDataInput = () => {\n\n const [checked, setChecked] = React.useState(true);\n const { register, handleSubmit, formState, reset } = useForm({\n\n  defaultValues: { phone: '+243' },\n  mode: 'onChange'\n });\n\n const { isSubmitting, isValid, isSubmitSuccessful } = formState;\n const navigation = useNavigate();\n\n const generateRecaptcha = () => {\n  window.RecaptchaVerifier = new RecaptchaVerifier('recaptcha-container', {\n   'size': 'invisible',\n   'callback': (reponse) => {\n   }\n  }, auth);\n };\n\n const onSubmit = async data => {\n  if (data.phone.length != 13 && checked == true) {\n   window.alert('Numero Invalid!');\n  } else {\n\n   // generateRecaptcha();\n   // let appVerifier = window.recaptchaVerifier;\n   // signInWithPhoneNumber(auth, data, appVerifier).then(confirmationResult => {\n   //  window.confirmationResult = confirmationResult;\n\n   // }).catch((error) => { console.log(error) });\n\n   setChecked(false); // Modifier state!\n  };\n\n  if (checked === false) {\n\n   // let confirmationResult = window.confirmationResult;\n   // confirmationResult.confirm(data.code).then((result) => {\n   //  const user = result.user;\n   //  console.log(user);\n\n   // }).catch((error) => console.log(error));\n\n   data.code != 6 ? setChecked(true) : navigation('/dash');\n  }\n  reset();\n };\n\n return (\n  <form onSubmit={handleSubmit(onSubmit)}>\n   {checked ?\n    <>\n     <input type='phone' id='phone' placeholder='Phone' name='phone' {...register('phone', { required: true })} />\n     <div id='recaptcha-container'></div>\n     <button disabled={isSubmitting} className='Btn' >Suivant</button>\n    </>\n    :\n    <>\n     <input type='text' placeholder='Code Envoyer' name='code' {...register('code', { required: true })} />\n     <button disabled={isSubmitting || !isValid} className='Btn' >Connexion</button>\n    </>\n   }\n  </form>\n );\n};"]},"metadata":{},"sourceType":"module"}