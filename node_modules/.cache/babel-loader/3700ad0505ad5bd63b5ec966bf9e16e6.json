{"ast":null,"code":"var _jsxFileName = \"/Users/USER/Documents/Money/src/Tontine/Currency/Asked/MoneyAdd/FC/Input.js\",\n    _s = $RefreshSig$();\n\nimport React from 'react'; // import './Input.css';\n\nimport Media from 'react-media';\nimport { useForm, Controller } from 'react-hook-form';\nimport { useNavigate } from 'react-router-dom';\nimport { doc, onSnapshot } from \"firebase/firestore\";\nimport { db } from '../../../../../firebase';\nimport Button from '@mui/material/Button';\nimport Dialog from '@mui/material/Dialog';\nimport DialogActions from '@mui/material/DialogActions';\nimport DialogContent from '@mui/material/DialogContent';\nimport DialogTitle from '@mui/material/DialogTitle';\nimport DialogContentText from '@mui/material/DialogContentText';\nimport PropTypes from 'prop-types';\nimport { IMaskInput } from 'react-imask';\nimport { NumericFormat } from 'react-number-format';\nimport TextField from '@mui/material/TextField';\nimport Backdrop from '@mui/material/Backdrop';\nimport CircularProgress from '@mui/material/CircularProgress';\nimport REturnPriX from './Prix';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst TextMaskCustom = /*#__PURE__*/React.forwardRef(_c = function TextMaskCustom(props, ref) {\n  const {\n    onChange,\n    ...other\n  } = props;\n  return /*#__PURE__*/_jsxDEV(IMaskInput, { ...other,\n    mask: \"(#00) 000-0000\",\n    definitions: {\n      '#': /[1-9]/\n    },\n    inputRef: ref,\n    onAccept: value => onChange({\n      target: {\n        name: props.name,\n        value\n      }\n    }),\n    overwrite: true\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 32,\n    columnNumber: 5\n  }, this);\n});\n_c2 = TextMaskCustom;\nTextMaskCustom.propTypes = {\n  name: PropTypes.string.isRequired,\n  onChange: PropTypes.func.isRequired\n};\nconst NumericFormatCustom = /*#__PURE__*/React.forwardRef(_c3 = function NumericFormatCustom(props, ref) {\n  const {\n    onChange,\n    ...other\n  } = props;\n  return /*#__PURE__*/_jsxDEV(NumericFormat, { ...other,\n    getInputRef: ref,\n    onValueChange: values => {\n      onChange({\n        target: {\n          name: props.name,\n          value: values.value\n        }\n      });\n    },\n    thousandSeparator: true,\n    valueIsNumericString: true,\n    prefix: \"\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 55,\n    columnNumber: 5\n  }, this);\n});\n_c4 = NumericFormatCustom;\nNumericFormatCustom.propTypes = {\n  name: PropTypes.string.isRequired,\n  onChange: PropTypes.func.isRequired\n}; // Return Phone input component\n\nexport default function REturnInputPhone() {\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(Media, {\n      queries: {\n        small: '(max-width: 599px)',\n        medium: '(min-width: 600px) and (max-width:1199px)',\n        large: '(min-width: 1200px)'\n      },\n      children: matches => /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [matches.small && /*#__PURE__*/_jsxDEV(ScreenSmall, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 92,\n          columnNumber: 31\n        }, this), matches.medium && /*#__PURE__*/_jsxDEV(ScreenLarge, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 93,\n          columnNumber: 32\n        }, this), matches.large && /*#__PURE__*/_jsxDEV(ScreenLarge, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 94,\n          columnNumber: 31\n        }, this)]\n      }, void 0, true)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 7\n    }, this)\n  }, void 0, false);\n}\n_c5 = REturnInputPhone;\n;\nexport const ScreenLarge = () => {\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"solde-input-asked\",\n    children: /*#__PURE__*/_jsxDEV(FormInputValue, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 104,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 103,\n    columnNumber: 5\n  }, this);\n};\n_c6 = ScreenLarge;\nexport const ScreenSmall = () => {\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"solde-input-asked\",\n    children: /*#__PURE__*/_jsxDEV(FormInputValue, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 111,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 110,\n    columnNumber: 5\n  }, this);\n};\n_c7 = ScreenSmall;\nexport const FormInputValue = () => {\n  _s();\n\n  const navigation = useNavigate();\n  const {\n    handleSubmit,\n    control,\n    watch\n  } = useForm({});\n  const [load, setLoad] = React.useState(false);\n  const [usd, setUsd] = React.useState(0.00);\n  const [open, setOpen] = React.useState(false);\n  const [fullWidth, setFullWidth] = React.useState(true);\n  const [maxWidth, setMaxWidth] = React.useState('sm');\n  let prixUsd = watch('count');\n  let money = prixUsd == undefined ? Number(usd) : Number(usd) - Number(prixUsd);\n  React.useEffect(async () => {\n    try {\n      await onSnapshot(doc(db, \"client\", JSON.parse(window.localStorage.getItem('USER'))), doc => {\n        setUsd(doc.data().usd);\n      });\n    } catch {\n      window.console.log(`Erreur`);\n    }\n  }, []);\n  const [values, setValues] = React.useState({\n    textmask: '(100) 000-0000',\n    numberformat: '1320'\n  });\n\n  const handleChange = event => {\n    setValues({ ...values,\n      [event.target.name]: event.target.value\n    });\n  };\n\n  const handleClose = () => {\n    setOpen(false);\n  };\n\n  const onSubmit = async data => {\n    setLoad(true);\n\n    if (data.count === undefined || data.count === '' || money < 1) {\n      setOpen(true);\n      setLoad(false);\n    } else {\n      window.localStorage.setItem('**tont>>count??', JSON.stringify(data.count));\n      window.setTimeout(() => {\n        navigation('/tontine/form/info');\n      }, 1000);\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"zindex-theme\",\n      children: /*#__PURE__*/_jsxDEV(Backdrop, {\n        sx: {\n          color: '#fff',\n          zIndex: theme => theme.zIndex.drawer + 1\n        },\n        open: load,\n        children: /*#__PURE__*/_jsxDEV(CircularProgress, {\n          color: \"inherit\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 183,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 179,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 178,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(REturnPriX, {\n      count: money\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 187,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      autoComplete: \"off\",\n      onSubmit: handleSubmit(onSubmit),\n      children: [/*#__PURE__*/_jsxDEV(Controller, {\n        name: \"count\",\n        control: control,\n        render: ({\n          field\n        }) => /*#__PURE__*/_jsxDEV(TextField, {\n          label: /*#__PURE__*/_jsxDEV(\"h2\", {\n            children: \"Montant\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 196,\n            columnNumber: 22\n          }, this),\n          value: values.numberformat,\n          onChange: handleChange,\n          ...field,\n          name: \"count\",\n          id: \"formatted-numberformat-input\",\n          inputProps: {\n            autoComplete: \"off\",\n            inputMode: 'decimal'\n          },\n          InputProps: {\n            inputComponent: NumericFormatCustom\n          },\n          variant: \"standard\",\n          placeholder: \"0\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 195,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 190,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Dialog, {\n        fullWidth: fullWidth,\n        maxWidth: maxWidth,\n        open: open,\n        onClose: handleClose,\n        children: [/*#__PURE__*/_jsxDEV(DialogTitle, {\n          children: /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"pop-up\",\n            children: \"MuunganoMoney\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 222,\n            columnNumber: 24\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 222,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(DialogContent, {\n          children: /*#__PURE__*/_jsxDEV(DialogContentText, {\n            children: /*#__PURE__*/_jsxDEV(\"p\", {\n              className: \"pop-up\",\n              children: \"La valeur demand\\xE9e n'est pas disponible, veuillez v\\xE9rifier.\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 226,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 225,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 223,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(DialogActions, {\n          children: /*#__PURE__*/_jsxDEV(Button, {\n            onClick: handleClose,\n            children: /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"pop-up\",\n              children: \"Fermer\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 234,\n              columnNumber: 43\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 234,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 233,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 217,\n        columnNumber: 9\n      }, this), money >= 1 && /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"Btn\",\n        children: \"Avancer\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 238,\n        columnNumber: 24\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 188,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n};\n\n_s(FormInputValue, \"fQkfa6f1uStQzwSRLzF7NM3bOqE=\", false, function () {\n  return [useNavigate, useForm];\n});\n\n_c8 = FormInputValue;\n\nvar _c, _c2, _c3, _c4, _c5, _c6, _c7, _c8;\n\n$RefreshReg$(_c, \"TextMaskCustom$React.forwardRef\");\n$RefreshReg$(_c2, \"TextMaskCustom\");\n$RefreshReg$(_c3, \"NumericFormatCustom$React.forwardRef\");\n$RefreshReg$(_c4, \"NumericFormatCustom\");\n$RefreshReg$(_c5, \"REturnInputPhone\");\n$RefreshReg$(_c6, \"ScreenLarge\");\n$RefreshReg$(_c7, \"ScreenSmall\");\n$RefreshReg$(_c8, \"FormInputValue\");","map":{"version":3,"sources":["/Users/USER/Documents/Money/src/Tontine/Currency/Asked/MoneyAdd/FC/Input.js"],"names":["React","Media","useForm","Controller","useNavigate","doc","onSnapshot","db","Button","Dialog","DialogActions","DialogContent","DialogTitle","DialogContentText","PropTypes","IMaskInput","NumericFormat","TextField","Backdrop","CircularProgress","REturnPriX","TextMaskCustom","forwardRef","props","ref","onChange","other","value","target","name","propTypes","string","isRequired","func","NumericFormatCustom","values","REturnInputPhone","small","medium","large","matches","ScreenLarge","ScreenSmall","FormInputValue","navigation","handleSubmit","control","watch","load","setLoad","useState","usd","setUsd","open","setOpen","fullWidth","setFullWidth","maxWidth","setMaxWidth","prixUsd","money","undefined","Number","useEffect","JSON","parse","window","localStorage","getItem","data","console","log","setValues","textmask","numberformat","handleChange","event","handleClose","onSubmit","count","setItem","stringify","setTimeout","color","zIndex","theme","drawer","field","autoComplete","inputMode","inputComponent"],"mappings":"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","sourcesContent":["import React from 'react';\n// import './Input.css';\nimport Media from 'react-media';\nimport { useForm, Controller } from 'react-hook-form';\nimport { useNavigate } from 'react-router-dom';\nimport { doc, onSnapshot, } from \"firebase/firestore\";\nimport { db } from '../../../../../firebase';\n\nimport Button from '@mui/material/Button';\nimport Dialog from '@mui/material/Dialog';\nimport DialogActions from '@mui/material/DialogActions';\nimport DialogContent from '@mui/material/DialogContent';\nimport DialogTitle from '@mui/material/DialogTitle';\nimport DialogContentText from '@mui/material/DialogContentText';\n\nimport PropTypes from 'prop-types';\nimport { IMaskInput } from 'react-imask';\nimport { NumericFormat } from 'react-number-format';\nimport TextField from '@mui/material/TextField';\n\n\nimport Backdrop from '@mui/material/Backdrop';\nimport CircularProgress from '@mui/material/CircularProgress';\n\nimport REturnPriX from './Prix';\n\n\n\nconst TextMaskCustom = React.forwardRef(function TextMaskCustom(props, ref) {\n  const { onChange, ...other } = props;\n  return (\n    <IMaskInput\n      {...other}\n      mask=\"(#00) 000-0000\"\n      definitions={{\n        '#': /[1-9]/,\n      }}\n      inputRef={ref}\n      onAccept={(value) => onChange({ target: { name: props.name, value } })}\n      overwrite\n    />\n  );\n});\nTextMaskCustom.propTypes = {\n  name: PropTypes.string.isRequired,\n  onChange: PropTypes.func.isRequired,\n};\nconst NumericFormatCustom = React.forwardRef(function NumericFormatCustom(\n  props,\n  ref,\n) {\n  const { onChange, ...other } = props;\n\n  return (\n    <NumericFormat\n      {...other}\n      getInputRef={ref}\n      onValueChange={(values) => {\n        onChange({\n          target: {\n            name: props.name,\n            value: values.value,\n          },\n        });\n      }}\n      thousandSeparator\n      valueIsNumericString\n      prefix=\"\"\n    />\n  );\n});\nNumericFormatCustom.propTypes = {\n  name: PropTypes.string.isRequired,\n  onChange: PropTypes.func.isRequired,\n};\n\n\n\n\n// Return Phone input component\nexport default function REturnInputPhone() {\n  return (\n    <>\n      <Media\n        queries={{\n          small: '(max-width: 599px)',\n          medium: '(min-width: 600px) and (max-width:1199px)',\n          large: '(min-width: 1200px)',\n        }}>\n        {matches => (\n          <>\n            {matches.small && <ScreenSmall />}\n            {matches.medium && <ScreenLarge />}\n            {matches.large && <ScreenLarge />}\n          </>\n        )}\n      </Media>\n    </>\n  );\n};\nexport const ScreenLarge = () => {\n  return (\n    <div className='solde-input-asked'>\n      <FormInputValue />\n    </div>\n  );\n};\nexport const ScreenSmall = () => {\n  return (\n    <div className='solde-input-asked'>\n      <FormInputValue />\n    </div>\n  )\n};\nexport const FormInputValue = () => {\n\n  const navigation = useNavigate();\n  const { handleSubmit, control, watch } = useForm({});\n  const [load, setLoad] = React.useState(false);\n\n  const [usd, setUsd] = React.useState(0.00);\n  const [open, setOpen] = React.useState(false);\n  const [fullWidth, setFullWidth] = React.useState(true);\n  const [maxWidth, setMaxWidth] = React.useState('sm');\n\n\n  let prixUsd = watch('count');\n  let money = prixUsd == undefined ? Number(usd) : Number(usd) - Number(prixUsd);\n\n  React.useEffect(async () => {\n\n    try {\n      await onSnapshot(doc(db, \"client\", JSON.parse(window.localStorage.getItem('USER'))), (doc) => {\n        setUsd(doc.data().usd);\n      });\n    } catch {\n      window.console.log(`Erreur`);\n    }\n\n  }, []);\n\n  const [values, setValues] = React.useState({\n    textmask: '(100) 000-0000',\n    numberformat: '1320',\n  });\n\n  const handleChange = (event) => {\n    setValues({\n      ...values,\n      [event.target.name]: event.target.value,\n    });\n  };\n  const handleClose = () => {\n    setOpen(false);\n  };\n\n  const onSubmit = async (data) => {\n\n    setLoad(true);\n    if (data.count === undefined || data.count === '' || money < 1) {\n      setOpen(true);\n      setLoad(false);\n    } else {\n\n      window.localStorage.setItem('**tont>>count??', JSON.stringify(data.count));\n      window.setTimeout(() => {\n        navigation('/tontine/form/info');\n      }, 1000);\n\n\n\n    }\n\n  };\n\n  return (\n    <>\n      <div className='zindex-theme'>\n        <Backdrop\n          sx={{ color: '#fff', zIndex: (theme) => theme.zIndex.drawer + 1 }}\n          open={load}>\n\n          <CircularProgress color=\"inherit\" />\n        </Backdrop>\n      </div>\n\n      <REturnPriX count={money} />\n      <form autoComplete='off' onSubmit={handleSubmit(onSubmit)}>\n\n        <Controller\n          name=\"count\"\n          control={control}\n          render={({ field }) =>\n\n            <TextField\n              label={<h2>Montant</h2>}\n              value={values.numberformat}\n              onChange={handleChange}\n              {...field}\n              name=\"count\"\n              id=\"formatted-numberformat-input\"\n\n              inputProps={{\n                autoComplete: \"off\", inputMode: 'decimal'\n              }}\n\n              InputProps={{\n                inputComponent: NumericFormatCustom,\n              }}\n              variant=\"standard\"\n              placeholder='0'\n            />\n\n          }\n        />\n\n        <Dialog\n          fullWidth={fullWidth}\n          maxWidth={maxWidth}\n          open={open}\n          onClose={handleClose}>\n          <DialogTitle><span className='pop-up'>MuunganoMoney</span></DialogTitle>\n          <DialogContent>\n\n            <DialogContentText>\n              <p className='pop-up'>\n                La valeur demandée n'est pas disponible, veuillez vérifier.\n      </p>\n\n            </DialogContentText>\n\n          </DialogContent>\n          <DialogActions>\n            <Button onClick={handleClose}><span className='pop-up'>Fermer</span></Button>\n          </DialogActions>\n        </Dialog>\n\n        {money >= 1 && <button className='Btn'>Avancer</button>}\n      </form>\n    </>\n  );\n};\n"]},"metadata":{},"sourceType":"module"}