{"ast":null,"code":"var _jsxFileName = \"/Users/USER/Desktop/Agent/src/Register/SignIn/Input.js\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport './Input.css';\nimport Media from 'react-media';\nimport { useForm } from 'react-hook-form';\nimport { useNavigate } from 'react-router-dom';\nimport { doc, setDoc, serverTimestamp } from 'firebase/firestore';\nimport { db } from '../../firebase';\nimport { phoneX } from '../Phone/Input'; // const sendIdentityInWithDocs = async (phoneIdForDocs, dataInput, assignObject) => {\n//  const user = Object.assign(dataInput, assignObject);\n//  await setDoc(doc(db, \"client\", phoneIdForDocs), user);\n// };\n// Input Field Component \n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport default function ReturnInput() {\n  return /*#__PURE__*/_jsxDEV(Media, {\n    queries: {\n      small: '(max-width: 599px)',\n      medium: '(min-width: 600px) and (max-width:1199px)',\n      large: '(min-width: 1200px)'\n    },\n    children: matches => /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [matches.small && /*#__PURE__*/_jsxDEV(ScreenSmall, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 24\n      }, this), matches.medium && /*#__PURE__*/_jsxDEV(SreenLarge, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 25\n      }, this), matches.large && /*#__PURE__*/_jsxDEV(SreenLarge, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 24\n      }, this)]\n    }, void 0, true)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 21,\n    columnNumber: 3\n  }, this);\n}\n_c = ReturnInput;\n;\nexport const SreenLarge = () => {\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"wrp-input-signin-register\",\n    children: /*#__PURE__*/_jsxDEV(FormInput, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 4\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 40,\n    columnNumber: 3\n  }, this);\n};\n_c2 = SreenLarge;\nexport const ScreenSmall = () => {\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"wrp-input-signin-register-sm\",\n    children: /*#__PURE__*/_jsxDEV(FormInput, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 4\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 48,\n    columnNumber: 3\n  }, this);\n};\n_c3 = ScreenSmall;\nexport const FormInput = () => {\n  _s();\n\n  const navigation = useNavigate();\n  const existing = {\n    state: \"client\",\n    fc: 0,\n    usd: 0,\n    blocked: 0,\n    delay: serverTimestamp(),\n    pin: 'ungama',\n    phoneclient: '',\n    unite: '',\n    newsolde: ''\n  };\n  const {\n    register,\n    handleSubmit\n  } = useForm({\n    defaultValues: {\n      phone: '+243'\n    }\n  });\n  let regular = /[a-z]+/; // Ref collection database!\n\n  const onSubmit = async data => {\n    if (data.phone.length != 13) {\n      window.alert('Numero Incorrect!');\n    } else {\n      if (regular.test(data.phone)) {\n        window.alert('Numero no Correct!');\n      } else {\n        // sendIdentityInWithDocs(phoneX, data, existing);\n        navigation('/register/success');\n        window.console.log(data);\n      }\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    onSubmit: handleSubmit(onSubmit),\n    children: [/*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      placeholder: \"Nom\",\n      name: \"firstname\",\n      ...register('firstname', {\n        required: true\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 4\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      placeholder: \"Prenom\",\n      name: \"lastname\",\n      ...register('lastname', {\n        required: true\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 4\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"email\",\n      placeholder: \"Email\",\n      name: \"email\",\n      ...register('email', {\n        required: false\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 4\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"phone\",\n      placeholder: \"Phone\",\n      name: \"phone\",\n      ...register('phone', {\n        required: true\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 4\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      placeholder: \"Ville\",\n      name: \"ville\",\n      ...register('ville', {\n        required: true\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 4\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      placeholder: \"Addresse\",\n      name: \"addresse\",\n      ...register('addresse', {\n        required: true\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 4\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"Btn\",\n      children: \"Enregistre\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 4\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 85,\n    columnNumber: 3\n  }, this);\n};\n\n_s(FormInput, \"HnQY2ZQNORi9JuL+2SWAjITfMiU=\", false, function () {\n  return [useNavigate, useForm];\n});\n\n_c4 = FormInput;\n\nvar _c, _c2, _c3, _c4;\n\n$RefreshReg$(_c, \"ReturnInput\");\n$RefreshReg$(_c2, \"SreenLarge\");\n$RefreshReg$(_c3, \"ScreenSmall\");\n$RefreshReg$(_c4, \"FormInput\");","map":{"version":3,"sources":["/Users/USER/Desktop/Agent/src/Register/SignIn/Input.js"],"names":["React","Media","useForm","useNavigate","doc","setDoc","serverTimestamp","db","phoneX","ReturnInput","small","medium","large","matches","SreenLarge","ScreenSmall","FormInput","navigation","existing","state","fc","usd","blocked","delay","pin","phoneclient","unite","newsolde","register","handleSubmit","defaultValues","phone","regular","onSubmit","data","length","window","alert","test","console","log","required"],"mappings":"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","sourcesContent":["\nimport React from 'react';\nimport './Input.css';\nimport Media from 'react-media';\nimport { useForm } from 'react-hook-form';\nimport { useNavigate } from 'react-router-dom';\n\nimport { doc, setDoc, serverTimestamp } from 'firebase/firestore';\nimport { db } from '../../firebase';\nimport { phoneX } from '../Phone/Input';\n\n// const sendIdentityInWithDocs = async (phoneIdForDocs, dataInput, assignObject) => {\n//  const user = Object.assign(dataInput, assignObject);\n//  await setDoc(doc(db, \"client\", phoneIdForDocs), user);\n// };\n\n// Input Field Component \n\nexport default function ReturnInput() {\n return (\n  <Media\n   queries={{\n    small: '(max-width: 599px)',\n    medium: '(min-width: 600px) and (max-width:1199px)',\n    large: '(min-width: 1200px)',\n   }}>\n   {matches => (\n    <>\n     {matches.small && <ScreenSmall />}\n     {matches.medium && <SreenLarge />}\n     {matches.large && <SreenLarge />}\n    </>\n   )}\n  </Media>\n );\n};\n\nexport const SreenLarge = () => {\n return (\n  <div className='wrp-input-signin-register'>\n   <FormInput />\n\n  </div>\n )\n}\nexport const ScreenSmall = () => {\n return (\n  <div className='wrp-input-signin-register-sm'>\n   <FormInput />\n\n  </div>\n )\n};\nexport const FormInput = () => {\n\n const navigation = useNavigate();\n const existing = { state: \"client\", fc: 0, usd: 0, blocked: 0, delay: serverTimestamp(), pin: 'ungama', phoneclient: '', unite: '', newsolde: '' }\n const { register, handleSubmit } = useForm({\n  defaultValues: {\n   phone: '+243'\n  }\n });\n\n let regular = /[a-z]+/;\n\n // Ref collection database!\n const onSubmit = async (data) => {\n\n  if (data.phone.length != 13) {\n   window.alert('Numero Incorrect!')\n  } else {\n\n   if (regular.test(data.phone)) {\n\n    window.alert('Numero no Correct!');\n   } else {\n\n    // sendIdentityInWithDocs(phoneX, data, existing);\n    navigation('/register/success');\n    window.console.log(data);\n   }\n  }\n };\n return (\n  <form onSubmit={handleSubmit(onSubmit)}>\n   <input type='text' placeholder='Nom' name='firstname' {...register('firstname', { required: true })} />\n   <input type='text' placeholder='Prenom' name='lastname' {...register('lastname', { required: true })} />\n   <input type='email' placeholder='Email' name='email' {...register('email', { required: false })} />\n   <input type='phone' placeholder='Phone' name='phone' {...register('phone', { required: true })} />\n   <input type='text' placeholder='Ville' name='ville' {...register('ville', { required: true })} />\n   <input type='text' placeholder='Addresse' name='addresse' {...register('addresse', { required: true })} />\n   {/* <input type='date' placeholder='date de naissance' name='birthey' {...register('birthey', { required: true })} /> */}\n   <button className='Btn'>Enregistre</button>\n  </form>\n )\n};\n\n\n"]},"metadata":{},"sourceType":"module"}