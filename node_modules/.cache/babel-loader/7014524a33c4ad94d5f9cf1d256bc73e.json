{"ast":null,"code":"var _jsxFileName = \"/Users/USER/Desktop/MuunganoMoney/src/ExUSd/Date.js\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport './Date.css';\nimport Media from 'react-media';\nimport { collection, getDocs, doc, getDoc, serverTimestamp, updateDoc } from \"firebase/firestore\";\nimport { db } from '../firebase';\nimport { phoneX } from '../Sign/Input';\nimport moment from 'moment'; // View Date Transaction Date\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport default function ReturnDate() {\n  return /*#__PURE__*/_jsxDEV(Media, {\n    queries: {\n      small: '(max-width: 599px)',\n      medium: '(min-width: 600px) and (max-width:1199px)',\n      large: '(min-width: 1200px)'\n    },\n    children: matches => /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [matches.small && /*#__PURE__*/_jsxDEV(ScreenSmall, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 20,\n        columnNumber: 24\n      }, this), matches.medium && /*#__PURE__*/_jsxDEV(ScreenLarge, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 21,\n        columnNumber: 25\n      }, this), matches.large && /*#__PURE__*/_jsxDEV(ScreenLarge, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 22,\n        columnNumber: 24\n      }, this)]\n    }, void 0, true)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 12,\n    columnNumber: 3\n  }, this);\n}\n_c = ReturnDate;\n;\nexport const ScreenLarge = () => /*#__PURE__*/_jsxDEV(\"div\", {\n  className: \"wrp-date-exchange\",\n  children: /*#__PURE__*/_jsxDEV(ReturnTimestamp, {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 31,\n    columnNumber: 3\n  }, this)\n}, void 0, false, {\n  fileName: _jsxFileName,\n  lineNumber: 30,\n  columnNumber: 2\n}, this);\n_c2 = ScreenLarge;\nexport const ScreenSmall = () => /*#__PURE__*/_jsxDEV(\"div\", {\n  className: \"wrp-date-exchange-sm\",\n  children: /*#__PURE__*/_jsxDEV(ReturnTimestamp, {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 36,\n    columnNumber: 3\n  }, this)\n}, void 0, false, {\n  fileName: _jsxFileName,\n  lineNumber: 35,\n  columnNumber: 2\n}, this);\n_c3 = ScreenSmall;\nexport const ReturnTimestamp = () => {\n  _s();\n\n  let pushDocs = new Array();\n  const [time, setTime] = React.useState(`${new Date()}`); // React.useEffect(async () => {\n  //  const querySnapshot = await getDocs(collection(db, \"client\"));\n  //  querySnapshot.forEach((doc) => {\n  //   pushDocs.push(doc.id);\n  //  });\n  //  const verifierCollection = pushDocs.some(value => value == phoneX);\n  //  const docRef = doc(db, verifierCollection ? \"client\" : \"agent\", phoneX);\n  //  const washingtonRef = doc(db, verifierCollection ? \"client\" : \"agent\", phoneX);\n  //  // Set the \"capital\" field of the city 'DC'\n  //  await updateDoc(washingtonRef, {\n  //   delay: serverTimestamp()\n  //  });\n  //  const docSnap = await getDoc(docRef);\n  //  if (docSnap.exists()) {\n  //   setTime(docSnap.data().delay.toDate());\n  //  } else {\n  //   console.log(`Erreur disponible avec la date`);\n  //  }\n  // }, []);\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"wrp-delay-exch-view\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Date de la transaction\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 4\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: moment(time).format('LLL')\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 4\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 71,\n    columnNumber: 3\n  }, this);\n};\n\n_s(ReturnTimestamp, \"mPIG39NAovC9owURSANWFJ26BY8=\");\n\n_c4 = ReturnTimestamp;\n\nvar _c, _c2, _c3, _c4;\n\n$RefreshReg$(_c, \"ReturnDate\");\n$RefreshReg$(_c2, \"ScreenLarge\");\n$RefreshReg$(_c3, \"ScreenSmall\");\n$RefreshReg$(_c4, \"ReturnTimestamp\");","map":{"version":3,"sources":["/Users/USER/Desktop/MuunganoMoney/src/ExUSd/Date.js"],"names":["React","Media","collection","getDocs","doc","getDoc","serverTimestamp","updateDoc","db","phoneX","moment","ReturnDate","small","medium","large","matches","ScreenLarge","ScreenSmall","ReturnTimestamp","pushDocs","Array","time","setTime","useState","Date","format"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAO,YAAP;AACA,OAAOC,KAAP,MAAkB,aAAlB;AACA,SAASC,UAAT,EAAqBC,OAArB,EAA8BC,GAA9B,EAAmCC,MAAnC,EAA2CC,eAA3C,EAA4DC,SAA5D,QAA6E,oBAA7E;AACA,SAASC,EAAT,QAAmB,aAAnB;AACA,SAASC,MAAT,QAAuB,eAAvB;AACA,OAAOC,MAAP,MAAmB,QAAnB,C,CAEA;;;;AACA,eAAe,SAASC,UAAT,GAAsB;AACpC,sBACC,QAAC,KAAD;AACC,IAAA,OAAO,EAAE;AACRC,MAAAA,KAAK,EAAE,oBADC;AAERC,MAAAA,MAAM,EAAE,2CAFA;AAGRC,MAAAA,KAAK,EAAE;AAHC,KADV;AAAA,cAMEC,OAAO,iBACP;AAAA,iBACEA,OAAO,CAACH,KAAR,iBAAiB,QAAC,WAAD;AAAA;AAAA;AAAA;AAAA,cADnB,EAEEG,OAAO,CAACF,MAAR,iBAAkB,QAAC,WAAD;AAAA;AAAA;AAAA;AAAA,cAFpB,EAGEE,OAAO,CAACD,KAAR,iBAAiB,QAAC,WAAD;AAAA;AAAA;AAAA;AAAA,cAHnB;AAAA;AAPF;AAAA;AAAA;AAAA;AAAA,UADD;AAgBA;KAjBuBH,U;AAiBvB;AAED,OAAO,MAAMK,WAAW,GAAG,mBAC1B;AAAK,EAAA,SAAS,EAAC,mBAAf;AAAA,yBACC,QAAC,eAAD;AAAA;AAAA;AAAA;AAAA;AADD;AAAA;AAAA;AAAA;AAAA,QADM;MAAMA,W;AAKb,OAAO,MAAMC,WAAW,GAAG,mBAC1B;AAAK,EAAA,SAAS,EAAC,sBAAf;AAAA,yBACC,QAAC,eAAD;AAAA;AAAA;AAAA;AAAA;AADD;AAAA;AAAA;AAAA;AAAA,QADM;MAAMA,W;AAKb,OAAO,MAAMC,eAAe,GAAG,MAAM;AAAA;;AAEpC,MAAIC,QAAQ,GAAG,IAAIC,KAAJ,EAAf;AACA,QAAM,CAACC,IAAD,EAAOC,OAAP,IAAkBtB,KAAK,CAACuB,QAAN,CAAgB,GAAE,IAAIC,IAAJ,EAAW,EAA7B,CAAxB,CAHoC,CAKpC;AAEA;AACA;AACA;AAEA;AAEA;AACA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAEA;;AAEA,sBACC;AAAK,IAAA,SAAS,EAAC,qBAAf;AAAA,4BACC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADD,eAEC;AAAA,gBAAId,MAAM,CAACW,IAAD,CAAN,CAAaI,MAAb,CAAoB,KAApB;AAAJ;AAAA;AAAA;AAAA;AAAA,YAFD;AAAA;AAAA;AAAA;AAAA;AAAA,UADD;AAMA,CArCM;;GAAMP,e;;MAAAA,e","sourcesContent":["import React from 'react';\nimport './Date.css';\nimport Media from 'react-media'\nimport { collection, getDocs, doc, getDoc, serverTimestamp, updateDoc } from \"firebase/firestore\";\nimport { db } from '../firebase';\nimport { phoneX } from '../Sign/Input';\nimport moment from 'moment';\n\n// View Date Transaction Date\nexport default function ReturnDate() {\n return (\n  <Media\n   queries={{\n    small: '(max-width: 599px)',\n    medium: '(min-width: 600px) and (max-width:1199px)',\n    large: '(min-width: 1200px)',\n   }}>\n   {matches => (\n    <>\n     {matches.small && <ScreenSmall />}\n     {matches.medium && <ScreenLarge />}\n     {matches.large && <ScreenLarge />}\n    </>\n   )}\n  </Media>\n );\n};\n\nexport const ScreenLarge = () => (\n <div className='wrp-date-exchange'>\n  <ReturnTimestamp />\n </div>\n);\nexport const ScreenSmall = () => (\n <div className='wrp-date-exchange-sm'>\n  <ReturnTimestamp />\n </div>\n);\nexport const ReturnTimestamp = () => {\n\n let pushDocs = new Array();\n const [time, setTime] = React.useState(`${new Date()}`);\n\n // React.useEffect(async () => {\n\n //  const querySnapshot = await getDocs(collection(db, \"client\"));\n //  querySnapshot.forEach((doc) => {\n //   pushDocs.push(doc.id);\n\n //  });\n\n //  const verifierCollection = pushDocs.some(value => value == phoneX);\n //  const docRef = doc(db, verifierCollection ? \"client\" : \"agent\", phoneX);\n\n //  const washingtonRef = doc(db, verifierCollection ? \"client\" : \"agent\", phoneX);\n //  // Set the \"capital\" field of the city 'DC'\n //  await updateDoc(washingtonRef, {\n //   delay: serverTimestamp()\n //  });\n\n //  const docSnap = await getDoc(docRef);\n //  if (docSnap.exists()) {\n //   setTime(docSnap.data().delay.toDate());\n //  } else {\n //   console.log(`Erreur disponible avec la date`);\n //  }\n\n // }, []);\n\n return (\n  <div className='wrp-delay-exch-view'>\n   <h2>Date de la transaction</h2>\n   <p>{moment(time).format('LLL')}</p>\n  </div>\n );\n};"]},"metadata":{},"sourceType":"module"}