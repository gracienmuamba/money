{"ast":null,"code":"var _jsxFileName = \"/Users/USER/Desktop/Agent/src/Money/Simple/Input.js\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport './Input.css';\nimport Media from 'react-media';\nimport { useForm, Controller } from 'react-hook-form';\nimport { useNavigate } from 'react-router-dom';\nimport { doc, getDocs, collection, getDoc, updateDoc, increment, onSnapshot, arrayUnion } from \"firebase/firestore\";\nimport { db } from '../../firebase';\nimport REturnQuOte from './Quote';\nimport Button from '@mui/material/Button';\nimport Dialog from '@mui/material/Dialog';\nimport DialogActions from '@mui/material/DialogActions';\nimport DialogContent from '@mui/material/DialogContent';\nimport DialogTitle from '@mui/material/DialogTitle';\nimport DialogContentText from '@mui/material/DialogContentText';\nimport IconButton from '@mui/material/IconButton';\nimport Input from '@mui/material/Input';\nimport InputLabel from '@mui/material/InputLabel';\nimport InputAdornment from '@mui/material/InputAdornment';\nimport FormControl from '@mui/material/FormControl';\nimport Visibility from '@mui/icons-material/Visibility';\nimport VisibilityOff from '@mui/icons-material/VisibilityOff';\nimport moment from 'moment';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport let nowField = moment().date();\nexport let now = moment().date();\nexport let prixHash = 0;\nexport let hashTrue = true; // Input Field Component \n\nexport default function ReturnInput() {\n  return /*#__PURE__*/_jsxDEV(Media, {\n    queries: {\n      small: '(max-width: 599px)',\n      medium: '(min-width: 600px) and (max-width:1199px)',\n      large: '(min-width: 1200px)'\n    },\n    children: matches => /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [matches.small && /*#__PURE__*/_jsxDEV(ScreenSmall, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 29\n      }, this), matches.medium && /*#__PURE__*/_jsxDEV(SreenLarge, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 30\n      }, this), matches.large && /*#__PURE__*/_jsxDEV(SreenLarge, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 29\n      }, this)]\n    }, void 0, true)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 37,\n    columnNumber: 5\n  }, this);\n}\n_c = ReturnInput;\n;\nexport const SreenLarge = () => /*#__PURE__*/_jsxDEV(\"div\", {\n  className: \"wrp-form-input-pin\",\n  children: [/*#__PURE__*/_jsxDEV(REturnQuOte, {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 55,\n    columnNumber: 5\n  }, this), /*#__PURE__*/_jsxDEV(FormInput, {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 56,\n    columnNumber: 5\n  }, this)]\n}, void 0, true, {\n  fileName: _jsxFileName,\n  lineNumber: 54,\n  columnNumber: 3\n}, this);\n_c2 = SreenLarge;\nexport const ScreenSmall = () => /*#__PURE__*/_jsxDEV(\"div\", {\n  className: \"wrp-form-input-pin\",\n  children: [/*#__PURE__*/_jsxDEV(REturnQuOte, {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 62,\n    columnNumber: 5\n  }, this), /*#__PURE__*/_jsxDEV(FormInput, {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 63,\n    columnNumber: 5\n  }, this)]\n}, void 0, true, {\n  fileName: _jsxFileName,\n  lineNumber: 61,\n  columnNumber: 3\n}, this);\n_c3 = ScreenSmall;\nexport const FormInput = () => {\n  _s();\n\n  let pushDocs = new Array();\n  let verifierSend;\n  let verifierGet;\n  const navigation = useNavigate();\n  const {\n    register,\n    handleSubmit,\n    reset,\n    control\n  } = useForm(); //  order notebook\n\n  const [tableClient, setTableClient] = React.useState();\n  const [tableAgent, setTableAgent] = React.useState();\n  const [tableUpgrade, setTableUpgrade] = React.useState();\n  const [tableAdmin, setTableAdmin] = React.useState();\n  const [tableFrais, setTableFrais] = React.useState(); // send React useState  \n\n  const [pin, setPin] = React.useState(null);\n  const [state, setState] = React.useState(null);\n  const [first, setFirst] = React.useState('');\n  const [last, setLast] = React.useState('');\n  const [soldeMain, setSoldeMain] = React.useState(null); // getting React useState\n\n  const [getstate, setGetstate] = React.useState(null);\n  const [getfirst, setGetFirst] = React.useState('');\n  const [getlast, setGetLast] = React.useState('');\n  const [open, setOpen] = React.useState(false);\n  const [cancel, setCancel] = React.useState(false);\n  const [click, setClick] = React.useState(false);\n  const [fullWidth, setFullWidth] = React.useState(true);\n  const [maxWidth, setMaxWidth] = React.useState('sm');\n  const [showPassword, setShowPassword] = React.useState(false);\n\n  const handleClickShowPassword = () => setShowPassword(show => !show);\n\n  const handleMouseDownPassword = event => {\n    event.preventDefault();\n  };\n\n  const handleClose = () => {\n    setOpen(false);\n  };\n\n  const cancelClose = () => {\n    setCancel(false);\n    setClick(true);\n  };\n\n  React.useEffect(async () => {\n    const querySnapshot = await getDocs(collection(db, \"client\"));\n    querySnapshot.forEach(doc => {\n      pushDocs.push(doc.id);\n    });\n    verifierSend = pushDocs.some(value => value == JSON.parse(window.localStorage.getItem('USER')));\n    verifierGet = pushDocs.some(value => value == JSON.parse(window.localStorage.getItem('A@@ph$$&-@#')));\n    const unsub = onSnapshot(doc(db, verifierSend ? \"client\" : \"agent\", JSON.parse(window.localStorage.getItem('USER'))), doc => {\n      setPin(doc.data().code);\n      setState(doc.data().state);\n      setFirst(doc.data().firstname);\n      setLast(doc.data().lastname);\n      setSoldeMain(doc.data().cdf);\n    });\n    const getRef = doc(db, verifierGet ? \"client\" : \"agent\", JSON.parse(window.localStorage.getItem('A@@ph$$&-@#')));\n    const getSnap = await getDoc(getRef);\n\n    if (getSnap.exists()) {\n      setGetstate(getSnap.data().state);\n      setGetFirst(getSnap.data().firstname);\n      setGetLast(getSnap.data().lastname);\n    }\n\n    ;\n\n    try {\n      await onSnapshot(doc(db, \"clients\", \"emoney\"), doc => {\n        setTableClient(doc.data().cdf);\n      });\n      await onSnapshot(doc(db, \"agents\", \"emoney\"), doc => {\n        setTableAgent(doc.data().cdf);\n      });\n      await onSnapshot(doc(db, \"muungano\", \"commission\"), doc => {\n        setTableAdmin(doc.data().cdf);\n      });\n      await onSnapshot(doc(db, \"agents\", \"commission\"), doc => {\n        setTableFrais(doc.data().cdf);\n      });\n      await onSnapshot(doc(db, \"muungano\", \"upgrade\"), doc => {\n        setTableUpgrade(doc.data().cdf);\n      });\n    } catch {\n      window.console.log('Erreur disponible');\n    }\n  }, []);\n\n  const onSubmit = async data => {// // Checked if value code is length valid\n    // if (data.code.length != 6 || pin != data.code || pin == '000000' || soldeMain <= 2000) {\n    //   setOpen(true);\n    //   reset();\n    // } else {\n    //   const sendUser = first.toLowerCase() + ' ' + last.toLowerCase();\n    //   const getUser = getfirst.toLowerCase() + ' ' + getlast.toLowerCase();\n    //   if (state == \"agent\" && getstate == \"agent\") {\n    //     window.localStorage.setItem('@ª©##', JSON.stringify(false));\n    //     window.localStorage.setItem('@cost##', JSON.stringify(true));\n    //     hashTrue = false;\n    //     prixHash = JSON.parse(window.localStorage.getItem('@solde!#!'));\n    //     let soldeAgent = Number(tableAgent[nowField]) + JSON.parse(window.localStorage.getItem('@solde!#!'));\n    //     let soldeUpgrade = Number(tableUpgrade[nowField]) + JSON.parse(window.localStorage.getItem('@solde!#!'));\n    //     let soldeAdminFrais = Number(tableAdmin[nowField]) + JSON.parse(window.localStorage.getItem('@frais!#!'));\n    //     let arrayAgent = tableAgent;\n    //     let arrayUpgrade = tableUpgrade;\n    //     let arrayAdmin = tableAdmin;\n    //     for (let i = now; i <= 31; i++) {\n    //       arrayAgent[i] = soldeAgent;\n    //       arrayUpgrade[i] = soldeUpgrade;\n    //       arrayAdmin[i] = soldeAdminFrais;\n    //     };\n    //     const sendPhone = JSON.parse(window.localStorage.getItem('USER'));\n    //     const getPhone = JSON.parse(window.localStorage.getItem('A@@ph$$&-@#'));\n    //     // const prix = JSON.parse(window.localStorage.getItem('@solde!#!'));\n    //     const unite = JSON.parse(window.localStorage.getItem('@unite!#!'));\n    //     const money = JSON.parse(window.localStorage.getItem('@solde!#!'));\n    //     const frais = JSON.parse(window.localStorage.getItem('@frais!#!'));\n    //     const main = JSON.parse(window.localStorage.getItem('@main!#!'));\n    //     swapInWithDocsAgent(sendPhone, getPhone, sendUser, getUser, main, money, frais, unite, arrayAgent, arrayUpgrade, arrayAdmin);\n    //     navigation('/send-success');\n    //   } else if (state == \"client\" && getstate == \"client\") {\n    //     window.localStorage.setItem('@ª©##', JSON.stringify(false));\n    //     hashTrue = false;\n    //     prixHash = JSON.parse(window.localStorage.getItem('@solde!#!'));\n    //     let soldeClient = Number(tableClient[nowField]) + JSON.parse(window.localStorage.getItem('@solde!#!'));\n    //     let soldeUpgrade = Number(tableUpgrade[nowField]) + JSON.parse(window.localStorage.getItem('@solde!#!'));\n    //     let soldeAdminFrais = Number(tableAdmin[nowField]) + JSON.parse(window.localStorage.getItem('@frais!#!'));\n    //     let arrayClient = tableClient;\n    //     let arrayUpgrade = tableUpgrade;\n    //     let arrayAdmin = tableAdmin;\n    //     for (let i = now; i <= 31; i++) {\n    //       arrayClient[i] = soldeClient;\n    //       arrayUpgrade[i] = soldeUpgrade;\n    //       arrayAdmin[i] = soldeAdminFrais;\n    //     };\n    //     const sendPhone = JSON.parse(window.localStorage.getItem('USER'));\n    //     const getPhone = JSON.parse(window.localStorage.getItem('A@@ph$$&-@#'));\n    //     const money = JSON.parse(window.localStorage.getItem('@solde!#!'));\n    //     const unite = JSON.parse(window.localStorage.getItem('@unite!#!'));\n    //     const frais = JSON.parse(window.localStorage.getItem('@frais!#!'));\n    //     const main = JSON.parse(window.localStorage.getItem('@main!#!'));\n    //     isSwapInWithClientToClient(sendPhone, getPhone, sendUser, getUser, main, money, frais, unite, arrayClient, arrayUpgrade, arrayAdmin);\n    //     navigation('/send-success');\n    //   } else {\n    //     if (state == \"agent\") {\n    //       window.localStorage.setItem('@ª©##', JSON.stringify(false));\n    //       hashTrue = false;\n    //       prixHash = JSON.parse(window.localStorage.getItem('@solde!#!'));\n    //       let soldeAgent = Number(tableAgent[nowField]) + JSON.parse(window.localStorage.getItem('@solde!#!'));\n    //       let soldeUpgrade = Number(tableUpgrade[nowField]) + JSON.parse(window.localStorage.getItem('@solde!#!'));\n    //       let arrayAgent = tableAgent;\n    //       let arrayUpgrade = tableUpgrade;\n    //       for (let i = now; i <= 31; i++) {\n    //         arrayAgent[i] = soldeAgent;\n    //         arrayUpgrade[i] = soldeUpgrade;\n    //       };\n    //       const sendPhone = JSON.parse(window.localStorage.getItem('USER'));\n    //       const getPhone = JSON.parse(window.localStorage.getItem('A@@ph$$&-@#'));\n    //       const prix = JSON.parse(window.localStorage.getItem('@solde!#!'));\n    //       const unite = JSON.parse(window.localStorage.getItem('@unite!#!'));\n    //       swapInWithDocsAgentToClient(sendPhone, getPhone, sendUser, getUser, prix, unite, arrayAgent, arrayUpgrade);\n    //       navigation('/send-success');\n    //     } else {\n    //       window.localStorage.setItem('@ª©##', JSON.stringify(false));\n    //       hashTrue = false;\n    //       prixHash = JSON.parse(window.localStorage.getItem('@solde!#!'));\n    //       let soldeClient = Number(tableClient[nowField]) + JSON.parse(window.localStorage.getItem('@solde!#!'));\n    //       let soldeUpgrade = Number(tableUpgrade[nowField]) + JSON.parse(window.localStorage.getItem('@solde!#!'));\n    //       let soldeAdminFrais = Number(tableAdmin[nowField]) + ((JSON.parse(window.localStorage.getItem('@frais!#!')) * 70) / 100);\n    //       let soldeAgentFrais = Number(tableFrais[nowField]) + ((JSON.parse(window.localStorage.getItem('@frais!#!')) * 30) / 100);\n    //       let arrayClient = tableClient;\n    //       let arrayUpgrade = tableUpgrade;\n    //       let arrayAdmin = tableAdmin;\n    //       let arrayAgent = tableFrais;\n    //       for (let i = now; i <= 31; i++) {\n    //         arrayClient[i] = soldeClient;\n    //         arrayUpgrade[i] = soldeUpgrade;\n    //         arrayAdmin[i] = Math.floor(soldeAdminFrais);\n    //         arrayAgent[i] = Math.floor(soldeAgentFrais);\n    //       };\n    //       const sendPhone = JSON.parse(window.localStorage.getItem('USER'));\n    //       const getPhone = JSON.parse(window.localStorage.getItem('A@@ph$$&-@#'));\n    //       const money = JSON.parse(window.localStorage.getItem('@solde!#!'));\n    //       const prix = JSON.parse(window.localStorage.getItem('@solde!#!'));\n    //       const unite = JSON.parse(window.localStorage.getItem('@unite!#!'));\n    //       const frais = JSON.parse(window.localStorage.getItem('@frais!#!'));\n    //       const main = JSON.parse(window.localStorage.getItem('@main!#!'));\n    //       isSwapInWithClientToAgent(sendPhone, getPhone, sendUser, getUser, main, money, frais, unite, arrayClient, arrayUpgrade, arrayAdmin, arrayAgent);\n    //       navigation('/send-success');\n    //     }\n    //   }\n    // }\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    onSubmit: handleSubmit(onSubmit),\n    children: [/*#__PURE__*/_jsxDEV(FormControl, {\n      sx: {\n        width: '100%'\n      },\n      variant: \"standard\",\n      children: [/*#__PURE__*/_jsxDEV(InputLabel, {\n        htmlFor: \"standard-adornment-password\",\n        children: \"Pin actuel\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 333,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Controller, {\n        name: \"code\",\n        control: control,\n        render: ({\n          field\n        }) => /*#__PURE__*/_jsxDEV(Input, {\n          id: \"standard-adornment-password\",\n          autocomplete: \"new-password\",\n          ...field,\n          type: showPassword ? 'text' : 'password',\n          endAdornment: /*#__PURE__*/_jsxDEV(InputAdornment, {\n            position: \"end\",\n            children: /*#__PURE__*/_jsxDEV(IconButton, {\n              \"aria-label\": \"toggle password visibility\",\n              onClick: handleClickShowPassword,\n              onMouseDown: handleMouseDownPassword,\n              children: showPassword ? /*#__PURE__*/_jsxDEV(VisibilityOff, {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 354,\n                columnNumber: 37\n              }, this) : /*#__PURE__*/_jsxDEV(Visibility, {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 354,\n                columnNumber: 57\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 349,\n              columnNumber: 19\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 347,\n            columnNumber: 17\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 340,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 335,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 329,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Dialog, {\n      fullWidth: fullWidth,\n      maxWidth: maxWidth,\n      open: open,\n      onClose: handleClose,\n      children: [/*#__PURE__*/_jsxDEV(DialogTitle, {\n        children: \"MuunganoMoney\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 371,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(DialogContent, {\n        children: /*#__PURE__*/_jsxDEV(DialogContentText, {\n          children: \"Le code PIN a \\xE9t\\xE9 v\\xE9rifi\\xE9, il est incorrect\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 374,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 372,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(DialogActions, {\n        children: /*#__PURE__*/_jsxDEV(Button, {\n          onClick: handleClose,\n          children: \"Fermer\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 380,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 379,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 365,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Dialog, {\n      fullWidth: fullWidth,\n      maxWidth: maxWidth,\n      open: cancel,\n      onClose: cancelClose,\n      children: [/*#__PURE__*/_jsxDEV(DialogTitle, {\n        children: \"MuunganoMoney\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 390,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(DialogContent, {\n        children: /*#__PURE__*/_jsxDEV(DialogContentText, {\n          children: \"Des frais sont appliqu\\xE9s \\xE0 cette transaction. Merci de choisir Muunganomoney\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 393,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 391,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(DialogActions, {\n        children: /*#__PURE__*/_jsxDEV(Button, {\n          onClick: cancelClose,\n          children: \"Fermer\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 399,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 398,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 384,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"Btn\",\n      children: \"Envoi\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 403,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 327,\n    columnNumber: 5\n  }, this);\n};\n\n_s(FormInput, \"W9986jIXIrgoGWggj1lezIPvZ/U=\", false, function () {\n  return [useNavigate, useForm];\n});\n\n_c4 = FormInput;\n\nasync function swapInWithDocsAgent(sendPhone, getPhone, sendUser, getUser, main, money, frais, unite, arrayAgentMoney, upgrade, adminFrais) {\n  let time = moment().format('LLL');\n  let send = {\n    date: time,\n    solde: `${money} ${unite}`,\n    phone: getPhone,\n    user: getUser,\n    type: 'envoyer'\n  };\n  let get = {\n    date: time,\n    solde: `${money} ${unite}`,\n    phone: sendPhone,\n    user: sendUser,\n    type: 'réussi'\n  };\n  const sendRef = doc(db, \"agent\", sendPhone);\n  await updateDoc(sendRef, {\n    cdf: main,\n    money: money,\n    user: getUser,\n    unite: unite,\n    phoneclient: getPhone,\n    delay: moment().format(),\n    swap: arrayUnion(send)\n  });\n  const getRef = doc(db, \"agent\", getPhone);\n  await updateDoc(getRef, {\n    cdf: increment(money),\n    money: money,\n    user: sendUser,\n    unite: unite,\n    phoneclient: sendPhone,\n    delay: moment().format(),\n    swap: arrayUnion(get)\n  });\n  const agentsemoneyRef = doc(db, \"agents\", \"emoney\");\n  await updateDoc(agentsemoneyRef, {\n    cdf: arrayAgentMoney\n  });\n  const upgradeRef = doc(db, \"muungano\", \"upgrade\");\n  await updateDoc(upgradeRef, {\n    cdf: upgrade\n  });\n  const adminRef = doc(db, \"muunganomoney\", \"money\");\n  await updateDoc(adminRef, {\n    spredcdf: increment(Math.floor(Number(frais)))\n  });\n  const fraisRef = doc(db, \"muungano\", \"commission\");\n  await updateDoc(fraisRef, {\n    cdf: adminFrais\n  });\n}\n\n;\n\nasync function swapInWithDocsAgentToClient(sendPhone, getPhone, sendUser, getUser, prix, unite, arrayAgentMoney, upgrade) {\n  let time = moment().format('LLL');\n  let send = {\n    date: time,\n    solde: `${prix} ${unite}`,\n    phone: getPhone,\n    user: getUser,\n    type: 'envoyer'\n  };\n  let get = {\n    date: time,\n    solde: `${prix} ${unite}`,\n    phone: sendPhone,\n    user: sendUser,\n    type: 'réussi'\n  };\n  const sendRef = doc(db, \"agent\", sendPhone);\n  await updateDoc(sendRef, {\n    cdf: increment(-prix),\n    money: prix,\n    user: getUser,\n    unite: unite,\n    phoneclient: getPhone,\n    delay: moment().format(),\n    swap: arrayUnion(send)\n  });\n  const getRef = doc(db, \"client\", getPhone);\n  await updateDoc(getRef, {\n    cdf: increment(prix),\n    money: prix,\n    user: sendUser,\n    unite: unite,\n    phoneclient: sendPhone,\n    delay: moment().format(),\n    swap: arrayUnion(get)\n  });\n  const agentsemoneyRef = doc(db, \"agents\", \"emoney\");\n  await updateDoc(agentsemoneyRef, {\n    cdf: arrayAgentMoney\n  });\n  const upgradeRef = doc(db, \"muungano\", \"upgrade\");\n  await updateDoc(upgradeRef, {\n    cdf: upgrade\n  });\n}\n\n;\n\nasync function isSwapInWithClientToAgent(sendPhone, getPhone, sendUser, getUser, main, money, frais, unite, arrayClientMoney, upgrade, adminFrais, agentFrais) {\n  let time = moment().format('LLL');\n  let send = {\n    date: time,\n    solde: `${money} ${unite}`,\n    phone: getPhone,\n    user: getUser,\n    type: 'envoyer'\n  };\n  let get = {\n    date: time,\n    solde: `${money} ${unite}`,\n    phone: sendPhone,\n    user: sendUser,\n    type: 'réussi'\n  };\n  let fraisAdmin = frais * 70 / 100;\n  let fraisAgent = frais * 30 / 100;\n  const sendRef = doc(db, \"client\", sendPhone);\n  await updateDoc(sendRef, {\n    cdf: main,\n    money: money,\n    user: getUser,\n    unite: unite,\n    phoneclient: getPhone,\n    delay: moment().format(),\n    swap: arrayUnion(send)\n  });\n  const getRef = doc(db, \"agent\", getPhone);\n  await updateDoc(getRef, {\n    cdf: increment(money),\n    money: money,\n    user: sendUser,\n    unite: unite,\n    thriftcdf: increment(fraisAgent),\n    phoneclient: sendPhone,\n    delay: moment().format(),\n    swap: arrayUnion(get)\n  });\n  const adminRef = doc(db, \"muunganomoney\", \"money\");\n  await updateDoc(adminRef, {\n    spredcdf: increment(fraisAdmin)\n  });\n  const agentsemoneyRef = doc(db, \"clients\", \"emoney\");\n  await updateDoc(agentsemoneyRef, {\n    cdf: arrayClientMoney\n  });\n  const upgradeRef = doc(db, \"muungano\", \"upgrade\");\n  await updateDoc(upgradeRef, {\n    cdf: upgrade\n  });\n  const agentFraisRef = doc(db, \"agents\", \"commission\");\n  await updateDoc(agentFraisRef, {\n    cdf: agentFrais\n  });\n  const fraisRef = doc(db, \"muungano\", \"commission\");\n  await updateDoc(fraisRef, {\n    cdf: adminFrais\n  });\n}\n\n;\n\nasync function isSwapInWithClientToClient(sendPhone, getPhone, sendUser, getUser, main, money, frais, unite, arrayClientMoney, upgrade, adminFrais) {\n  let time = moment().format('LLL');\n  let send = {\n    date: time,\n    solde: `${money} ${unite}`,\n    phone: getPhone,\n    user: getUser,\n    type: 'envoyer'\n  };\n  let get = {\n    date: time,\n    solde: `${money} ${unite}`,\n    phone: sendPhone,\n    user: sendUser,\n    type: 'réussi'\n  };\n  const sendRef = doc(db, \"client\", sendPhone);\n  await updateDoc(sendRef, {\n    cdf: main,\n    money: money,\n    user: getUser,\n    unite: unite,\n    phoneclient: getPhone,\n    delay: moment().format(),\n    swap: arrayUnion(send)\n  });\n  const getRef = doc(db, \"client\", getPhone);\n  await updateDoc(getRef, {\n    cdf: increment(money),\n    money: money,\n    user: sendUser,\n    unite: unite,\n    phoneclient: sendPhone,\n    delay: moment().format(),\n    swap: arrayUnion(get)\n  });\n  const adminRef = doc(db, \"muunganomoney\", \"money\");\n  await updateDoc(adminRef, {\n    spredcdf: increment(Math.floor(Number(frais)))\n  });\n  const agentsemoneyRef = doc(db, \"clients\", \"emoney\");\n  await updateDoc(agentsemoneyRef, {\n    cdf: arrayClientMoney\n  });\n  const upgradeRef = doc(db, \"muungano\", \"upgrade\");\n  await updateDoc(upgradeRef, {\n    cdf: upgrade\n  });\n  const fraisRef = doc(db, \"muungano\", \"commission\");\n  await updateDoc(fraisRef, {\n    cdf: adminFrais\n  });\n}\n\n;\n\nvar _c, _c2, _c3, _c4;\n\n$RefreshReg$(_c, \"ReturnInput\");\n$RefreshReg$(_c2, \"SreenLarge\");\n$RefreshReg$(_c3, \"ScreenSmall\");\n$RefreshReg$(_c4, \"FormInput\");","map":{"version":3,"sources":["/Users/USER/Desktop/Agent/src/Money/Simple/Input.js"],"names":["React","Media","useForm","Controller","useNavigate","doc","getDocs","collection","getDoc","updateDoc","increment","onSnapshot","arrayUnion","db","REturnQuOte","Button","Dialog","DialogActions","DialogContent","DialogTitle","DialogContentText","IconButton","Input","InputLabel","InputAdornment","FormControl","Visibility","VisibilityOff","moment","nowField","date","now","prixHash","hashTrue","ReturnInput","small","medium","large","matches","SreenLarge","ScreenSmall","FormInput","pushDocs","Array","verifierSend","verifierGet","navigation","register","handleSubmit","reset","control","tableClient","setTableClient","useState","tableAgent","setTableAgent","tableUpgrade","setTableUpgrade","tableAdmin","setTableAdmin","tableFrais","setTableFrais","pin","setPin","state","setState","first","setFirst","last","setLast","soldeMain","setSoldeMain","getstate","setGetstate","getfirst","setGetFirst","getlast","setGetLast","open","setOpen","cancel","setCancel","click","setClick","fullWidth","setFullWidth","maxWidth","setMaxWidth","showPassword","setShowPassword","handleClickShowPassword","show","handleMouseDownPassword","event","preventDefault","handleClose","cancelClose","useEffect","querySnapshot","forEach","push","id","some","value","JSON","parse","window","localStorage","getItem","unsub","data","code","firstname","lastname","cdf","getRef","getSnap","exists","console","log","onSubmit","width","field","swapInWithDocsAgent","sendPhone","getPhone","sendUser","getUser","main","money","frais","unite","arrayAgentMoney","upgrade","adminFrais","time","format","send","solde","phone","user","type","get","sendRef","phoneclient","delay","swap","agentsemoneyRef","upgradeRef","adminRef","spredcdf","Math","floor","Number","fraisRef","swapInWithDocsAgentToClient","prix","isSwapInWithClientToAgent","arrayClientMoney","agentFrais","fraisAdmin","fraisAgent","thriftcdf","agentFraisRef","isSwapInWithClientToClient"],"mappings":"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","sourcesContent":["import React from 'react';\nimport './Input.css';\nimport Media from 'react-media';\nimport { useForm, Controller } from 'react-hook-form';\nimport { useNavigate } from 'react-router-dom';\nimport { doc, getDocs, collection, getDoc, updateDoc, increment, onSnapshot, arrayUnion } from \"firebase/firestore\";\nimport { db } from '../../firebase';\nimport REturnQuOte from './Quote';\n\nimport Button from '@mui/material/Button';\nimport Dialog from '@mui/material/Dialog';\nimport DialogActions from '@mui/material/DialogActions';\nimport DialogContent from '@mui/material/DialogContent';\nimport DialogTitle from '@mui/material/DialogTitle';\nimport DialogContentText from '@mui/material/DialogContentText';\n\nimport IconButton from '@mui/material/IconButton';\nimport Input from '@mui/material/Input';\nimport InputLabel from '@mui/material/InputLabel';\nimport InputAdornment from '@mui/material/InputAdornment';\nimport FormControl from '@mui/material/FormControl';\nimport Visibility from '@mui/icons-material/Visibility';\nimport VisibilityOff from '@mui/icons-material/VisibilityOff';\n\nimport moment from 'moment';\n\nexport let nowField = moment().date();\nexport let now = moment().date();\n\nexport let prixHash = 0;\nexport let hashTrue = true;\n\n\n// Input Field Component \nexport default function ReturnInput() {\n  return (\n    <Media\n      queries={{\n        small: '(max-width: 599px)',\n        medium: '(min-width: 600px) and (max-width:1199px)',\n        large: '(min-width: 1200px)',\n      }}>\n      {matches => (\n        <>\n          {matches.small && <ScreenSmall />}\n          {matches.medium && <SreenLarge />}\n          {matches.large && <SreenLarge />}\n        </>\n      )}\n    </Media>\n  );\n};\nexport const SreenLarge = () => (\n  <div className='wrp-form-input-pin'>\n    <REturnQuOte />\n    <FormInput />\n\n  </div>\n);\nexport const ScreenSmall = () => (\n  <div className='wrp-form-input-pin'>\n    <REturnQuOte />\n    <FormInput />\n  </div>\n);\n\nexport const FormInput = () => {\n\n  let pushDocs = new Array();\n  let verifierSend;\n  let verifierGet;\n\n  const navigation = useNavigate();\n  const { register, handleSubmit, reset, control } = useForm();\n\n  //  order notebook\n  const [tableClient, setTableClient] = React.useState();\n  const [tableAgent, setTableAgent] = React.useState();\n  const [tableUpgrade, setTableUpgrade] = React.useState();\n  const [tableAdmin, setTableAdmin] = React.useState();\n  const [tableFrais, setTableFrais] = React.useState();\n\n  // send React useState  \n  const [pin, setPin] = React.useState(null);\n  const [state, setState] = React.useState(null);\n  const [first, setFirst] = React.useState('');\n  const [last, setLast] = React.useState('');\n  const [soldeMain, setSoldeMain] = React.useState(null);\n\n  // getting React useState\n  const [getstate, setGetstate] = React.useState(null);\n  const [getfirst, setGetFirst] = React.useState('');\n  const [getlast, setGetLast] = React.useState('');\n\n\n  const [open, setOpen] = React.useState(false);\n  const [cancel, setCancel] = React.useState(false);\n  const [click, setClick] = React.useState(false);\n\n  const [fullWidth, setFullWidth] = React.useState(true);\n  const [maxWidth, setMaxWidth] = React.useState('sm');\n\n  const [showPassword, setShowPassword] = React.useState(false);\n\n  const handleClickShowPassword = () => setShowPassword((show) => !show);\n  const handleMouseDownPassword = (event) => {\n    event.preventDefault();\n  };\n\n  const handleClose = () => {\n    setOpen(false);\n  };\n  const cancelClose = () => {\n    setCancel(false);\n    setClick(true);\n  };\n\n  React.useEffect(async () => {\n\n    const querySnapshot = await getDocs(collection(db, \"client\"));\n    querySnapshot.forEach((doc) => {\n      pushDocs.push(doc.id);\n    });\n\n    verifierSend = pushDocs.some(value => value == JSON.parse(window.localStorage.getItem('USER')));\n    verifierGet = pushDocs.some(value => value == JSON.parse(window.localStorage.getItem('A@@ph$$&-@#')));\n\n    const unsub = onSnapshot(doc(db, verifierSend ? \"client\" : \"agent\", JSON.parse(window.localStorage.getItem('USER'))), (doc) => {\n      setPin(doc.data().code);\n      setState(doc.data().state);\n      setFirst(doc.data().firstname);\n      setLast(doc.data().lastname);\n      setSoldeMain(doc.data().cdf);\n    });\n\n    const getRef = doc(db, verifierGet ? \"client\" : \"agent\", JSON.parse(window.localStorage.getItem('A@@ph$$&-@#')));\n    const getSnap = await getDoc(getRef);\n\n    if (getSnap.exists()) {\n      setGetstate(getSnap.data().state);\n      setGetFirst(getSnap.data().firstname);\n      setGetLast(getSnap.data().lastname);\n    };\n\n\n    try {\n      await onSnapshot(doc(db, \"clients\", \"emoney\"), (doc) => {\n        setTableClient(doc.data().cdf);\n      });\n      await onSnapshot(doc(db, \"agents\", \"emoney\"), (doc) => {\n        setTableAgent(doc.data().cdf);\n      });\n      await onSnapshot(doc(db, \"muungano\", \"commission\"), (doc) => {\n        setTableAdmin(doc.data().cdf);\n      });\n\n      await onSnapshot(doc(db, \"agents\", \"commission\"), (doc) => {\n        setTableFrais(doc.data().cdf);\n      });\n\n      await onSnapshot(doc(db, \"muungano\", \"upgrade\"), (doc) => {\n        setTableUpgrade(doc.data().cdf);\n      });\n\n    } catch {\n      window.console.log('Erreur disponible');\n    }\n\n  }, []);\n\n  const onSubmit = async (data) => {\n\n    // // Checked if value code is length valid\n    // if (data.code.length != 6 || pin != data.code || pin == '000000' || soldeMain <= 2000) {\n\n    //   setOpen(true);\n    //   reset();\n\n    // } else {\n\n    //   const sendUser = first.toLowerCase() + ' ' + last.toLowerCase();\n    //   const getUser = getfirst.toLowerCase() + ' ' + getlast.toLowerCase();\n\n    //   if (state == \"agent\" && getstate == \"agent\") {\n\n    //     window.localStorage.setItem('@ª©##', JSON.stringify(false));\n    //     window.localStorage.setItem('@cost##', JSON.stringify(true));\n\n    //     hashTrue = false;\n    //     prixHash = JSON.parse(window.localStorage.getItem('@solde!#!'));\n\n    //     let soldeAgent = Number(tableAgent[nowField]) + JSON.parse(window.localStorage.getItem('@solde!#!'));\n    //     let soldeUpgrade = Number(tableUpgrade[nowField]) + JSON.parse(window.localStorage.getItem('@solde!#!'));\n    //     let soldeAdminFrais = Number(tableAdmin[nowField]) + JSON.parse(window.localStorage.getItem('@frais!#!'));\n\n    //     let arrayAgent = tableAgent;\n    //     let arrayUpgrade = tableUpgrade;\n    //     let arrayAdmin = tableAdmin;\n\n    //     for (let i = now; i <= 31; i++) {\n    //       arrayAgent[i] = soldeAgent;\n    //       arrayUpgrade[i] = soldeUpgrade;\n    //       arrayAdmin[i] = soldeAdminFrais;\n\n    //     };\n\n    //     const sendPhone = JSON.parse(window.localStorage.getItem('USER'));\n    //     const getPhone = JSON.parse(window.localStorage.getItem('A@@ph$$&-@#'));\n    //     // const prix = JSON.parse(window.localStorage.getItem('@solde!#!'));\n    //     const unite = JSON.parse(window.localStorage.getItem('@unite!#!'));\n    //     const money = JSON.parse(window.localStorage.getItem('@solde!#!'));\n    //     const frais = JSON.parse(window.localStorage.getItem('@frais!#!'));\n    //     const main = JSON.parse(window.localStorage.getItem('@main!#!'));\n\n    //     swapInWithDocsAgent(sendPhone, getPhone, sendUser, getUser, main, money, frais, unite, arrayAgent, arrayUpgrade, arrayAdmin);\n    //     navigation('/send-success');\n\n    //   } else if (state == \"client\" && getstate == \"client\") {\n\n    //     window.localStorage.setItem('@ª©##', JSON.stringify(false));\n\n    //     hashTrue = false;\n    //     prixHash = JSON.parse(window.localStorage.getItem('@solde!#!'));\n\n    //     let soldeClient = Number(tableClient[nowField]) + JSON.parse(window.localStorage.getItem('@solde!#!'));\n    //     let soldeUpgrade = Number(tableUpgrade[nowField]) + JSON.parse(window.localStorage.getItem('@solde!#!'));\n    //     let soldeAdminFrais = Number(tableAdmin[nowField]) + JSON.parse(window.localStorage.getItem('@frais!#!'));\n\n    //     let arrayClient = tableClient;\n    //     let arrayUpgrade = tableUpgrade;\n    //     let arrayAdmin = tableAdmin;\n\n    //     for (let i = now; i <= 31; i++) {\n    //       arrayClient[i] = soldeClient;\n    //       arrayUpgrade[i] = soldeUpgrade;\n    //       arrayAdmin[i] = soldeAdminFrais;\n\n    //     };\n\n    //     const sendPhone = JSON.parse(window.localStorage.getItem('USER'));\n    //     const getPhone = JSON.parse(window.localStorage.getItem('A@@ph$$&-@#'));\n    //     const money = JSON.parse(window.localStorage.getItem('@solde!#!'));\n    //     const unite = JSON.parse(window.localStorage.getItem('@unite!#!'));\n    //     const frais = JSON.parse(window.localStorage.getItem('@frais!#!'));\n    //     const main = JSON.parse(window.localStorage.getItem('@main!#!'));\n\n    //     isSwapInWithClientToClient(sendPhone, getPhone, sendUser, getUser, main, money, frais, unite, arrayClient, arrayUpgrade, arrayAdmin);\n    //     navigation('/send-success');\n\n\n    //   } else {\n\n    //     if (state == \"agent\") {\n\n    //       window.localStorage.setItem('@ª©##', JSON.stringify(false));\n\n    //       hashTrue = false;\n    //       prixHash = JSON.parse(window.localStorage.getItem('@solde!#!'));\n\n    //       let soldeAgent = Number(tableAgent[nowField]) + JSON.parse(window.localStorage.getItem('@solde!#!'));\n    //       let soldeUpgrade = Number(tableUpgrade[nowField]) + JSON.parse(window.localStorage.getItem('@solde!#!'));\n\n    //       let arrayAgent = tableAgent;\n    //       let arrayUpgrade = tableUpgrade;\n\n    //       for (let i = now; i <= 31; i++) {\n    //         arrayAgent[i] = soldeAgent;\n    //         arrayUpgrade[i] = soldeUpgrade;\n    //       };\n\n    //       const sendPhone = JSON.parse(window.localStorage.getItem('USER'));\n    //       const getPhone = JSON.parse(window.localStorage.getItem('A@@ph$$&-@#'));\n    //       const prix = JSON.parse(window.localStorage.getItem('@solde!#!'));\n    //       const unite = JSON.parse(window.localStorage.getItem('@unite!#!'));\n\n    //       swapInWithDocsAgentToClient(sendPhone, getPhone, sendUser, getUser, prix, unite, arrayAgent, arrayUpgrade);\n\n\n    //       navigation('/send-success');\n\n\n    //     } else {\n\n    //       window.localStorage.setItem('@ª©##', JSON.stringify(false));\n\n    //       hashTrue = false;\n    //       prixHash = JSON.parse(window.localStorage.getItem('@solde!#!'));\n\n    //       let soldeClient = Number(tableClient[nowField]) + JSON.parse(window.localStorage.getItem('@solde!#!'));\n    //       let soldeUpgrade = Number(tableUpgrade[nowField]) + JSON.parse(window.localStorage.getItem('@solde!#!'));\n    //       let soldeAdminFrais = Number(tableAdmin[nowField]) + ((JSON.parse(window.localStorage.getItem('@frais!#!')) * 70) / 100);\n    //       let soldeAgentFrais = Number(tableFrais[nowField]) + ((JSON.parse(window.localStorage.getItem('@frais!#!')) * 30) / 100);\n\n    //       let arrayClient = tableClient;\n    //       let arrayUpgrade = tableUpgrade;\n    //       let arrayAdmin = tableAdmin;\n    //       let arrayAgent = tableFrais;\n\n    //       for (let i = now; i <= 31; i++) {\n    //         arrayClient[i] = soldeClient;\n    //         arrayUpgrade[i] = soldeUpgrade;\n    //         arrayAdmin[i] = Math.floor(soldeAdminFrais);\n    //         arrayAgent[i] = Math.floor(soldeAgentFrais);\n\n    //       };\n\n    //       const sendPhone = JSON.parse(window.localStorage.getItem('USER'));\n    //       const getPhone = JSON.parse(window.localStorage.getItem('A@@ph$$&-@#'));\n    //       const money = JSON.parse(window.localStorage.getItem('@solde!#!'));\n    //       const prix = JSON.parse(window.localStorage.getItem('@solde!#!'));\n    //       const unite = JSON.parse(window.localStorage.getItem('@unite!#!'));\n    //       const frais = JSON.parse(window.localStorage.getItem('@frais!#!'));\n    //       const main = JSON.parse(window.localStorage.getItem('@main!#!'));\n\n    //       isSwapInWithClientToAgent(sendPhone, getPhone, sendUser, getUser, main, money, frais, unite, arrayClient, arrayUpgrade, arrayAdmin, arrayAgent);\n    //       navigation('/send-success');\n    //     }\n\n    //   }\n\n    // }\n\n\n  };\n\n  return (\n    <form onSubmit={handleSubmit(onSubmit)}>\n\n      <FormControl\n        sx={{ width: '100%' }}\n\n        variant=\"standard\">\n        <InputLabel htmlFor=\"standard-adornment-password\">Pin actuel</InputLabel>\n\n        <Controller\n          name=\"code\"\n          control={control}\n          render={({ field }) =>\n\n            <Input\n              id=\"standard-adornment-password\"\n              autocomplete=\"new-password\"\n              {...field}\n              type={showPassword ? 'text' : 'password'}\n\n              endAdornment={\n                <InputAdornment position=\"end\">\n\n                  <IconButton\n                    aria-label=\"toggle password visibility\"\n                    onClick={handleClickShowPassword}\n                    onMouseDown={handleMouseDownPassword}\n                  >\n                    {showPassword ? <VisibilityOff /> : <Visibility />}\n                  </IconButton>\n\n                </InputAdornment>\n              }\n\n            />}\n        />\n\n      </FormControl>\n\n      <Dialog\n        fullWidth={fullWidth}\n        maxWidth={maxWidth}\n        open={open}\n        onClose={handleClose}>\n\n        <DialogTitle>MuunganoMoney</DialogTitle>\n        <DialogContent>\n\n          <DialogContentText>\n            Le code PIN a été vérifié, il est incorrect\n     </DialogContentText>\n\n        </DialogContent>\n        <DialogActions>\n          <Button onClick={handleClose}>Fermer</Button>\n        </DialogActions>\n      </Dialog>\n\n      <Dialog\n        fullWidth={fullWidth}\n        maxWidth={maxWidth}\n        open={cancel}\n        onClose={cancelClose}>\n\n        <DialogTitle>MuunganoMoney</DialogTitle>\n        <DialogContent>\n\n          <DialogContentText>\n            Des frais sont appliqués à cette transaction. Merci de choisir Muunganomoney\n     </DialogContentText>\n\n        </DialogContent>\n        <DialogActions>\n          <Button onClick={cancelClose}>Fermer</Button>\n        </DialogActions>\n      </Dialog>\n\n      <button className='Btn'>Envoi</button>\n    </form>\n  )\n};\n\nasync function swapInWithDocsAgent(sendPhone, getPhone, sendUser, getUser, main, money, frais, unite, arrayAgentMoney, upgrade, adminFrais) {\n\n  let time = moment().format('LLL');\n  let send = { date: time, solde: `${money} ${unite}`, phone: getPhone, user: getUser, type: 'envoyer' }\n  let get = { date: time, solde: `${money} ${unite}`, phone: sendPhone, user: sendUser, type: 'réussi' }\n\n\n  const sendRef = doc(db, \"agent\", sendPhone);\n  await updateDoc(sendRef, {\n    cdf: (main),\n    money: money,\n    user: getUser,\n    unite: unite,\n    phoneclient: getPhone,\n    delay: moment().format(),\n    swap: arrayUnion(send)\n  });\n\n  const getRef = doc(db, \"agent\", getPhone);\n  await updateDoc(getRef, {\n    cdf: increment(money),\n    money: money,\n    user: sendUser,\n    unite: unite,\n    phoneclient: sendPhone,\n    delay: moment().format(),\n    swap: arrayUnion(get)\n  });\n\n  const agentsemoneyRef = doc(db, \"agents\", \"emoney\");\n  await updateDoc(agentsemoneyRef, {\n    cdf: arrayAgentMoney,\n  });\n\n  const upgradeRef = doc(db, \"muungano\", \"upgrade\");\n  await updateDoc(upgradeRef, {\n    cdf: upgrade,\n  });\n\n  const adminRef = doc(db, \"muunganomoney\", \"money\");\n  await updateDoc(adminRef, {\n    spredcdf: increment(Math.floor(Number(frais)))\n  });\n\n  const fraisRef = doc(db, \"muungano\", \"commission\");\n  await updateDoc(fraisRef, {\n    cdf: adminFrais,\n  });\n\n};\nasync function swapInWithDocsAgentToClient(sendPhone, getPhone, sendUser, getUser, prix, unite, arrayAgentMoney, upgrade) {\n\n  let time = moment().format('LLL');\n  let send = { date: time, solde: `${prix} ${unite}`, phone: getPhone, user: getUser, type: 'envoyer' }\n  let get = { date: time, solde: `${prix} ${unite}`, phone: sendPhone, user: sendUser, type: 'réussi' }\n\n\n  const sendRef = doc(db, \"agent\", sendPhone);\n  await updateDoc(sendRef, {\n    cdf: increment(-(prix)),\n    money: prix,\n    user: getUser,\n    unite: unite,\n    phoneclient: getPhone,\n    delay: moment().format(),\n    swap: arrayUnion(send)\n  });\n\n  const getRef = doc(db, \"client\", getPhone);\n  await updateDoc(getRef, {\n    cdf: increment(prix),\n    money: prix,\n    user: sendUser,\n    unite: unite,\n    phoneclient: sendPhone,\n    delay: moment().format(),\n    swap: arrayUnion(get)\n  });\n\n  const agentsemoneyRef = doc(db, \"agents\", \"emoney\");\n  await updateDoc(agentsemoneyRef, {\n    cdf: arrayAgentMoney,\n  });\n\n  const upgradeRef = doc(db, \"muungano\", \"upgrade\");\n  await updateDoc(upgradeRef, {\n    cdf: upgrade,\n  });\n\n};\nasync function isSwapInWithClientToAgent(sendPhone, getPhone, sendUser, getUser, main, money, frais, unite, arrayClientMoney, upgrade, adminFrais, agentFrais) {\n\n  let time = moment().format('LLL');\n  let send = { date: time, solde: `${money} ${unite}`, phone: getPhone, user: getUser, type: 'envoyer' }\n  let get = { date: time, solde: `${money} ${unite}`, phone: sendPhone, user: sendUser, type: 'réussi' }\n\n\n  let fraisAdmin = frais * 70 / 100;\n  let fraisAgent = frais * 30 / 100;\n\n\n  const sendRef = doc(db, \"client\", sendPhone);\n  await updateDoc(sendRef, {\n    cdf: (main),\n    money: money,\n    user: getUser,\n    unite: unite,\n    phoneclient: getPhone,\n    delay: moment().format(),\n    swap: arrayUnion(send)\n  });\n\n  const getRef = doc(db, \"agent\", getPhone);\n  await updateDoc(getRef, {\n    cdf: increment(money),\n    money: money,\n    user: sendUser,\n    unite: unite,\n    thriftcdf: increment(fraisAgent),\n    phoneclient: sendPhone,\n    delay: moment().format(),\n    swap: arrayUnion(get)\n  });\n\n  const adminRef = doc(db, \"muunganomoney\", \"money\");\n  await updateDoc(adminRef, {\n    spredcdf: increment(fraisAdmin)\n  });\n\n  const agentsemoneyRef = doc(db, \"clients\", \"emoney\");\n  await updateDoc(agentsemoneyRef, {\n    cdf: arrayClientMoney,\n  });\n\n  const upgradeRef = doc(db, \"muungano\", \"upgrade\");\n  await updateDoc(upgradeRef, {\n    cdf: upgrade,\n  });\n\n  const agentFraisRef = doc(db, \"agents\", \"commission\");\n  await updateDoc(agentFraisRef, {\n    cdf: agentFrais,\n  });\n\n  const fraisRef = doc(db, \"muungano\", \"commission\");\n  await updateDoc(fraisRef, {\n    cdf: adminFrais,\n  });\n\n};\nasync function isSwapInWithClientToClient(sendPhone, getPhone, sendUser, getUser, main, money, frais, unite, arrayClientMoney, upgrade, adminFrais) {\n\n  let time = moment().format('LLL');\n  let send = { date: time, solde: `${money} ${unite}`, phone: getPhone, user: getUser, type: 'envoyer' }\n  let get = { date: time, solde: `${money} ${unite}`, phone: sendPhone, user: sendUser, type: 'réussi' }\n\n\n  const sendRef = doc(db, \"client\", sendPhone);\n  await updateDoc(sendRef, {\n    cdf: (main),\n    money: money,\n    user: getUser,\n    unite: unite,\n    phoneclient: getPhone,\n    delay: moment().format(),\n    swap: arrayUnion(send)\n  });\n\n  const getRef = doc(db, \"client\", getPhone);\n  await updateDoc(getRef, {\n    cdf: increment(money),\n    money: money,\n    user: sendUser,\n    unite: unite,\n    phoneclient: sendPhone,\n    delay: moment().format(),\n    swap: arrayUnion(get)\n  });\n\n  const adminRef = doc(db, \"muunganomoney\", \"money\");\n  await updateDoc(adminRef, {\n    spredcdf: increment(Math.floor(Number(frais)))\n  });\n\n  const agentsemoneyRef = doc(db, \"clients\", \"emoney\");\n  await updateDoc(agentsemoneyRef, {\n    cdf: arrayClientMoney,\n  });\n\n  const upgradeRef = doc(db, \"muungano\", \"upgrade\");\n  await updateDoc(upgradeRef, {\n    cdf: upgrade,\n  });\n\n  const fraisRef = doc(db, \"muungano\", \"commission\");\n  await updateDoc(fraisRef, {\n    cdf: adminFrais,\n  });\n\n};\n"]},"metadata":{},"sourceType":"module"}