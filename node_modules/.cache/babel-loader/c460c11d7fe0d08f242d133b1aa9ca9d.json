{"ast":null,"code":"var _jsxFileName = \"/Users/USER/Desktop/Agent/src/Money/Simple/Input.js\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport './Input.css';\nimport Media from 'react-media';\nimport { useForm, Controller } from 'react-hook-form';\nimport { useNavigate } from 'react-router-dom';\nimport { doc, getDocs, collection, getDoc, updateDoc, increment, onSnapshot, arrayUnion } from \"firebase/firestore\";\nimport { db } from '../../firebase';\nimport REturnQuOte from './Quote';\nimport Button from '@mui/material/Button';\nimport Dialog from '@mui/material/Dialog';\nimport DialogActions from '@mui/material/DialogActions';\nimport DialogContent from '@mui/material/DialogContent';\nimport DialogTitle from '@mui/material/DialogTitle';\nimport DialogContentText from '@mui/material/DialogContentText';\nimport IconButton from '@mui/material/IconButton';\nimport Input from '@mui/material/Input';\nimport InputLabel from '@mui/material/InputLabel';\nimport InputAdornment from '@mui/material/InputAdornment';\nimport FormControl from '@mui/material/FormControl';\nimport Visibility from '@mui/icons-material/Visibility';\nimport VisibilityOff from '@mui/icons-material/VisibilityOff';\nimport moment from 'moment';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport let nowField = moment().date();\nexport let now = moment().date();\nexport let prixHash = 0;\nexport let hashTrue = true; // Input Field Component \n\nexport default function ReturnInput() {\n  return /*#__PURE__*/_jsxDEV(Media, {\n    queries: {\n      small: '(max-width: 599px)',\n      medium: '(min-width: 600px) and (max-width:1199px)',\n      large: '(min-width: 1200px)'\n    },\n    children: matches => /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [matches.small && /*#__PURE__*/_jsxDEV(ScreenSmall, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 24\n      }, this), matches.medium && /*#__PURE__*/_jsxDEV(SreenLarge, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 25\n      }, this), matches.large && /*#__PURE__*/_jsxDEV(SreenLarge, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 24\n      }, this)]\n    }, void 0, true)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 37,\n    columnNumber: 3\n  }, this);\n}\n_c = ReturnInput;\n;\nexport const SreenLarge = () => /*#__PURE__*/_jsxDEV(\"div\", {\n  className: \"wrp-form-input-pin\",\n  children: [/*#__PURE__*/_jsxDEV(REturnQuOte, {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 55,\n    columnNumber: 3\n  }, this), /*#__PURE__*/_jsxDEV(FormInput, {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 56,\n    columnNumber: 3\n  }, this)]\n}, void 0, true, {\n  fileName: _jsxFileName,\n  lineNumber: 54,\n  columnNumber: 2\n}, this);\n_c2 = SreenLarge;\nexport const ScreenSmall = () => /*#__PURE__*/_jsxDEV(\"div\", {\n  className: \"wrp-form-input-pin\",\n  children: [/*#__PURE__*/_jsxDEV(REturnQuOte, {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 62,\n    columnNumber: 3\n  }, this), /*#__PURE__*/_jsxDEV(FormInput, {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 63,\n    columnNumber: 3\n  }, this)]\n}, void 0, true, {\n  fileName: _jsxFileName,\n  lineNumber: 61,\n  columnNumber: 2\n}, this);\n_c3 = ScreenSmall;\nexport const FormInput = () => {\n  _s();\n\n  let pushDocs = new Array();\n  let verifierSend;\n  let verifierGet;\n  const navigation = useNavigate();\n  const {\n    register,\n    handleSubmit,\n    reset,\n    control\n  } = useForm(); //  order notebook\n\n  const [tableClient, setTableClient] = React.useState();\n  const [tableAgent, setTableAgent] = React.useState();\n  const [tableUpgrade, setTableUpgrade] = React.useState();\n  const [tableAdmin, setTableAdmin] = React.useState();\n  const [tableFrais, setTableFrais] = React.useState(); // send React useState  \n\n  const [pin, setPin] = React.useState(null);\n  const [state, setState] = React.useState(null);\n  const [first, setFirst] = React.useState('');\n  const [last, setLast] = React.useState('');\n  const [soldeMain, setSoldeMain] = React.useState(null); // getting React useState\n\n  const [getstate, setGetstate] = React.useState(null);\n  const [getfirst, setGetFirst] = React.useState('');\n  const [getlast, setGetLast] = React.useState('');\n  const [open, setOpen] = React.useState(false);\n  const [cancel, setCancel] = React.useState(false);\n  const [click, setClick] = React.useState(false);\n  const [fullWidth, setFullWidth] = React.useState(true);\n  const [maxWidth, setMaxWidth] = React.useState('sm');\n  const [showPassword, setShowPassword] = React.useState(false);\n\n  const handleClickShowPassword = () => setShowPassword(show => !show);\n\n  const handleMouseDownPassword = event => {\n    event.preventDefault();\n  };\n\n  const handleClose = () => {\n    setOpen(false);\n  };\n\n  const cancelClose = () => {\n    setCancel(false);\n    setClick(true);\n  }; // React.useEffect(async () => {\n  //   const querySnapshot = await getDocs(collection(db, \"client\"));\n  //   querySnapshot.forEach((doc) => {\n  //     pushDocs.push(doc.id);\n  //   });\n  //   verifierSend = pushDocs.some(value => value == JSON.parse(window.localStorage.getItem('USER')));\n  //   verifierGet = pushDocs.some(value => value == JSON.parse(window.localStorage.getItem('A@@ph$$&-@#')));\n  //   const unsub = onSnapshot(doc(db, verifierSend ? \"client\" : \"agent\", JSON.parse(window.localStorage.getItem('USER'))), (doc) => {\n  //     setPin(doc.data().code);\n  //     setState(doc.data().state);\n  //     setFirst(doc.data().firstname);\n  //     setLast(doc.data().lastname);\n  //     setSoldeMain(doc.data().cdf);\n  //   });\n  //   const getRef = doc(db, verifierGet ? \"client\" : \"agent\", JSON.parse(window.localStorage.getItem('A@@ph$$&-@#')));\n  //   const getSnap = await getDoc(getRef);\n  //   if (getSnap.exists()) {\n  //     setGetstate(getSnap.data().state);\n  //     setGetFirst(getSnap.data().firstname);\n  //     setGetLast(getSnap.data().lastname);\n  //   };\n  //   try {\n  //     await onSnapshot(doc(db, \"clients\", \"emoney\"), (doc) => {\n  //       setTableClient(doc.data().cdf);\n  //     });\n  //     await onSnapshot(doc(db, \"agents\", \"emoney\"), (doc) => {\n  //       setTableAgent(doc.data().cdf);\n  //     });\n  //     await onSnapshot(doc(db, \"muungano\", \"commission\"), (doc) => {\n  //       setTableAdmin(doc.data().cdf);\n  //     });\n  //     await onSnapshot(doc(db, \"agents\", \"commission\"), (doc) => {\n  //       setTableFrais(doc.data().cdf);\n  //     });\n  //     await onSnapshot(doc(db, \"muungano\", \"upgrade\"), (doc) => {\n  //       setTableUpgrade(doc.data().cdf);\n  //     });\n  //   } catch {\n  //     window.console.log('Erreur disponible');\n  //   }\n  // }, []);\n\n\n  const onSubmit = async data => {// // Checked if value code is length valid\n    // if (data.code.length != 6 || pin != data.code || pin == '000000' || soldeMain <= 2000) {\n    //   setOpen(true);\n    //   reset();\n    // } else {\n    //   const sendUser = first.toLowerCase() + ' ' + last.toLowerCase();\n    //   const getUser = getfirst.toLowerCase() + ' ' + getlast.toLowerCase();\n    //   if (state == \"agent\" && getstate == \"agent\") {\n    //     window.localStorage.setItem('@ª©##', JSON.stringify(false));\n    //     window.localStorage.setItem('@cost##', JSON.stringify(true));\n    //     hashTrue = false;\n    //     prixHash = JSON.parse(window.localStorage.getItem('@solde!#!'));\n    //     let soldeAgent = Number(tableAgent[nowField]) + JSON.parse(window.localStorage.getItem('@solde!#!'));\n    //     let soldeUpgrade = Number(tableUpgrade[nowField]) + JSON.parse(window.localStorage.getItem('@solde!#!'));\n    //     let soldeAdminFrais = Number(tableAdmin[nowField]) + JSON.parse(window.localStorage.getItem('@frais!#!'));\n    //     let arrayAgent = tableAgent;\n    //     let arrayUpgrade = tableUpgrade;\n    //     let arrayAdmin = tableAdmin;\n    //     for (let i = now; i <= 31; i++) {\n    //       arrayAgent[i] = soldeAgent;\n    //       arrayUpgrade[i] = soldeUpgrade;\n    //       arrayAdmin[i] = soldeAdminFrais;\n    //     };\n    //     const sendPhone = JSON.parse(window.localStorage.getItem('USER'));\n    //     const getPhone = JSON.parse(window.localStorage.getItem('A@@ph$$&-@#'));\n    //     // const prix = JSON.parse(window.localStorage.getItem('@solde!#!'));\n    //     const unite = JSON.parse(window.localStorage.getItem('@unite!#!'));\n    //     const money = JSON.parse(window.localStorage.getItem('@solde!#!'));\n    //     const frais = JSON.parse(window.localStorage.getItem('@frais!#!'));\n    //     const main = JSON.parse(window.localStorage.getItem('@main!#!'));\n    //     swapInWithDocsAgent(sendPhone, getPhone, sendUser, getUser, main, money, frais, unite, arrayAgent, arrayUpgrade, arrayAdmin);\n    //     navigation('/send-success');\n    //   } else if (state == \"client\" && getstate == \"client\") {\n    //     window.localStorage.setItem('@ª©##', JSON.stringify(false));\n    //     hashTrue = false;\n    //     prixHash = JSON.parse(window.localStorage.getItem('@solde!#!'));\n    //     let soldeClient = Number(tableClient[nowField]) + JSON.parse(window.localStorage.getItem('@solde!#!'));\n    //     let soldeUpgrade = Number(tableUpgrade[nowField]) + JSON.parse(window.localStorage.getItem('@solde!#!'));\n    //     let soldeAdminFrais = Number(tableAdmin[nowField]) + JSON.parse(window.localStorage.getItem('@frais!#!'));\n    //     let arrayClient = tableClient;\n    //     let arrayUpgrade = tableUpgrade;\n    //     let arrayAdmin = tableAdmin;\n    //     for (let i = now; i <= 31; i++) {\n    //       arrayClient[i] = soldeClient;\n    //       arrayUpgrade[i] = soldeUpgrade;\n    //       arrayAdmin[i] = soldeAdminFrais;\n    //     };\n    //     const sendPhone = JSON.parse(window.localStorage.getItem('USER'));\n    //     const getPhone = JSON.parse(window.localStorage.getItem('A@@ph$$&-@#'));\n    //     const money = JSON.parse(window.localStorage.getItem('@solde!#!'));\n    //     const unite = JSON.parse(window.localStorage.getItem('@unite!#!'));\n    //     const frais = JSON.parse(window.localStorage.getItem('@frais!#!'));\n    //     const main = JSON.parse(window.localStorage.getItem('@main!#!'));\n    //     isSwapInWithClientToClient(sendPhone, getPhone, sendUser, getUser, main, money, frais, unite, arrayClient, arrayUpgrade, arrayAdmin);\n    //     navigation('/send-success');\n    //   } else {\n    //     if (state == \"agent\") {\n    //       window.localStorage.setItem('@ª©##', JSON.stringify(false));\n    //       hashTrue = false;\n    //       prixHash = JSON.parse(window.localStorage.getItem('@solde!#!'));\n    //       let soldeAgent = Number(tableAgent[nowField]) + JSON.parse(window.localStorage.getItem('@solde!#!'));\n    //       let soldeUpgrade = Number(tableUpgrade[nowField]) + JSON.parse(window.localStorage.getItem('@solde!#!'));\n    //       let arrayAgent = tableAgent;\n    //       let arrayUpgrade = tableUpgrade;\n    //       for (let i = now; i <= 31; i++) {\n    //         arrayAgent[i] = soldeAgent;\n    //         arrayUpgrade[i] = soldeUpgrade;\n    //       };\n    //       const sendPhone = JSON.parse(window.localStorage.getItem('USER'));\n    //       const getPhone = JSON.parse(window.localStorage.getItem('A@@ph$$&-@#'));\n    //       const prix = JSON.parse(window.localStorage.getItem('@solde!#!'));\n    //       const unite = JSON.parse(window.localStorage.getItem('@unite!#!'));\n    //       swapInWithDocsAgentToClient(sendPhone, getPhone, sendUser, getUser, prix, unite, arrayAgent, arrayUpgrade);\n    //       navigation('/send-success');\n    //     } else {\n    //       window.localStorage.setItem('@ª©##', JSON.stringify(false));\n    //       hashTrue = false;\n    //       prixHash = JSON.parse(window.localStorage.getItem('@solde!#!'));\n    //       let soldeClient = Number(tableClient[nowField]) + JSON.parse(window.localStorage.getItem('@solde!#!'));\n    //       let soldeUpgrade = Number(tableUpgrade[nowField]) + JSON.parse(window.localStorage.getItem('@solde!#!'));\n    //       let soldeAdminFrais = Number(tableAdmin[nowField]) + ((JSON.parse(window.localStorage.getItem('@frais!#!')) * 70) / 100);\n    //       let soldeAgentFrais = Number(tableFrais[nowField]) + ((JSON.parse(window.localStorage.getItem('@frais!#!')) * 30) / 100);\n    //       let arrayClient = tableClient;\n    //       let arrayUpgrade = tableUpgrade;\n    //       let arrayAdmin = tableAdmin;\n    //       let arrayAgent = tableFrais;\n    //       for (let i = now; i <= 31; i++) {\n    //         arrayClient[i] = soldeClient;\n    //         arrayUpgrade[i] = soldeUpgrade;\n    //         arrayAdmin[i] = Math.floor(soldeAdminFrais);\n    //         arrayAgent[i] = Math.floor(soldeAgentFrais);\n    //       };\n    //       const sendPhone = JSON.parse(window.localStorage.getItem('USER'));\n    //       const getPhone = JSON.parse(window.localStorage.getItem('A@@ph$$&-@#'));\n    //       const money = JSON.parse(window.localStorage.getItem('@solde!#!'));\n    //       const prix = JSON.parse(window.localStorage.getItem('@solde!#!'));\n    //       const unite = JSON.parse(window.localStorage.getItem('@unite!#!'));\n    //       const frais = JSON.parse(window.localStorage.getItem('@frais!#!'));\n    //       const main = JSON.parse(window.localStorage.getItem('@main!#!'));\n    //       isSwapInWithClientToAgent(sendPhone, getPhone, sendUser, getUser, main, money, frais, unite, arrayClient, arrayUpgrade, arrayAdmin, arrayAgent);\n    //       navigation('/send-success');\n    //     }\n    //   }\n    // }\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    onSubmit: handleSubmit(onSubmit),\n    children: [/*#__PURE__*/_jsxDEV(FormControl, {\n      sx: {\n        width: '100%'\n      },\n      variant: \"standard\",\n      children: [/*#__PURE__*/_jsxDEV(InputLabel, {\n        htmlFor: \"standard-adornment-password\",\n        children: \"Pin actuel\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 336,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(Controller, {\n        name: \"code\",\n        control: control,\n        render: ({\n          field\n        }) => /*#__PURE__*/_jsxDEV(Input, {\n          id: \"standard-adornment-password\",\n          autocomplete: \"new-password\",\n          ...field,\n          type: showPassword ? 'text' : 'password',\n          endAdornment: /*#__PURE__*/_jsxDEV(InputAdornment, {\n            position: \"end\",\n            children: /*#__PURE__*/_jsxDEV(IconButton, {\n              \"aria-label\": \"toggle password visibility\",\n              onClick: handleClickShowPassword,\n              onMouseDown: handleMouseDownPassword,\n              children: showPassword ? /*#__PURE__*/_jsxDEV(VisibilityOff, {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 357,\n                columnNumber: 27\n              }, this) : /*#__PURE__*/_jsxDEV(Visibility, {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 357,\n                columnNumber: 47\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 352,\n              columnNumber: 10\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 350,\n            columnNumber: 9\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 343,\n          columnNumber: 7\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 338,\n        columnNumber: 5\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 332,\n      columnNumber: 4\n    }, this), /*#__PURE__*/_jsxDEV(Dialog, {\n      fullWidth: fullWidth,\n      maxWidth: maxWidth,\n      open: open,\n      onClose: handleClose,\n      children: [/*#__PURE__*/_jsxDEV(DialogTitle, {\n        children: \"MuunganoMoney\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 374,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(DialogContent, {\n        children: /*#__PURE__*/_jsxDEV(DialogContentText, {\n          children: \"Le code PIN a \\xE9t\\xE9 v\\xE9rifi\\xE9, il est incorrect\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 377,\n          columnNumber: 6\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 375,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(DialogActions, {\n        children: /*#__PURE__*/_jsxDEV(Button, {\n          onClick: handleClose,\n          children: \"Fermer\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 383,\n          columnNumber: 6\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 382,\n        columnNumber: 5\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 368,\n      columnNumber: 4\n    }, this), /*#__PURE__*/_jsxDEV(Dialog, {\n      fullWidth: fullWidth,\n      maxWidth: maxWidth,\n      open: cancel,\n      onClose: cancelClose,\n      children: [/*#__PURE__*/_jsxDEV(DialogTitle, {\n        children: \"MuunganoMoney\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 393,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(DialogContent, {\n        children: /*#__PURE__*/_jsxDEV(DialogContentText, {\n          children: \"Des frais sont appliqu\\xE9s \\xE0 cette transaction. Merci de choisir Muunganomoney\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 396,\n          columnNumber: 6\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 394,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(DialogActions, {\n        children: /*#__PURE__*/_jsxDEV(Button, {\n          onClick: cancelClose,\n          children: \"Fermer\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 402,\n          columnNumber: 6\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 401,\n        columnNumber: 5\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 387,\n      columnNumber: 4\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"Btn\",\n      children: \"Envoi\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 406,\n      columnNumber: 4\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 330,\n    columnNumber: 3\n  }, this);\n};\n\n_s(FormInput, \"+LqSlDg2o9/DYXxkhHP1hJj7WIg=\", false, function () {\n  return [useNavigate, useForm];\n});\n\n_c4 = FormInput;\n\nasync function swapInWithDocsAgent(sendPhone, getPhone, sendUser, getUser, main, money, frais, unite, arrayAgentMoney, upgrade, adminFrais) {\n  let time = moment().format('LLL');\n  let send = {\n    date: time,\n    solde: `${money} ${unite}`,\n    phone: getPhone,\n    user: getUser,\n    type: 'envoyer'\n  };\n  let get = {\n    date: time,\n    solde: `${money} ${unite}`,\n    phone: sendPhone,\n    user: sendUser,\n    type: 'réussi'\n  };\n  const sendRef = doc(db, \"agent\", sendPhone);\n  await updateDoc(sendRef, {\n    cdf: main,\n    money: money,\n    user: getUser,\n    unite: unite,\n    phoneclient: getPhone,\n    delay: moment().format(),\n    swap: arrayUnion(send)\n  });\n  const getRef = doc(db, \"agent\", getPhone);\n  await updateDoc(getRef, {\n    cdf: increment(money),\n    money: money,\n    user: sendUser,\n    unite: unite,\n    phoneclient: sendPhone,\n    delay: moment().format(),\n    swap: arrayUnion(get)\n  });\n  const agentsemoneyRef = doc(db, \"agents\", \"emoney\");\n  await updateDoc(agentsemoneyRef, {\n    cdf: arrayAgentMoney\n  });\n  const upgradeRef = doc(db, \"muungano\", \"upgrade\");\n  await updateDoc(upgradeRef, {\n    cdf: upgrade\n  });\n  const adminRef = doc(db, \"muunganomoney\", \"money\");\n  await updateDoc(adminRef, {\n    spredcdf: increment(Math.floor(Number(frais)))\n  });\n  const fraisRef = doc(db, \"muungano\", \"commission\");\n  await updateDoc(fraisRef, {\n    cdf: adminFrais\n  });\n}\n\n;\n\nasync function swapInWithDocsAgentToClient(sendPhone, getPhone, sendUser, getUser, prix, unite, arrayAgentMoney, upgrade) {\n  let time = moment().format('LLL');\n  let send = {\n    date: time,\n    solde: `${prix} ${unite}`,\n    phone: getPhone,\n    user: getUser,\n    type: 'envoyer'\n  };\n  let get = {\n    date: time,\n    solde: `${prix} ${unite}`,\n    phone: sendPhone,\n    user: sendUser,\n    type: 'réussi'\n  };\n  const sendRef = doc(db, \"agent\", sendPhone);\n  await updateDoc(sendRef, {\n    cdf: increment(-prix),\n    money: prix,\n    user: getUser,\n    unite: unite,\n    phoneclient: getPhone,\n    delay: moment().format(),\n    swap: arrayUnion(send)\n  });\n  const getRef = doc(db, \"client\", getPhone);\n  await updateDoc(getRef, {\n    cdf: increment(prix),\n    money: prix,\n    user: sendUser,\n    unite: unite,\n    phoneclient: sendPhone,\n    delay: moment().format(),\n    swap: arrayUnion(get)\n  });\n  const agentsemoneyRef = doc(db, \"agents\", \"emoney\");\n  await updateDoc(agentsemoneyRef, {\n    cdf: arrayAgentMoney\n  });\n  const upgradeRef = doc(db, \"muungano\", \"upgrade\");\n  await updateDoc(upgradeRef, {\n    cdf: upgrade\n  });\n}\n\n;\n\nasync function isSwapInWithClientToAgent(sendPhone, getPhone, sendUser, getUser, main, money, frais, unite, arrayClientMoney, upgrade, adminFrais, agentFrais) {\n  let time = moment().format('LLL');\n  let send = {\n    date: time,\n    solde: `${money} ${unite}`,\n    phone: getPhone,\n    user: getUser,\n    type: 'envoyer'\n  };\n  let get = {\n    date: time,\n    solde: `${money} ${unite}`,\n    phone: sendPhone,\n    user: sendUser,\n    type: 'réussi'\n  };\n  let fraisAdmin = frais * 70 / 100;\n  let fraisAgent = frais * 30 / 100;\n  const sendRef = doc(db, \"client\", sendPhone);\n  await updateDoc(sendRef, {\n    cdf: main,\n    money: money,\n    user: getUser,\n    unite: unite,\n    phoneclient: getPhone,\n    delay: moment().format(),\n    swap: arrayUnion(send)\n  });\n  const getRef = doc(db, \"agent\", getPhone);\n  await updateDoc(getRef, {\n    cdf: increment(money),\n    money: money,\n    user: sendUser,\n    unite: unite,\n    thriftcdf: increment(fraisAgent),\n    phoneclient: sendPhone,\n    delay: moment().format(),\n    swap: arrayUnion(get)\n  });\n  const adminRef = doc(db, \"muunganomoney\", \"money\");\n  await updateDoc(adminRef, {\n    spredcdf: increment(fraisAdmin)\n  });\n  const agentsemoneyRef = doc(db, \"clients\", \"emoney\");\n  await updateDoc(agentsemoneyRef, {\n    cdf: arrayClientMoney\n  });\n  const upgradeRef = doc(db, \"muungano\", \"upgrade\");\n  await updateDoc(upgradeRef, {\n    cdf: upgrade\n  });\n  const agentFraisRef = doc(db, \"agents\", \"commission\");\n  await updateDoc(agentFraisRef, {\n    cdf: agentFrais\n  });\n  const fraisRef = doc(db, \"muungano\", \"commission\");\n  await updateDoc(fraisRef, {\n    cdf: adminFrais\n  });\n}\n\n;\n\nasync function isSwapInWithClientToClient(sendPhone, getPhone, sendUser, getUser, main, money, frais, unite, arrayClientMoney, upgrade, adminFrais) {\n  let time = moment().format('LLL');\n  let send = {\n    date: time,\n    solde: `${money} ${unite}`,\n    phone: getPhone,\n    user: getUser,\n    type: 'envoyer'\n  };\n  let get = {\n    date: time,\n    solde: `${money} ${unite}`,\n    phone: sendPhone,\n    user: sendUser,\n    type: 'réussi'\n  };\n  const sendRef = doc(db, \"client\", sendPhone);\n  await updateDoc(sendRef, {\n    cdf: main,\n    money: money,\n    user: getUser,\n    unite: unite,\n    phoneclient: getPhone,\n    delay: moment().format(),\n    swap: arrayUnion(send)\n  });\n  const getRef = doc(db, \"client\", getPhone);\n  await updateDoc(getRef, {\n    cdf: increment(money),\n    money: money,\n    user: sendUser,\n    unite: unite,\n    phoneclient: sendPhone,\n    delay: moment().format(),\n    swap: arrayUnion(get)\n  });\n  const adminRef = doc(db, \"muunganomoney\", \"money\");\n  await updateDoc(adminRef, {\n    spredcdf: increment(Math.floor(Number(frais)))\n  });\n  const agentsemoneyRef = doc(db, \"clients\", \"emoney\");\n  await updateDoc(agentsemoneyRef, {\n    cdf: arrayClientMoney\n  });\n  const upgradeRef = doc(db, \"muungano\", \"upgrade\");\n  await updateDoc(upgradeRef, {\n    cdf: upgrade\n  });\n  const fraisRef = doc(db, \"muungano\", \"commission\");\n  await updateDoc(fraisRef, {\n    cdf: adminFrais\n  });\n}\n\n;\n\nvar _c, _c2, _c3, _c4;\n\n$RefreshReg$(_c, \"ReturnInput\");\n$RefreshReg$(_c2, \"SreenLarge\");\n$RefreshReg$(_c3, \"ScreenSmall\");\n$RefreshReg$(_c4, \"FormInput\");","map":{"version":3,"sources":["/Users/USER/Desktop/Agent/src/Money/Simple/Input.js"],"names":["React","Media","useForm","Controller","useNavigate","doc","getDocs","collection","getDoc","updateDoc","increment","onSnapshot","arrayUnion","db","REturnQuOte","Button","Dialog","DialogActions","DialogContent","DialogTitle","DialogContentText","IconButton","Input","InputLabel","InputAdornment","FormControl","Visibility","VisibilityOff","moment","nowField","date","now","prixHash","hashTrue","ReturnInput","small","medium","large","matches","SreenLarge","ScreenSmall","FormInput","pushDocs","Array","verifierSend","verifierGet","navigation","register","handleSubmit","reset","control","tableClient","setTableClient","useState","tableAgent","setTableAgent","tableUpgrade","setTableUpgrade","tableAdmin","setTableAdmin","tableFrais","setTableFrais","pin","setPin","state","setState","first","setFirst","last","setLast","soldeMain","setSoldeMain","getstate","setGetstate","getfirst","setGetFirst","getlast","setGetLast","open","setOpen","cancel","setCancel","click","setClick","fullWidth","setFullWidth","maxWidth","setMaxWidth","showPassword","setShowPassword","handleClickShowPassword","show","handleMouseDownPassword","event","preventDefault","handleClose","cancelClose","onSubmit","data","width","field","swapInWithDocsAgent","sendPhone","getPhone","sendUser","getUser","main","money","frais","unite","arrayAgentMoney","upgrade","adminFrais","time","format","send","solde","phone","user","type","get","sendRef","cdf","phoneclient","delay","swap","getRef","agentsemoneyRef","upgradeRef","adminRef","spredcdf","Math","floor","Number","fraisRef","swapInWithDocsAgentToClient","prix","isSwapInWithClientToAgent","arrayClientMoney","agentFrais","fraisAdmin","fraisAgent","thriftcdf","agentFraisRef","isSwapInWithClientToClient"],"mappings":"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","sourcesContent":["import React from 'react';\nimport './Input.css';\nimport Media from 'react-media';\nimport { useForm, Controller } from 'react-hook-form';\nimport { useNavigate } from 'react-router-dom';\nimport { doc, getDocs, collection, getDoc, updateDoc, increment, onSnapshot, arrayUnion } from \"firebase/firestore\";\nimport { db } from '../../firebase';\nimport REturnQuOte from './Quote';\n\nimport Button from '@mui/material/Button';\nimport Dialog from '@mui/material/Dialog';\nimport DialogActions from '@mui/material/DialogActions';\nimport DialogContent from '@mui/material/DialogContent';\nimport DialogTitle from '@mui/material/DialogTitle';\nimport DialogContentText from '@mui/material/DialogContentText';\n\nimport IconButton from '@mui/material/IconButton';\nimport Input from '@mui/material/Input';\nimport InputLabel from '@mui/material/InputLabel';\nimport InputAdornment from '@mui/material/InputAdornment';\nimport FormControl from '@mui/material/FormControl';\nimport Visibility from '@mui/icons-material/Visibility';\nimport VisibilityOff from '@mui/icons-material/VisibilityOff';\n\nimport moment from 'moment';\n\nexport let nowField = moment().date();\nexport let now = moment().date();\n\nexport let prixHash = 0;\nexport let hashTrue = true;\n\n\n// Input Field Component \nexport default function ReturnInput() {\n return (\n  <Media\n   queries={{\n    small: '(max-width: 599px)',\n    medium: '(min-width: 600px) and (max-width:1199px)',\n    large: '(min-width: 1200px)',\n   }}>\n   {matches => (\n    <>\n     {matches.small && <ScreenSmall />}\n     {matches.medium && <SreenLarge />}\n     {matches.large && <SreenLarge />}\n    </>\n   )}\n  </Media>\n );\n};\nexport const SreenLarge = () => (\n <div className='wrp-form-input-pin'>\n  <REturnQuOte />\n  <FormInput />\n\n </div>\n);\nexport const ScreenSmall = () => (\n <div className='wrp-form-input-pin'>\n  <REturnQuOte />\n  <FormInput />\n </div>\n);\n\nexport const FormInput = () => {\n\n let pushDocs = new Array();\n let verifierSend;\n let verifierGet;\n\n const navigation = useNavigate();\n const { register, handleSubmit, reset, control } = useForm();\n\n //  order notebook\n const [tableClient, setTableClient] = React.useState();\n const [tableAgent, setTableAgent] = React.useState();\n const [tableUpgrade, setTableUpgrade] = React.useState();\n const [tableAdmin, setTableAdmin] = React.useState();\n const [tableFrais, setTableFrais] = React.useState();\n\n // send React useState  \n const [pin, setPin] = React.useState(null);\n const [state, setState] = React.useState(null);\n const [first, setFirst] = React.useState('');\n const [last, setLast] = React.useState('');\n const [soldeMain, setSoldeMain] = React.useState(null);\n\n // getting React useState\n const [getstate, setGetstate] = React.useState(null);\n const [getfirst, setGetFirst] = React.useState('');\n const [getlast, setGetLast] = React.useState('');\n\n\n const [open, setOpen] = React.useState(false);\n const [cancel, setCancel] = React.useState(false);\n const [click, setClick] = React.useState(false);\n\n const [fullWidth, setFullWidth] = React.useState(true);\n const [maxWidth, setMaxWidth] = React.useState('sm');\n\n const [showPassword, setShowPassword] = React.useState(false);\n\n const handleClickShowPassword = () => setShowPassword((show) => !show);\n const handleMouseDownPassword = (event) => {\n  event.preventDefault();\n };\n\n const handleClose = () => {\n  setOpen(false);\n };\n const cancelClose = () => {\n  setCancel(false);\n  setClick(true);\n };\n\n\n // React.useEffect(async () => {\n\n //   const querySnapshot = await getDocs(collection(db, \"client\"));\n //   querySnapshot.forEach((doc) => {\n //     pushDocs.push(doc.id);\n //   });\n\n //   verifierSend = pushDocs.some(value => value == JSON.parse(window.localStorage.getItem('USER')));\n //   verifierGet = pushDocs.some(value => value == JSON.parse(window.localStorage.getItem('A@@ph$$&-@#')));\n\n //   const unsub = onSnapshot(doc(db, verifierSend ? \"client\" : \"agent\", JSON.parse(window.localStorage.getItem('USER'))), (doc) => {\n //     setPin(doc.data().code);\n //     setState(doc.data().state);\n //     setFirst(doc.data().firstname);\n //     setLast(doc.data().lastname);\n //     setSoldeMain(doc.data().cdf);\n //   });\n\n //   const getRef = doc(db, verifierGet ? \"client\" : \"agent\", JSON.parse(window.localStorage.getItem('A@@ph$$&-@#')));\n //   const getSnap = await getDoc(getRef);\n\n //   if (getSnap.exists()) {\n //     setGetstate(getSnap.data().state);\n //     setGetFirst(getSnap.data().firstname);\n //     setGetLast(getSnap.data().lastname);\n //   };\n\n\n //   try {\n //     await onSnapshot(doc(db, \"clients\", \"emoney\"), (doc) => {\n //       setTableClient(doc.data().cdf);\n //     });\n //     await onSnapshot(doc(db, \"agents\", \"emoney\"), (doc) => {\n //       setTableAgent(doc.data().cdf);\n //     });\n //     await onSnapshot(doc(db, \"muungano\", \"commission\"), (doc) => {\n //       setTableAdmin(doc.data().cdf);\n //     });\n\n //     await onSnapshot(doc(db, \"agents\", \"commission\"), (doc) => {\n //       setTableFrais(doc.data().cdf);\n //     });\n\n //     await onSnapshot(doc(db, \"muungano\", \"upgrade\"), (doc) => {\n //       setTableUpgrade(doc.data().cdf);\n //     });\n\n //   } catch {\n //     window.console.log('Erreur disponible');\n //   }\n\n // }, []);\n\n\n\n const onSubmit = async (data) => {\n\n  // // Checked if value code is length valid\n  // if (data.code.length != 6 || pin != data.code || pin == '000000' || soldeMain <= 2000) {\n\n  //   setOpen(true);\n  //   reset();\n\n  // } else {\n\n  //   const sendUser = first.toLowerCase() + ' ' + last.toLowerCase();\n  //   const getUser = getfirst.toLowerCase() + ' ' + getlast.toLowerCase();\n\n  //   if (state == \"agent\" && getstate == \"agent\") {\n\n  //     window.localStorage.setItem('@ª©##', JSON.stringify(false));\n  //     window.localStorage.setItem('@cost##', JSON.stringify(true));\n\n  //     hashTrue = false;\n  //     prixHash = JSON.parse(window.localStorage.getItem('@solde!#!'));\n\n  //     let soldeAgent = Number(tableAgent[nowField]) + JSON.parse(window.localStorage.getItem('@solde!#!'));\n  //     let soldeUpgrade = Number(tableUpgrade[nowField]) + JSON.parse(window.localStorage.getItem('@solde!#!'));\n  //     let soldeAdminFrais = Number(tableAdmin[nowField]) + JSON.parse(window.localStorage.getItem('@frais!#!'));\n\n  //     let arrayAgent = tableAgent;\n  //     let arrayUpgrade = tableUpgrade;\n  //     let arrayAdmin = tableAdmin;\n\n  //     for (let i = now; i <= 31; i++) {\n  //       arrayAgent[i] = soldeAgent;\n  //       arrayUpgrade[i] = soldeUpgrade;\n  //       arrayAdmin[i] = soldeAdminFrais;\n\n  //     };\n\n  //     const sendPhone = JSON.parse(window.localStorage.getItem('USER'));\n  //     const getPhone = JSON.parse(window.localStorage.getItem('A@@ph$$&-@#'));\n  //     // const prix = JSON.parse(window.localStorage.getItem('@solde!#!'));\n  //     const unite = JSON.parse(window.localStorage.getItem('@unite!#!'));\n  //     const money = JSON.parse(window.localStorage.getItem('@solde!#!'));\n  //     const frais = JSON.parse(window.localStorage.getItem('@frais!#!'));\n  //     const main = JSON.parse(window.localStorage.getItem('@main!#!'));\n\n  //     swapInWithDocsAgent(sendPhone, getPhone, sendUser, getUser, main, money, frais, unite, arrayAgent, arrayUpgrade, arrayAdmin);\n  //     navigation('/send-success');\n\n  //   } else if (state == \"client\" && getstate == \"client\") {\n\n  //     window.localStorage.setItem('@ª©##', JSON.stringify(false));\n\n  //     hashTrue = false;\n  //     prixHash = JSON.parse(window.localStorage.getItem('@solde!#!'));\n\n  //     let soldeClient = Number(tableClient[nowField]) + JSON.parse(window.localStorage.getItem('@solde!#!'));\n  //     let soldeUpgrade = Number(tableUpgrade[nowField]) + JSON.parse(window.localStorage.getItem('@solde!#!'));\n  //     let soldeAdminFrais = Number(tableAdmin[nowField]) + JSON.parse(window.localStorage.getItem('@frais!#!'));\n\n  //     let arrayClient = tableClient;\n  //     let arrayUpgrade = tableUpgrade;\n  //     let arrayAdmin = tableAdmin;\n\n  //     for (let i = now; i <= 31; i++) {\n  //       arrayClient[i] = soldeClient;\n  //       arrayUpgrade[i] = soldeUpgrade;\n  //       arrayAdmin[i] = soldeAdminFrais;\n\n  //     };\n\n  //     const sendPhone = JSON.parse(window.localStorage.getItem('USER'));\n  //     const getPhone = JSON.parse(window.localStorage.getItem('A@@ph$$&-@#'));\n  //     const money = JSON.parse(window.localStorage.getItem('@solde!#!'));\n  //     const unite = JSON.parse(window.localStorage.getItem('@unite!#!'));\n  //     const frais = JSON.parse(window.localStorage.getItem('@frais!#!'));\n  //     const main = JSON.parse(window.localStorage.getItem('@main!#!'));\n\n  //     isSwapInWithClientToClient(sendPhone, getPhone, sendUser, getUser, main, money, frais, unite, arrayClient, arrayUpgrade, arrayAdmin);\n  //     navigation('/send-success');\n\n\n  //   } else {\n\n  //     if (state == \"agent\") {\n\n  //       window.localStorage.setItem('@ª©##', JSON.stringify(false));\n\n  //       hashTrue = false;\n  //       prixHash = JSON.parse(window.localStorage.getItem('@solde!#!'));\n\n  //       let soldeAgent = Number(tableAgent[nowField]) + JSON.parse(window.localStorage.getItem('@solde!#!'));\n  //       let soldeUpgrade = Number(tableUpgrade[nowField]) + JSON.parse(window.localStorage.getItem('@solde!#!'));\n\n  //       let arrayAgent = tableAgent;\n  //       let arrayUpgrade = tableUpgrade;\n\n  //       for (let i = now; i <= 31; i++) {\n  //         arrayAgent[i] = soldeAgent;\n  //         arrayUpgrade[i] = soldeUpgrade;\n  //       };\n\n  //       const sendPhone = JSON.parse(window.localStorage.getItem('USER'));\n  //       const getPhone = JSON.parse(window.localStorage.getItem('A@@ph$$&-@#'));\n  //       const prix = JSON.parse(window.localStorage.getItem('@solde!#!'));\n  //       const unite = JSON.parse(window.localStorage.getItem('@unite!#!'));\n\n  //       swapInWithDocsAgentToClient(sendPhone, getPhone, sendUser, getUser, prix, unite, arrayAgent, arrayUpgrade);\n\n\n  //       navigation('/send-success');\n\n\n  //     } else {\n\n  //       window.localStorage.setItem('@ª©##', JSON.stringify(false));\n\n  //       hashTrue = false;\n  //       prixHash = JSON.parse(window.localStorage.getItem('@solde!#!'));\n\n  //       let soldeClient = Number(tableClient[nowField]) + JSON.parse(window.localStorage.getItem('@solde!#!'));\n  //       let soldeUpgrade = Number(tableUpgrade[nowField]) + JSON.parse(window.localStorage.getItem('@solde!#!'));\n  //       let soldeAdminFrais = Number(tableAdmin[nowField]) + ((JSON.parse(window.localStorage.getItem('@frais!#!')) * 70) / 100);\n  //       let soldeAgentFrais = Number(tableFrais[nowField]) + ((JSON.parse(window.localStorage.getItem('@frais!#!')) * 30) / 100);\n\n  //       let arrayClient = tableClient;\n  //       let arrayUpgrade = tableUpgrade;\n  //       let arrayAdmin = tableAdmin;\n  //       let arrayAgent = tableFrais;\n\n  //       for (let i = now; i <= 31; i++) {\n  //         arrayClient[i] = soldeClient;\n  //         arrayUpgrade[i] = soldeUpgrade;\n  //         arrayAdmin[i] = Math.floor(soldeAdminFrais);\n  //         arrayAgent[i] = Math.floor(soldeAgentFrais);\n\n  //       };\n\n  //       const sendPhone = JSON.parse(window.localStorage.getItem('USER'));\n  //       const getPhone = JSON.parse(window.localStorage.getItem('A@@ph$$&-@#'));\n  //       const money = JSON.parse(window.localStorage.getItem('@solde!#!'));\n  //       const prix = JSON.parse(window.localStorage.getItem('@solde!#!'));\n  //       const unite = JSON.parse(window.localStorage.getItem('@unite!#!'));\n  //       const frais = JSON.parse(window.localStorage.getItem('@frais!#!'));\n  //       const main = JSON.parse(window.localStorage.getItem('@main!#!'));\n\n  //       isSwapInWithClientToAgent(sendPhone, getPhone, sendUser, getUser, main, money, frais, unite, arrayClient, arrayUpgrade, arrayAdmin, arrayAgent);\n  //       navigation('/send-success');\n  //     }\n\n  //   }\n\n  // }\n\n\n };\n\n return (\n  <form onSubmit={handleSubmit(onSubmit)}>\n\n   <FormControl\n    sx={{ width: '100%' }}\n\n    variant=\"standard\">\n    <InputLabel htmlFor=\"standard-adornment-password\">Pin actuel</InputLabel>\n\n    <Controller\n     name=\"code\"\n     control={control}\n     render={({ field }) =>\n\n      <Input\n       id=\"standard-adornment-password\"\n       autocomplete=\"new-password\"\n       {...field}\n       type={showPassword ? 'text' : 'password'}\n\n       endAdornment={\n        <InputAdornment position=\"end\">\n\n         <IconButton\n          aria-label=\"toggle password visibility\"\n          onClick={handleClickShowPassword}\n          onMouseDown={handleMouseDownPassword}\n         >\n          {showPassword ? <VisibilityOff /> : <Visibility />}\n         </IconButton>\n\n        </InputAdornment>\n       }\n\n      />}\n    />\n\n   </FormControl>\n\n   <Dialog\n    fullWidth={fullWidth}\n    maxWidth={maxWidth}\n    open={open}\n    onClose={handleClose}>\n\n    <DialogTitle>MuunganoMoney</DialogTitle>\n    <DialogContent>\n\n     <DialogContentText>\n      Le code PIN a été vérifié, il est incorrect\n     </DialogContentText>\n\n    </DialogContent>\n    <DialogActions>\n     <Button onClick={handleClose}>Fermer</Button>\n    </DialogActions>\n   </Dialog>\n\n   <Dialog\n    fullWidth={fullWidth}\n    maxWidth={maxWidth}\n    open={cancel}\n    onClose={cancelClose}>\n\n    <DialogTitle>MuunganoMoney</DialogTitle>\n    <DialogContent>\n\n     <DialogContentText>\n      Des frais sont appliqués à cette transaction. Merci de choisir Muunganomoney\n     </DialogContentText>\n\n    </DialogContent>\n    <DialogActions>\n     <Button onClick={cancelClose}>Fermer</Button>\n    </DialogActions>\n   </Dialog>\n\n   <button className='Btn'>Envoi</button>\n  </form>\n )\n};\n\nasync function swapInWithDocsAgent(sendPhone, getPhone, sendUser, getUser, main, money, frais, unite, arrayAgentMoney, upgrade, adminFrais) {\n\n let time = moment().format('LLL');\n let send = { date: time, solde: `${money} ${unite}`, phone: getPhone, user: getUser, type: 'envoyer' }\n let get = { date: time, solde: `${money} ${unite}`, phone: sendPhone, user: sendUser, type: 'réussi' }\n\n\n const sendRef = doc(db, \"agent\", sendPhone);\n await updateDoc(sendRef, {\n  cdf: (main),\n  money: money,\n  user: getUser,\n  unite: unite,\n  phoneclient: getPhone,\n  delay: moment().format(),\n  swap: arrayUnion(send)\n });\n\n const getRef = doc(db, \"agent\", getPhone);\n await updateDoc(getRef, {\n  cdf: increment(money),\n  money: money,\n  user: sendUser,\n  unite: unite,\n  phoneclient: sendPhone,\n  delay: moment().format(),\n  swap: arrayUnion(get)\n });\n\n const agentsemoneyRef = doc(db, \"agents\", \"emoney\");\n await updateDoc(agentsemoneyRef, {\n  cdf: arrayAgentMoney,\n });\n\n const upgradeRef = doc(db, \"muungano\", \"upgrade\");\n await updateDoc(upgradeRef, {\n  cdf: upgrade,\n });\n\n const adminRef = doc(db, \"muunganomoney\", \"money\");\n await updateDoc(adminRef, {\n  spredcdf: increment(Math.floor(Number(frais)))\n });\n\n const fraisRef = doc(db, \"muungano\", \"commission\");\n await updateDoc(fraisRef, {\n  cdf: adminFrais,\n });\n\n};\nasync function swapInWithDocsAgentToClient(sendPhone, getPhone, sendUser, getUser, prix, unite, arrayAgentMoney, upgrade) {\n\n let time = moment().format('LLL');\n let send = { date: time, solde: `${prix} ${unite}`, phone: getPhone, user: getUser, type: 'envoyer' }\n let get = { date: time, solde: `${prix} ${unite}`, phone: sendPhone, user: sendUser, type: 'réussi' }\n\n\n const sendRef = doc(db, \"agent\", sendPhone);\n await updateDoc(sendRef, {\n  cdf: increment(-(prix)),\n  money: prix,\n  user: getUser,\n  unite: unite,\n  phoneclient: getPhone,\n  delay: moment().format(),\n  swap: arrayUnion(send)\n });\n\n const getRef = doc(db, \"client\", getPhone);\n await updateDoc(getRef, {\n  cdf: increment(prix),\n  money: prix,\n  user: sendUser,\n  unite: unite,\n  phoneclient: sendPhone,\n  delay: moment().format(),\n  swap: arrayUnion(get)\n });\n\n const agentsemoneyRef = doc(db, \"agents\", \"emoney\");\n await updateDoc(agentsemoneyRef, {\n  cdf: arrayAgentMoney,\n });\n\n const upgradeRef = doc(db, \"muungano\", \"upgrade\");\n await updateDoc(upgradeRef, {\n  cdf: upgrade,\n });\n\n};\nasync function isSwapInWithClientToAgent(sendPhone, getPhone, sendUser, getUser, main, money, frais, unite, arrayClientMoney, upgrade, adminFrais, agentFrais) {\n\n let time = moment().format('LLL');\n let send = { date: time, solde: `${money} ${unite}`, phone: getPhone, user: getUser, type: 'envoyer' }\n let get = { date: time, solde: `${money} ${unite}`, phone: sendPhone, user: sendUser, type: 'réussi' }\n\n\n let fraisAdmin = frais * 70 / 100;\n let fraisAgent = frais * 30 / 100;\n\n\n const sendRef = doc(db, \"client\", sendPhone);\n await updateDoc(sendRef, {\n  cdf: (main),\n  money: money,\n  user: getUser,\n  unite: unite,\n  phoneclient: getPhone,\n  delay: moment().format(),\n  swap: arrayUnion(send)\n });\n\n const getRef = doc(db, \"agent\", getPhone);\n await updateDoc(getRef, {\n  cdf: increment(money),\n  money: money,\n  user: sendUser,\n  unite: unite,\n  thriftcdf: increment(fraisAgent),\n  phoneclient: sendPhone,\n  delay: moment().format(),\n  swap: arrayUnion(get)\n });\n\n const adminRef = doc(db, \"muunganomoney\", \"money\");\n await updateDoc(adminRef, {\n  spredcdf: increment(fraisAdmin)\n });\n\n const agentsemoneyRef = doc(db, \"clients\", \"emoney\");\n await updateDoc(agentsemoneyRef, {\n  cdf: arrayClientMoney,\n });\n\n const upgradeRef = doc(db, \"muungano\", \"upgrade\");\n await updateDoc(upgradeRef, {\n  cdf: upgrade,\n });\n\n const agentFraisRef = doc(db, \"agents\", \"commission\");\n await updateDoc(agentFraisRef, {\n  cdf: agentFrais,\n });\n\n const fraisRef = doc(db, \"muungano\", \"commission\");\n await updateDoc(fraisRef, {\n  cdf: adminFrais,\n });\n\n};\nasync function isSwapInWithClientToClient(sendPhone, getPhone, sendUser, getUser, main, money, frais, unite, arrayClientMoney, upgrade, adminFrais) {\n\n let time = moment().format('LLL');\n let send = { date: time, solde: `${money} ${unite}`, phone: getPhone, user: getUser, type: 'envoyer' }\n let get = { date: time, solde: `${money} ${unite}`, phone: sendPhone, user: sendUser, type: 'réussi' }\n\n\n const sendRef = doc(db, \"client\", sendPhone);\n await updateDoc(sendRef, {\n  cdf: (main),\n  money: money,\n  user: getUser,\n  unite: unite,\n  phoneclient: getPhone,\n  delay: moment().format(),\n  swap: arrayUnion(send)\n });\n\n const getRef = doc(db, \"client\", getPhone);\n await updateDoc(getRef, {\n  cdf: increment(money),\n  money: money,\n  user: sendUser,\n  unite: unite,\n  phoneclient: sendPhone,\n  delay: moment().format(),\n  swap: arrayUnion(get)\n });\n\n const adminRef = doc(db, \"muunganomoney\", \"money\");\n await updateDoc(adminRef, {\n  spredcdf: increment(Math.floor(Number(frais)))\n });\n\n const agentsemoneyRef = doc(db, \"clients\", \"emoney\");\n await updateDoc(agentsemoneyRef, {\n  cdf: arrayClientMoney,\n });\n\n const upgradeRef = doc(db, \"muungano\", \"upgrade\");\n await updateDoc(upgradeRef, {\n  cdf: upgrade,\n });\n\n const fraisRef = doc(db, \"muungano\", \"commission\");\n await updateDoc(fraisRef, {\n  cdf: adminFrais,\n });\n\n};\n"]},"metadata":{},"sourceType":"module"}