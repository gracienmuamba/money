{"ast":null,"code":"var _jsxFileName = \"/Users/USER/Desktop/MuunganoMoney/src/Dash/Home/Body/Actif/Date.js\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport './Date.css';\nimport Media from 'react-media';\nimport { phoneX } from '../../../../Sign/Input';\nimport { collection, getDocs, doc, getDoc } from \"firebase/firestore\";\nimport { db } from '../../../../firebase';\nimport moment from 'moment';\nimport 'moment/locale/fr'; // Return Date Component \n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport default function ReturndAte() {\n  return /*#__PURE__*/_jsxDEV(Media, {\n    queries: {\n      small: '(max-width: 599px)',\n      medium: '(min-width: 600px) and (max-width:1199px)',\n      large: '(min-width: 1200px)'\n    },\n    children: matches => /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [matches.small && /*#__PURE__*/_jsxDEV(ScreenSmall, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 23,\n        columnNumber: 24\n      }, this), matches.medium && /*#__PURE__*/_jsxDEV(ScreenLarge, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 24,\n        columnNumber: 25\n      }, this), matches.large && /*#__PURE__*/_jsxDEV(ScreenLarge, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 25,\n        columnNumber: 24\n      }, this)]\n    }, void 0, true)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 15,\n    columnNumber: 3\n  }, this);\n}\n_c = ReturndAte;\n;\nexport const ScreenLarge = () => /*#__PURE__*/_jsxDEV(\"div\", {\n  className: \"wrp-actif-date\",\n  children: /*#__PURE__*/_jsxDEV(ViewText, {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 34,\n    columnNumber: 3\n  }, this)\n}, void 0, false, {\n  fileName: _jsxFileName,\n  lineNumber: 33,\n  columnNumber: 2\n}, this);\n_c2 = ScreenLarge;\nexport const ScreenSmall = () => /*#__PURE__*/_jsxDEV(\"div\", {\n  className: \"wrp-actif-date-sm\",\n  children: /*#__PURE__*/_jsxDEV(ViewText, {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 39,\n    columnNumber: 3\n  }, this)\n}, void 0, false, {\n  fileName: _jsxFileName,\n  lineNumber: 38,\n  columnNumber: 2\n}, this);\n_c3 = ScreenSmall;\nexport const ViewText = () => {\n  _s();\n\n  let pushDocs = new Array();\n  const [time, setTime] = React.useState();\n  React.useEffect(async () => {\n    const querySnapshot = await getDocs(collection(db, \"client\"));\n    querySnapshot.forEach(doc => {\n      pushDocs.push(doc.id);\n    });\n    const verifierCollection = pushDocs.some(value => value == phoneX);\n    const docRef = doc(db, verifierCollection ? \"client\" : \"agent\", phoneX);\n    const docSnap = await getDoc(docRef);\n\n    if (docSnap.exists()) {\n      setTime(docSnap.data().delay);\n    }\n\n    ;\n  }, []);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Date\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 4\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: moment(time).locale('fr').format('LLL')\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 4\n    }, this)]\n  }, void 0, true);\n};\n\n_s(ViewText, \"rkMeZBHX4Eei19CRvWL8taVSCjQ=\");\n\n_c4 = ViewText;\n\nvar _c, _c2, _c3, _c4;\n\n$RefreshReg$(_c, \"ReturndAte\");\n$RefreshReg$(_c2, \"ScreenLarge\");\n$RefreshReg$(_c3, \"ScreenSmall\");\n$RefreshReg$(_c4, \"ViewText\");","map":{"version":3,"sources":["/Users/USER/Desktop/MuunganoMoney/src/Dash/Home/Body/Actif/Date.js"],"names":["React","Media","phoneX","collection","getDocs","doc","getDoc","db","moment","ReturndAte","small","medium","large","matches","ScreenLarge","ScreenSmall","ViewText","pushDocs","Array","time","setTime","useState","useEffect","querySnapshot","forEach","push","id","verifierCollection","some","value","docRef","docSnap","exists","data","delay","locale","format"],"mappings":";;;AACA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAO,YAAP;AACA,OAAOC,KAAP,MAAkB,aAAlB;AACA,SAASC,MAAT,QAAuB,wBAAvB;AACA,SAASC,UAAT,EAAqBC,OAArB,EAA8BC,GAA9B,EAAmCC,MAAnC,QAAiD,oBAAjD;AACA,SAASC,EAAT,QAAmB,sBAAnB;AACA,OAAOC,MAAP,MAAmB,QAAnB;AACA,OAAO,kBAAP,C,CAGA;;;;AACA,eAAe,SAASC,UAAT,GAAsB;AACpC,sBACC,QAAC,KAAD;AACC,IAAA,OAAO,EAAE;AACRC,MAAAA,KAAK,EAAE,oBADC;AAERC,MAAAA,MAAM,EAAE,2CAFA;AAGRC,MAAAA,KAAK,EAAE;AAHC,KADV;AAAA,cAMEC,OAAO,iBACP;AAAA,iBACEA,OAAO,CAACH,KAAR,iBAAiB,QAAC,WAAD;AAAA;AAAA;AAAA;AAAA,cADnB,EAEEG,OAAO,CAACF,MAAR,iBAAkB,QAAC,WAAD;AAAA;AAAA;AAAA;AAAA,cAFpB,EAGEE,OAAO,CAACD,KAAR,iBAAiB,QAAC,WAAD;AAAA;AAAA;AAAA;AAAA,cAHnB;AAAA;AAPF;AAAA;AAAA;AAAA;AAAA,UADD;AAgBA;KAjBuBH,U;AAiBvB;AAED,OAAO,MAAMK,WAAW,GAAG,mBAC1B;AAAK,EAAA,SAAS,EAAC,gBAAf;AAAA,yBACC,QAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AADD;AAAA;AAAA;AAAA;AAAA,QADM;MAAMA,W;AAKb,OAAO,MAAMC,WAAW,GAAG,mBAC1B;AAAK,EAAA,SAAS,EAAC,mBAAf;AAAA,yBACC,QAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AADD;AAAA;AAAA;AAAA;AAAA,QADM;MAAMA,W;AAKb,OAAO,MAAMC,QAAQ,GAAG,MAAM;AAAA;;AAE7B,MAAIC,QAAQ,GAAG,IAAIC,KAAJ,EAAf;AACA,QAAM,CAACC,IAAD,EAAOC,OAAP,IAAkBpB,KAAK,CAACqB,QAAN,EAAxB;AAEArB,EAAAA,KAAK,CAACsB,SAAN,CAAgB,YAAY;AAE3B,UAAMC,aAAa,GAAG,MAAMnB,OAAO,CAACD,UAAU,CAACI,EAAD,EAAK,QAAL,CAAX,CAAnC;AACAgB,IAAAA,aAAa,CAACC,OAAd,CAAuBnB,GAAD,IAAS;AAC9BY,MAAAA,QAAQ,CAACQ,IAAT,CAAcpB,GAAG,CAACqB,EAAlB;AAEA,KAHD;AAKA,UAAMC,kBAAkB,GAAGV,QAAQ,CAACW,IAAT,CAAcC,KAAK,IAAIA,KAAK,IAAI3B,MAAhC,CAA3B;AACA,UAAM4B,MAAM,GAAGzB,GAAG,CAACE,EAAD,EAAKoB,kBAAkB,GAAG,QAAH,GAAc,OAArC,EAA8CzB,MAA9C,CAAlB;AAEA,UAAM6B,OAAO,GAAG,MAAMzB,MAAM,CAACwB,MAAD,CAA5B;;AACA,QAAIC,OAAO,CAACC,MAAR,EAAJ,EAAsB;AACrBZ,MAAAA,OAAO,CAACW,OAAO,CAACE,IAAR,GAAeC,KAAhB,CAAP;AACA;;AAAA;AAED,GAhBD,EAgBG,EAhBH;AAkBA,sBACC;AAAA,4BACC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADD,eAEC;AAAA,gBAAI1B,MAAM,CAACW,IAAD,CAAN,CAAagB,MAAb,CAAoB,IAApB,EAA0BC,MAA1B,CAAiC,KAAjC;AAAJ;AAAA;AAAA;AAAA;AAAA,YAFD;AAAA,kBADD;AAMA,CA7BM;;GAAMpB,Q;;MAAAA,Q","sourcesContent":["\nimport React from 'react';\nimport './Date.css';\nimport Media from 'react-media';\nimport { phoneX } from '../../../../Sign/Input';\nimport { collection, getDocs, doc, getDoc } from \"firebase/firestore\";\nimport { db } from '../../../../firebase';\nimport moment from 'moment';\nimport 'moment/locale/fr';\n\n\n// Return Date Component \nexport default function ReturndAte() {\n return (\n  <Media\n   queries={{\n    small: '(max-width: 599px)',\n    medium: '(min-width: 600px) and (max-width:1199px)',\n    large: '(min-width: 1200px)',\n   }}>\n   {matches => (\n    <>\n     {matches.small && <ScreenSmall />}\n     {matches.medium && <ScreenLarge />}\n     {matches.large && <ScreenLarge />}\n    </>\n   )}\n  </Media>\n )\n};\n\nexport const ScreenLarge = () => (\n <div className='wrp-actif-date'>\n  <ViewText />\n </div>\n);\nexport const ScreenSmall = () => (\n <div className='wrp-actif-date-sm'>\n  <ViewText />\n </div>\n);\nexport const ViewText = () => {\n\n let pushDocs = new Array();\n const [time, setTime] = React.useState();\n\n React.useEffect(async () => {\n\n  const querySnapshot = await getDocs(collection(db, \"client\"));\n  querySnapshot.forEach((doc) => {\n   pushDocs.push(doc.id);\n\n  });\n\n  const verifierCollection = pushDocs.some(value => value == phoneX);\n  const docRef = doc(db, verifierCollection ? \"client\" : \"agent\", phoneX);\n\n  const docSnap = await getDoc(docRef);\n  if (docSnap.exists()) {\n   setTime(docSnap.data().delay);\n  };\n\n }, []);\n\n return (\n  <>\n   <h1>Date</h1>\n   <p>{moment(time).locale('fr').format('LLL')}</p>\n  </>\n );\n};"]},"metadata":{},"sourceType":"module"}