{"ast":null,"code":"var _jsxFileName = \"/Users/USER/Desktop/Money/src/Sign/InputPhone.js\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport './InputPhone.css';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport Media from 'react-media';\nimport { useForm } from 'react-hook-form';\nimport { useNavigate } from 'react-router-dom'; // Input Field form\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport default function REturnInPutCode() {\n  return /*#__PURE__*/_jsxDEV(Media, {\n    queries: {\n      small: '(max-width: 599px)',\n      medium: '(min-width: 600px) and (max-width:1199px)',\n      large: '(min-width: 1200px)'\n    },\n    children: matches => /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [matches.small && /*#__PURE__*/_jsxDEV(ScreenSmall, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 19,\n        columnNumber: 24\n      }, this), matches.medium && /*#__PURE__*/_jsxDEV(ScreenLarge, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 20,\n        columnNumber: 25\n      }, this), matches.large && /*#__PURE__*/_jsxDEV(ScreenLarge, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 21,\n        columnNumber: 24\n      }, this)]\n    }, void 0, true)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 11,\n    columnNumber: 3\n  }, this);\n}\n_c = REturnInPutCode;\n;\nexport const ScreenLarge = () => /*#__PURE__*/_jsxDEV(\"div\", {\n  className: \"form-input-sign\",\n  children: /*#__PURE__*/_jsxDEV(FormDataInput, {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 30,\n    columnNumber: 3\n  }, this)\n}, void 0, false, {\n  fileName: _jsxFileName,\n  lineNumber: 29,\n  columnNumber: 2\n}, this);\n_c2 = ScreenLarge;\nexport const ScreenSmall = () => /*#__PURE__*/_jsxDEV(\"div\", {\n  className: \"form-input-sign-sm\",\n  children: /*#__PURE__*/_jsxDEV(FormDataInput, {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 35,\n    columnNumber: 3\n  }, this)\n}, void 0, false, {\n  fileName: _jsxFileName,\n  lineNumber: 34,\n  columnNumber: 2\n}, this);\n_c3 = ScreenSmall;\nexport const FormDataInput = () => {\n  _s();\n\n  const [checked, setChecked] = React.useState(true);\n  const {\n    register,\n    handleSubmit,\n    formState,\n    reset\n  } = useForm({\n    defaultValues: {\n      phone: '+243'\n    }\n  });\n  const {\n    isSubmitSuccessful\n  } = formState;\n  const navigation = useNavigate();\n\n  const onsubmit = async data => {\n    window.console.log(data);\n    setChecked(false);\n    reset(); // !!data && navigation('/register');\n  };\n\n  const onRegister = async data => {\n    navigation('/register');\n    console.log(data);\n    console.log(isSubmitSuccessful);\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: checked ? /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit(onsubmit),\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"phone\",\n        placeholder: \"Phone\",\n        name: \"phone\",\n        ...register('phone', {\n          required: true\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 6\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        disabled: isSubmitSuccessful,\n        className: \"Btn\",\n        children: \"Suivant\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 6\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 5\n    }, this) : /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit(onRegister),\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        placeholder: \"Valider Code\",\n        name: \"code\",\n        ...register('code', {\n          required: true\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 6\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"Btn\",\n        children: \"Connexion\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 6\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 5\n    }, this)\n  }, void 0, false);\n};\n\n_s(FormDataInput, \"ru6pyAOQF2NgKuNOa2APntXiJ20=\", false, function () {\n  return [useForm, useNavigate];\n});\n\n_c4 = FormDataInput;\n\nvar _c, _c2, _c3, _c4;\n\n$RefreshReg$(_c, \"REturnInPutCode\");\n$RefreshReg$(_c2, \"ScreenLarge\");\n$RefreshReg$(_c3, \"ScreenSmall\");\n$RefreshReg$(_c4, \"FormDataInput\");","map":{"version":3,"sources":["/Users/USER/Desktop/Money/src/Sign/InputPhone.js"],"names":["React","Media","useForm","useNavigate","REturnInPutCode","small","medium","large","matches","ScreenLarge","ScreenSmall","FormDataInput","checked","setChecked","useState","register","handleSubmit","formState","reset","defaultValues","phone","isSubmitSuccessful","navigation","onsubmit","data","window","console","log","onRegister","required"],"mappings":"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","sourcesContent":["import React from 'react';\nimport './InputPhone.css';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport Media from 'react-media';\nimport { useForm } from 'react-hook-form';\nimport { useNavigate } from 'react-router-dom';\n\n// Input Field form\nexport default function REturnInPutCode() {\n return (\n  <Media\n   queries={{\n    small: '(max-width: 599px)',\n    medium: '(min-width: 600px) and (max-width:1199px)',\n    large: '(min-width: 1200px)',\n   }}>\n   {matches => (\n    <>\n     {matches.small && <ScreenSmall />}\n     {matches.medium && <ScreenLarge />}\n     {matches.large && <ScreenLarge />}\n    </>\n   )}\n  </Media>\n );\n};\n\nexport const ScreenLarge = () => (\n <div className='form-input-sign'>\n  <FormDataInput />\n </div>\n);\nexport const ScreenSmall = () => (\n <div className='form-input-sign-sm'>\n  <FormDataInput />\n </div>\n);\n\nexport const FormDataInput = () => {\n\n const [checked, setChecked] = React.useState(true);\n const { register, handleSubmit, formState, reset } = useForm({\n  defaultValues: {\n   phone: '+243'\n  }\n });\n const { isSubmitSuccessful } = formState;\n const navigation = useNavigate();\n\n const onsubmit = async data => {\n\n  window.console.log(data);\n  setChecked(false);\n  reset();\n  // !!data && navigation('/register');\n };\n\n const onRegister = async data => {\n  navigation('/register');\n  console.log(data);\n  console.log(isSubmitSuccessful);\n };\n\n return (\n  <>\n   {checked ?\n    <form onSubmit={handleSubmit(onsubmit)}>\n     <input type='phone' placeholder='Phone' name='phone' {...register('phone', { required: true })} />\n     <button disabled={isSubmitSuccessful} className='Btn' >Suivant</button>\n    </form>\n\n    :\n    <form onSubmit={handleSubmit(onRegister)}>\n     <input type='text' placeholder='Valider Code' name='code' {...register('code', { required: true })} />\n     <button className='Btn' >Connexion</button>\n    </form>\n   }\n  </>\n );\n}"]},"metadata":{},"sourceType":"module"}