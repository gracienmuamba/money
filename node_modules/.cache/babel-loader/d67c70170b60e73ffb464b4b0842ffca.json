{"ast":null,"code":"import React from'react';import'./Btn.css';import Media from'react-media';import{useNavigate}from'react-router-dom';// import { signInWithPopup, GoogleAuthProvider } from \"firebase/auth\";\n// import { auth } from '../firebase';\n// Button Component\nimport{jsx as _jsx}from\"react/jsx-runtime\";import{Fragment as _Fragment}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";export default function ReturnButton(){return/*#__PURE__*/_jsx(Media,{queries:{small:'(max-width: 599px)',medium:'(min-width: 600px) and (max-width:1199px)',large:'(min-width: 1200px)'},children:function children(matches){return/*#__PURE__*/_jsxs(_Fragment,{children:[matches.small&&/*#__PURE__*/_jsx(ScreenSmall,{}),matches.medium&&/*#__PURE__*/_jsx(ScreenLarge,{}),matches.large&&/*#__PURE__*/_jsx(ScreenLarge,{})]});}});};export var ScreenLarge=function ScreenLarge(){return/*#__PURE__*/_jsx(\"div\",{className:\"wrp-hmBtn-admin\",children:/*#__PURE__*/_jsx(ViewButton,{})});};export var ScreenSmall=function ScreenSmall(){return/*#__PURE__*/_jsx(\"div\",{className:\"wrp-hmBtn-admin-sm\",children:/*#__PURE__*/_jsx(ViewButton,{})});};export var ViewButton=function ViewButton(){var navigation=useNavigate();var handlepath=function handlepath(event){event.preventDefault();navigation('/dash');// const provider = new GoogleAuthProvider();\n// signInWithPopup(auth, provider)\n//  .then((result) => {\n//   // This gives you a Google Access Token. You can use it to access the Google API.\n//   const credential = GoogleAuthProvider.credentialFromResult(result);\n//   // const token = credential.accessToken;\n//   const user = result.user;\n//   !!user && navigation('/dash');\n//   window.console.log(user);\n//  }).catch((error) => {\n//   // Handle Errors here.\n//   const errorCode = error.code;\n//   const errorMessage = error.message;\n//   // The email of the user's account used.\n//   const email = error.customData.email;\n//   // The AuthCredential type that was used.\n//   const credential = GoogleAuthProvider.credentialFromError(error);\n//  });\n};return/*#__PURE__*/_jsx(\"button\",{className:\"Btn\",onClick:handlepath,children:\"Connexion\"});};","map":{"version":3,"sources":["/Users/USER/Desktop/Agent/src/Hm/Btn.js"],"names":["React","Media","useNavigate","ReturnButton","small","medium","large","matches","ScreenLarge","ScreenSmall","ViewButton","navigation","handlepath","event","preventDefault"],"mappings":"AAAA,MAAOA,CAAAA,KAAP,KAAkB,OAAlB,CACA,MAAO,WAAP,CACA,MAAOC,CAAAA,KAAP,KAAkB,aAAlB,CACA,OAASC,WAAT,KAA4B,kBAA5B,CACA;AACA;AAGA;6IACA,cAAe,SAASC,CAAAA,YAAT,EAAwB,CACtC,mBACC,KAAC,KAAD,EACC,OAAO,CAAE,CACRC,KAAK,CAAE,oBADC,CAERC,MAAM,CAAE,2CAFA,CAGRC,KAAK,CAAE,qBAHC,CADV,UAME,kBAAAC,OAAO,qBACP,2BACEA,OAAO,CAACH,KAAR,eAAiB,KAAC,WAAD,IADnB,CAEEG,OAAO,CAACF,MAAR,eAAkB,KAAC,WAAD,IAFpB,CAGEE,OAAO,CAACD,KAAR,eAAiB,KAAC,WAAD,IAHnB,GADO,EANT,EADD,CAgBA,EAGD,MAAO,IAAME,CAAAA,WAAW,CAAG,QAAdA,CAAAA,WAAc,sBAC1B,YAAK,SAAS,CAAC,iBAAf,uBACC,KAAC,UAAD,IADD,EAD0B,EAApB,CAKP,MAAO,IAAMC,CAAAA,WAAW,CAAG,QAAdA,CAAAA,WAAc,sBAC1B,YAAK,SAAS,CAAC,oBAAf,uBACC,KAAC,UAAD,IADD,EAD0B,EAApB,CAKP,MAAO,IAAMC,CAAAA,UAAU,CAAG,QAAbA,CAAAA,UAAa,EAAM,CAE/B,GAAMC,CAAAA,UAAU,CAAGT,WAAW,EAA9B,CACA,GAAMU,CAAAA,UAAU,CAAG,QAAbA,CAAAA,UAAa,CAACC,KAAD,CAAW,CAE7BA,KAAK,CAACC,cAAN,GACAH,UAAU,CAAC,OAAD,CAAV,CAEA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAIA,CA3BD,CA6BA,mBACC,eAAQ,SAAS,CAAC,KAAlB,CAAwB,OAAO,CAAEC,UAAjC,uBADD,CAGA,CAnCM","sourcesContent":["import React from 'react';\nimport './Btn.css';\nimport Media from 'react-media';\nimport { useNavigate } from 'react-router-dom';\n// import { signInWithPopup, GoogleAuthProvider } from \"firebase/auth\";\n// import { auth } from '../firebase';\n\n\n// Button Component\nexport default function ReturnButton() {\n return (\n  <Media\n   queries={{\n    small: '(max-width: 599px)',\n    medium: '(min-width: 600px) and (max-width:1199px)',\n    large: '(min-width: 1200px)',\n   }}>\n   {matches => (\n    <>\n     {matches.small && <ScreenSmall />}\n     {matches.medium && <ScreenLarge />}\n     {matches.large && <ScreenLarge />}\n    </>\n   )}\n  </Media>\n );\n};\n\n\nexport const ScreenLarge = () => (\n <div className='wrp-hmBtn-admin'>\n  <ViewButton />\n </div>\n);\nexport const ScreenSmall = () => (\n <div className='wrp-hmBtn-admin-sm'>\n  <ViewButton />\n </div>\n)\nexport const ViewButton = () => {\n\n const navigation = useNavigate();\n const handlepath = (event) => {\n\n  event.preventDefault();\n  navigation('/dash');\n\n  // const provider = new GoogleAuthProvider();\n\n  // signInWithPopup(auth, provider)\n  //  .then((result) => {\n  //   // This gives you a Google Access Token. You can use it to access the Google API.\n  //   const credential = GoogleAuthProvider.credentialFromResult(result);\n  //   // const token = credential.accessToken;\n  //   const user = result.user;\n  //   !!user && navigation('/dash');\n  //   window.console.log(user);\n  //  }).catch((error) => {\n  //   // Handle Errors here.\n  //   const errorCode = error.code;\n  //   const errorMessage = error.message;\n  //   // The email of the user's account used.\n  //   const email = error.customData.email;\n  //   // The AuthCredential type that was used.\n  //   const credential = GoogleAuthProvider.credentialFromError(error);\n  //  });\n\n\n\n };\n\n return (\n  <button className='Btn' onClick={handlepath}>Connexion</button>\n );\n};\n\n"]},"metadata":{},"sourceType":"module"}