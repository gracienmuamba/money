{"ast":null,"code":"var _jsxFileName = \"/Users/USER/Desktop/Agent/src/Send/USD/Input.js\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport './Input.css';\nimport { useForm } from 'react-hook-form';\nimport Media from 'react-media';\nimport { useNavigate } from 'react-router-dom';\nimport { phoneX } from '../Phone/Input';\nimport { doc, updateDoc, increment, onSnapshot, arrayUnion } from \"firebase/firestore\";\nimport { db } from '../../firebase';\nimport Button from '@mui/material/Button';\nimport Dialog from '@mui/material/Dialog';\nimport DialogActions from '@mui/material/DialogActions';\nimport DialogContent from '@mui/material/DialogContent';\nimport DialogTitle from '@mui/material/DialogTitle';\nimport DialogContentText from '@mui/material/DialogContentText';\nimport moment from 'moment';\nimport 'moment/locale/fr';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport let prixSuccess = 0;\nexport let nowField = moment().date();\nexport let now = moment().date();\nvar regular = /[a-z]+/;\nlet arrayEmUsd = new Array();\nlet arrayAgentUsd = new Array(); // withdraw input\n\nexport default function ReturnWithdrAwInput() {\n  return /*#__PURE__*/_jsxDEV(Media, {\n    queries: {\n      small: '(max-width: 599px)',\n      medium: '(min-width: 600px) and (max-width:1199px)',\n      large: '(min-width: 1200px)'\n    },\n    children: matches => /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [matches.small && /*#__PURE__*/_jsxDEV(ScreenSmall, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 24\n      }, this), matches.medium && /*#__PURE__*/_jsxDEV(ScreenLarge, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 25\n      }, this), matches.large && /*#__PURE__*/_jsxDEV(ScreenLarge, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 24\n      }, this)]\n    }, void 0, true)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 33,\n    columnNumber: 3\n  }, this);\n}\n_c = ReturnWithdrAwInput;\n;\nexport const ScreenLarge = () => /*#__PURE__*/_jsxDEV(\"div\", {\n  className: \"wrp-withdraw-input\",\n  children: /*#__PURE__*/_jsxDEV(FormInput, {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 52,\n    columnNumber: 3\n  }, this)\n}, void 0, false, {\n  fileName: _jsxFileName,\n  lineNumber: 51,\n  columnNumber: 2\n}, this);\n_c2 = ScreenLarge;\nexport const ScreenSmall = () => /*#__PURE__*/_jsxDEV(\"div\", {\n  className: \"wrp-withdraw-input-sm\",\n  children: /*#__PURE__*/_jsxDEV(FormInput, {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 57,\n    columnNumber: 3\n  }, this)\n}, void 0, false, {\n  fileName: _jsxFileName,\n  lineNumber: 56,\n  columnNumber: 2\n}, this);\n_c3 = ScreenSmall;\nexport const FormInput = () => {\n  _s();\n\n  const navigation = useNavigate();\n  const {\n    handleSubmit,\n    register,\n    reset\n  } = useForm();\n  const [getPin, setGetPin] = React.useState('');\n  const [first, setFirst] = React.useState('');\n  const [last, setLast] = React.useState('');\n  const [solde, setSolde] = React.useState(null);\n  const [trade, setTrade] = React.useState(null); //  order notebook\n\n  const [tableEmUsd, setTableEmUsd] = React.useState();\n  const [tableAgentUsd, setTableAgentUsd] = React.useState();\n  const [open, setOpen] = React.useState(false);\n  const [fullWidth, setFullWidth] = React.useState(true);\n  const [maxWidth, setMaxWidth] = React.useState('sm');\n\n  const handleClickOpen = () => {\n    setOpen(true);\n  };\n\n  const handleClose = () => {\n    setOpen(false);\n  }; // React.useEffect(async () => {\n  //  try {\n  //   await onSnapshot(doc(db, \"muunganomoney\", \"money\"), (doc) => {\n  //    setGetPin(doc.data().code);\n  //    setSolde(doc.data().usd);\n  //   });\n  //   await onSnapshot(doc(db, \"agent\", phoneX), (doc) => {\n  //    setFirst(doc.data().firstname);\n  //    setLast(doc.data().lastname);\n  //    setTrade(doc.data().trade);\n  //   });\n  //   await onSnapshot(doc(db, \"muungano\", \"emoney\"), (doc) => {\n  //    setTableEmUsd(doc.data().usd);\n  //   });\n  //   await onSnapshot(doc(db, \"agents\", \"emoney\"), (doc) => {\n  //    setTableAgentUsd(doc.data().usd);\n  //   });\n  //  } catch {\n  //   window.console.log('erreur disponible');\n  //  }\n  // }, []);\n\n\n  React.useEffect(async () => {\n    try {\n      await onSnapshot(doc(db, \"muunganomoney\", \"money\"), doc => {\n        setGetPin(doc.data().code);\n        setSolde(doc.data().usd);\n      }); // await onSnapshot(doc(db, \"agent\", phoneX), (doc) => {\n      //  setFirst(doc.data().firstname);\n      //  setLast(doc.data().lastname);\n      // });\n\n      await onSnapshot(doc(db, \"muungano\", \"emoney\"), doc => {\n        setTableEmUsd(doc.data().usd);\n      });\n      await onSnapshot(doc(db, \"agents\", \"emoney\"), doc => {\n        setTableAgentUsd(doc.data().usd);\n      });\n    } catch {\n      window.console.log('erreur disponible');\n    }\n  }, []);\n\n  const onSubmit = async data => {\n    if (getPin == data.code) {\n      if (data.count > 1000 || data.count <= 0 || data.count <= 1 || solde <= 1 || data.count > solde || regular.test(data.count)) {\n        setOpen(true);\n        reset();\n      } else {\n        let User = first + ' ' + last;\n        sendAgentMoney(Math.floor(Number(data.count)), phoneX, User);\n        updateAdmin(Number(data.count), Math.floor(Number(data.count)), User);\n        const soldeEmUsd = Number(tableEmUsd[nowField]) + Number(data.count);\n        const soldeAgentUsd = Number(tableAgentUsd[nowField]) + Number(data.count);\n        arrayEmUsd = tableEmUsd;\n        arrayAgentUsd = tableAgentUsd;\n\n        for (let i = now; i <= 31; i++) {\n          arrayEmUsd[i] = soldeEmUsd;\n          arrayAgentUsd[i] = soldeAgentUsd;\n        }\n\n        updateMuungano(arrayEmUsd, arrayAgentUsd);\n        prixSuccess = data.count;\n        navigation('/send/success-usd');\n      }\n    } else {\n      prixSuccess = data.count;\n      setOpen(true);\n      reset();\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    onSubmit: handleSubmit(onSubmit),\n    children: [/*#__PURE__*/_jsxDEV(\"input\", {\n      type: 'text',\n      ...register('count', {\n        required: true\n      }),\n      name: \"count\",\n      placeholder: 'USD'\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 193,\n      columnNumber: 4\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: 'password',\n      ...register('code', {\n        required: true\n      }),\n      name: \"code\",\n      placeholder: '••••••'\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 198,\n      columnNumber: 4\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"Btn\",\n      children: \"Envoyer\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 204,\n      columnNumber: 4\n    }, this), /*#__PURE__*/_jsxDEV(Dialog, {\n      fullWidth: fullWidth,\n      maxWidth: maxWidth,\n      open: open,\n      onClose: handleClose,\n      children: [/*#__PURE__*/_jsxDEV(DialogTitle, {\n        children: \"MuunganoMoney\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 212,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(DialogContent, {\n        children: /*#__PURE__*/_jsxDEV(DialogContentText, {\n          children: \"Le solde entre n'est pas valide, veuillez v\\xE9rifier, Ou code d'acc\\xE8s erron\\xE9\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 215,\n          columnNumber: 6\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 213,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(DialogActions, {\n        children: /*#__PURE__*/_jsxDEV(Button, {\n          onClick: handleClose,\n          children: \"Fermer\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 221,\n          columnNumber: 6\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 220,\n        columnNumber: 5\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 206,\n      columnNumber: 4\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 191,\n    columnNumber: 3\n  }, this);\n};\n\n_s(FormInput, \"el8gVqXhuDsZc58CDGfJT4RLLLM=\", false, function () {\n  return [useNavigate, useForm];\n});\n\n_c4 = FormInput;\n\nasync function sendAgentMoney(solde, numPhone) {\n  let time = moment().format('LLL');\n  let send = {\n    date: time,\n    solde: `${solde} USD`,\n    phone: numPhone,\n    user: 'muunganomoney',\n    type: 'réussi'\n  };\n  const washingtonRef = doc(db, \"agent\", numPhone); // Set the \"capital\" field of the city 'DC'\n\n  await updateDoc(washingtonRef, {\n    usd: increment(solde),\n    money: solde,\n    unite: 'USD',\n    user: 'muunganomoney',\n    delay: moment().format(),\n    swap: arrayUnion(send)\n  });\n}\n\n;\n\nasync function updateAdmin(solde, money, User) {\n  const washingtonRef = doc(db, \"muunganomoney\", \"money\"); // Set the \"capital\" field of the city 'DC'\n\n  await updateDoc(washingtonRef, {\n    usd: increment(-solde),\n    money: money,\n    buyusd: solde,\n    unite: 'USD',\n    user: User,\n    delay: moment().format()\n  });\n  const emoneyRef = doc(db, \"muunganomoney\", \"e-money\");\n  await updateDoc(emoneyRef, {\n    cdf: solde\n  });\n  const moneyRef = doc(db, \"muunganomoney\", \"money\");\n  await updateDoc(moneyRef, {\n    cdf: increment(-solde)\n  });\n}\n\n;\n\nasync function updateMuungano(emUsd, agentUsd) {\n  const emoneyRef = doc(db, \"muungano\", \"emoney\");\n  await updateDoc(emoneyRef, {\n    usd: emUsd\n  });\n  const agentsemoneyRef = doc(db, \"agents\", \"emoney\");\n  await updateDoc(agentsemoneyRef, {\n    usd: agentUsd\n  });\n}\n\n;\n\nvar _c, _c2, _c3, _c4;\n\n$RefreshReg$(_c, \"ReturnWithdrAwInput\");\n$RefreshReg$(_c2, \"ScreenLarge\");\n$RefreshReg$(_c3, \"ScreenSmall\");\n$RefreshReg$(_c4, \"FormInput\");","map":{"version":3,"sources":["/Users/USER/Desktop/Agent/src/Send/USD/Input.js"],"names":["React","useForm","Media","useNavigate","phoneX","doc","updateDoc","increment","onSnapshot","arrayUnion","db","Button","Dialog","DialogActions","DialogContent","DialogTitle","DialogContentText","moment","prixSuccess","nowField","date","now","regular","arrayEmUsd","Array","arrayAgentUsd","ReturnWithdrAwInput","small","medium","large","matches","ScreenLarge","ScreenSmall","FormInput","navigation","handleSubmit","register","reset","getPin","setGetPin","useState","first","setFirst","last","setLast","solde","setSolde","trade","setTrade","tableEmUsd","setTableEmUsd","tableAgentUsd","setTableAgentUsd","open","setOpen","fullWidth","setFullWidth","maxWidth","setMaxWidth","handleClickOpen","handleClose","useEffect","data","code","usd","window","console","log","onSubmit","count","test","User","sendAgentMoney","Math","floor","Number","updateAdmin","soldeEmUsd","soldeAgentUsd","i","updateMuungano","required","numPhone","time","format","send","phone","user","type","washingtonRef","money","unite","delay","swap","buyusd","emoneyRef","cdf","moneyRef","emUsd","agentUsd","agentsemoneyRef"],"mappings":"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","sourcesContent":["import React from 'react';\nimport './Input.css';\nimport { useForm } from 'react-hook-form';\nimport Media from 'react-media';\nimport { useNavigate } from 'react-router-dom';\nimport { phoneX } from '../Phone/Input';\nimport { doc, updateDoc, increment, onSnapshot, arrayUnion } from \"firebase/firestore\";\n\nimport { db } from '../../firebase';\n\nimport Button from '@mui/material/Button';\nimport Dialog from '@mui/material/Dialog';\nimport DialogActions from '@mui/material/DialogActions';\nimport DialogContent from '@mui/material/DialogContent';\nimport DialogTitle from '@mui/material/DialogTitle';\nimport DialogContentText from '@mui/material/DialogContentText';\nimport moment from 'moment';\nimport 'moment/locale/fr';\n\n\nexport let prixSuccess = 0;\nexport let nowField = moment().date();\nexport let now = (moment().date());\n\nvar regular = /[a-z]+/;\nlet arrayEmUsd = new Array();\nlet arrayAgentUsd = new Array();\n\n\n// withdraw input\nexport default function ReturnWithdrAwInput() {\n return (\n  <Media\n   queries={{\n    small: '(max-width: 599px)',\n    medium: '(min-width: 600px) and (max-width:1199px)',\n    large: '(min-width: 1200px)',\n   }}>\n   {matches => (\n    <>\n     {matches.small && <ScreenSmall />}\n     {matches.medium && <ScreenLarge />}\n     {matches.large && <ScreenLarge />}\n    </>\n   )}\n  </Media>\n );\n};\n\nexport const ScreenLarge = () => (\n <div className='wrp-withdraw-input'>\n  <FormInput />\n </div>\n);\nexport const ScreenSmall = () => (\n <div className='wrp-withdraw-input-sm'>\n  <FormInput />\n </div>\n);\nexport const FormInput = () => {\n\n const navigation = useNavigate();\n const { handleSubmit, register, reset } = useForm();\n\n const [getPin, setGetPin] = React.useState('');\n const [first, setFirst] = React.useState('');\n const [last, setLast] = React.useState('');\n const [solde, setSolde] = React.useState(null);\n const [trade, setTrade] = React.useState(null);\n\n //  order notebook\n const [tableEmUsd, setTableEmUsd] = React.useState();\n const [tableAgentUsd, setTableAgentUsd] = React.useState();\n\n\n const [open, setOpen] = React.useState(false);\n const [fullWidth, setFullWidth] = React.useState(true);\n const [maxWidth, setMaxWidth] = React.useState('sm');\n\n\n const handleClickOpen = () => {\n  setOpen(true);\n };\n const handleClose = () => {\n  setOpen(false);\n };\n\n\n // React.useEffect(async () => {\n\n //  try {\n\n //   await onSnapshot(doc(db, \"muunganomoney\", \"money\"), (doc) => {\n //    setGetPin(doc.data().code);\n //    setSolde(doc.data().usd);\n //   });\n //   await onSnapshot(doc(db, \"agent\", phoneX), (doc) => {\n\n //    setFirst(doc.data().firstname);\n //    setLast(doc.data().lastname);\n //    setTrade(doc.data().trade);\n\n //   });\n //   await onSnapshot(doc(db, \"muungano\", \"emoney\"), (doc) => {\n //    setTableEmUsd(doc.data().usd);\n //   });\n\n //   await onSnapshot(doc(db, \"agents\", \"emoney\"), (doc) => {\n //    setTableAgentUsd(doc.data().usd);\n //   });\n\n //  } catch {\n //   window.console.log('erreur disponible');\n //  }\n\n // }, []);\n\n\n React.useEffect(async () => {\n\n  try {\n\n   await onSnapshot(doc(db, \"muunganomoney\", \"money\"), (doc) => {\n    setGetPin(doc.data().code);\n    setSolde(doc.data().usd);\n   });\n\n   // await onSnapshot(doc(db, \"agent\", phoneX), (doc) => {\n   //  setFirst(doc.data().firstname);\n   //  setLast(doc.data().lastname);\n   // });\n\n   await onSnapshot(doc(db, \"muungano\", \"emoney\"), (doc) => {\n    setTableEmUsd(doc.data().usd);\n   });\n   await onSnapshot(doc(db, \"agents\", \"emoney\"), (doc) => {\n    setTableAgentUsd(doc.data().usd);\n   });\n\n  } catch {\n   window.console.log('erreur disponible');\n  }\n\n }, []);\n\n\n\n const onSubmit = async (data) => {\n\n  if (getPin == data.code) {\n\n   if (data.count > 1000 || data.count <= 0 || data.count <= 1 || solde <= 1 || data.count > solde || regular.test(data.count)) {\n    setOpen(true);\n    reset();\n   } else {\n\n    let User = first + ' ' + last;\n    sendAgentMoney(Math.floor(Number(data.count)), phoneX, User);\n    updateAdmin(Number(data.count), Math.floor(Number(data.count)), User);\n\n\n    const soldeEmUsd = Number(tableEmUsd[nowField]) + Number(data.count);\n    const soldeAgentUsd = Number(tableAgentUsd[nowField]) + Number(data.count);\n\n\n    arrayEmUsd = tableEmUsd;\n    arrayAgentUsd = tableAgentUsd;\n\n    for (let i = now; i <= 31; i++) {\n\n     arrayEmUsd[i] = soldeEmUsd;\n     arrayAgentUsd[i] = soldeAgentUsd;\n\n    }\n\n    updateMuungano(arrayEmUsd, arrayAgentUsd);\n    prixSuccess = data.count;\n    navigation('/send/success-usd');\n\n   }\n  } else {\n\n   prixSuccess = data.count;\n   setOpen(true);\n   reset();\n  }\n\n };\n\n return (\n  <form onSubmit={handleSubmit(onSubmit)}>\n\n   <input type={'text'}\n    {...register('count', { required: true })}\n    name=\"count\"\n    placeholder={'USD'}\n   />\n   <input type={'password'}\n    {...register('code', { required: true })}\n    name=\"code\"\n    placeholder={'••••••'}\n   />\n\n   <button className='Btn'>Envoyer</button>\n\n   <Dialog\n    fullWidth={fullWidth}\n    maxWidth={maxWidth}\n    open={open}\n    onClose={handleClose}\n   >\n    <DialogTitle>MuunganoMoney</DialogTitle>\n    <DialogContent>\n\n     <DialogContentText>\n      Le solde entre n'est pas valide, veuillez vérifier, Ou code d'accès erroné\n     </DialogContentText>\n\n    </DialogContent>\n    <DialogActions>\n     <Button onClick={handleClose}>Fermer</Button>\n    </DialogActions>\n   </Dialog>\n\n  </form>\n );\n};\n\nasync function sendAgentMoney(solde, numPhone) {\n\n let time = moment().format('LLL');\n let send = { date: time, solde: `${solde} USD`, phone: numPhone, user: 'muunganomoney', type: 'réussi' }\n\n const washingtonRef = doc(db, \"agent\", numPhone);\n // Set the \"capital\" field of the city 'DC'\n await updateDoc(washingtonRef, {\n  usd: increment(solde),\n  money: solde,\n  unite: 'USD',\n  user: 'muunganomoney',\n  delay: moment().format(),\n  swap: arrayUnion(send)\n });\n\n};\nasync function updateAdmin(solde, money, User) {\n\n const washingtonRef = doc(db, \"muunganomoney\", \"money\");\n // Set the \"capital\" field of the city 'DC'\n await updateDoc(washingtonRef, {\n  usd: increment(-(solde)),\n  money: money,\n  buyusd: solde,\n  unite: 'USD',\n  user: User,\n  delay: moment().format()\n });\n\n const emoneyRef = doc(db, \"muunganomoney\", \"e-money\");\n await updateDoc(emoneyRef, {\n  cdf: solde\n });\n\n const moneyRef = doc(db, \"muunganomoney\", \"money\");\n await updateDoc(moneyRef, {\n  cdf: increment(-(solde))\n });\n\n};\nasync function updateMuungano(emUsd, agentUsd) {\n\n const emoneyRef = doc(db, \"muungano\", \"emoney\");\n await updateDoc(emoneyRef, {\n  usd: emUsd\n });\n\n const agentsemoneyRef = doc(db, \"agents\", \"emoney\");\n await updateDoc(agentsemoneyRef, {\n  usd: agentUsd\n });\n\n};"]},"metadata":{},"sourceType":"module"}