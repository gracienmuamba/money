{"ast":null,"code":"var _jsxFileName = \"/Users/USER/Desktop/Agent/src/Send/Blocked/Input.js\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport './Input.css';\nimport { useForm } from 'react-hook-form';\nimport Media from 'react-media';\nimport { useNavigate } from 'react-router-dom';\nimport { phoneX } from '../Phone/Input';\nimport { doc, getDoc, updateDoc } from \"firebase/firestore\";\nimport { db } from '../../firebase';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport let prixSuccess = 0; // withdraw input\n\nexport default function ReturnBlockedWithdrAw() {\n  return /*#__PURE__*/_jsxDEV(Media, {\n    queries: {\n      small: '(max-width: 599px)',\n      medium: '(min-width: 600px) and (max-width:1199px)',\n      large: '(min-width: 1200px)'\n    },\n    children: matches => /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [matches.small && /*#__PURE__*/_jsxDEV(ScreenSmall, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 25,\n        columnNumber: 24\n      }, this), matches.medium && /*#__PURE__*/_jsxDEV(ScreenLarge, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 25\n      }, this), matches.large && /*#__PURE__*/_jsxDEV(ScreenLarge, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 24\n      }, this)]\n    }, void 0, true)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 17,\n    columnNumber: 3\n  }, this);\n}\n_c = ReturnBlockedWithdrAw;\n;\nexport const ScreenLarge = () => /*#__PURE__*/_jsxDEV(\"div\", {\n  className: \"wrp-withdraw-input\",\n  children: /*#__PURE__*/_jsxDEV(FormInput, {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 36,\n    columnNumber: 3\n  }, this)\n}, void 0, false, {\n  fileName: _jsxFileName,\n  lineNumber: 35,\n  columnNumber: 2\n}, this);\n_c2 = ScreenLarge;\nexport const ScreenSmall = () => /*#__PURE__*/_jsxDEV(\"div\", {\n  className: \"wrp-withdraw-input-sm\",\n  children: /*#__PURE__*/_jsxDEV(FormInput, {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 41,\n    columnNumber: 3\n  }, this)\n}, void 0, false, {\n  fileName: _jsxFileName,\n  lineNumber: 40,\n  columnNumber: 2\n}, this);\n_c3 = ScreenSmall;\nexport const FormInput = () => {\n  _s();\n\n  const navigation = useNavigate();\n  const {\n    handleSubmit,\n    register,\n    reset\n  } = useForm();\n  const [getPin, setGetPin] = React.useState('');\n  React.useEffect(async () => {\n    const docRefPin = doc(db, \"ungama\", \"money\");\n    const docSnapPin = await getDoc(docRefPin);\n\n    if (docSnapPin.exists()) {\n      getPin = docSnapPin.data().pin;\n    }\n  }, []);\n\n  const onSubmit = async data => {\n    if (getPin == data.code && data.code.length == 6) {\n      if (data.count > 200000) {\n        window.alert(`La valeur est superieur à 200000FC`);\n        reset();\n      } else {\n        addSoldeAgent(phoneX, data.count);\n        updateSolde(data.count);\n        prixSuccess = data.count;\n        navigation('/send/success-blocked');\n      }\n    } else {\n      prixSuccess = data.count;\n      navigation('/send/success-blocked');\n      window.alert(`Erreur de code d'accès invalide`);\n    }\n\n    reset();\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    onSubmit: handleSubmit(onSubmit),\n    children: [/*#__PURE__*/_jsxDEV(\"input\", {\n      type: 'text',\n      ...register('count', {\n        required: true\n      }),\n      name: \"count\",\n      placeholder: 'CDF'\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 4\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: 'text',\n      ...register('code', {\n        required: true\n      }),\n      name: \"code\",\n      placeholder: '••••••'\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 4\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"Btn\",\n      children: \"Envoyer\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 4\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 85,\n    columnNumber: 3\n  }, this);\n}; // get money pyramid\n\n_s(FormInput, \"HAg43oTDQ7ddd0PHptF17CtFwWE=\", false, function () {\n  return [useNavigate, useForm];\n});\n\n_c4 = FormInput;\nexport const updateSolde = async solde => {\n  let getFc = 0;\n  let newSolde = 0;\n  let actif = 0;\n  const docRef = doc(db, \"ungama\", 'money');\n  const docSnap = await getDoc(docRef);\n\n  if (docSnap.exists()) {\n    getFc = docSnap.data().fc;\n    actif = docSnap.data().allblocked;\n  }\n\n  newSolde = Number(getFc) - Number(solde);\n  actif = Number(actif) + Number(solde);\n  const washingtonRef = doc(db, \"ungama\", \"money\"); // Set the \"capital\" field of the city 'DC'\n\n  await updateDoc(washingtonRef, {\n    blocked: Math.floor(newSolde),\n    allblocked: Math.floor(actif)\n  });\n}; // get add some money on the agent\n\nexport const addSoldeAgent = async (numPhoneInDocs, solde) => {\n  let getFc = 0;\n  const docRef = doc(db, \"agent\", numPhoneInDocs);\n  const docSnap = await getDoc(docRef);\n\n  if (docSnap.exists()) {\n    getFc = docSnap.data().blocked;\n    getFc = Number(getFc) + Number(solde);\n  }\n\n  const washingtonRef = doc(db, \"agent\", numPhoneInDocs); // Set the \"capital\" field of the city 'DC'\n\n  await updateDoc(washingtonRef, {\n    blocked: Math.floor(getFc),\n    money: Math.floor(solde),\n    unite: 'fc'\n  });\n};\n\nvar _c, _c2, _c3, _c4;\n\n$RefreshReg$(_c, \"ReturnBlockedWithdrAw\");\n$RefreshReg$(_c2, \"ScreenLarge\");\n$RefreshReg$(_c3, \"ScreenSmall\");\n$RefreshReg$(_c4, \"FormInput\");","map":{"version":3,"sources":["/Users/USER/Desktop/Agent/src/Send/Blocked/Input.js"],"names":["React","useForm","Media","useNavigate","phoneX","doc","getDoc","updateDoc","db","prixSuccess","ReturnBlockedWithdrAw","small","medium","large","matches","ScreenLarge","ScreenSmall","FormInput","navigation","handleSubmit","register","reset","getPin","setGetPin","useState","useEffect","docRefPin","docSnapPin","exists","data","pin","onSubmit","code","length","count","window","alert","addSoldeAgent","updateSolde","required","solde","getFc","newSolde","actif","docRef","docSnap","fc","allblocked","Number","washingtonRef","blocked","Math","floor","numPhoneInDocs","money","unite"],"mappings":"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","sourcesContent":["\nimport React from 'react';\nimport './Input.css';\nimport { useForm } from 'react-hook-form';\nimport Media from 'react-media';\nimport { useNavigate } from 'react-router-dom';\nimport { phoneX } from '../Phone/Input';\nimport { doc, getDoc, updateDoc } from \"firebase/firestore\";\nimport { db } from '../../firebase';\n\nexport let prixSuccess = 0;\n\n\n// withdraw input\nexport default function ReturnBlockedWithdrAw() {\n return (\n  <Media\n   queries={{\n    small: '(max-width: 599px)',\n    medium: '(min-width: 600px) and (max-width:1199px)',\n    large: '(min-width: 1200px)',\n   }}>\n   {matches => (\n    <>\n     {matches.small && <ScreenSmall />}\n     {matches.medium && <ScreenLarge />}\n     {matches.large && <ScreenLarge />}\n    </>\n   )}\n  </Media>\n );\n};\n\nexport const ScreenLarge = () => (\n <div className='wrp-withdraw-input'>\n  <FormInput />\n </div>\n);\nexport const ScreenSmall = () => (\n <div className='wrp-withdraw-input-sm'>\n  <FormInput />\n </div>\n);\nexport const FormInput = () => {\n\n const navigation = useNavigate();\n const { handleSubmit, register, reset } = useForm();\n const [getPin, setGetPin] = React.useState('');\n\n React.useEffect(async () => {\n\n  const docRefPin = doc(db, \"ungama\", \"money\");\n  const docSnapPin = await getDoc(docRefPin);\n\n  if (docSnapPin.exists()) {\n   getPin = docSnapPin.data().pin;\n  }\n\n }, []);\n\n const onSubmit = async (data) => {\n\n  if (getPin == data.code && data.code.length == 6) {\n\n   if (data.count > 200000) {\n    window.alert(`La valeur est superieur à 200000FC`);\n    reset();\n   } else {\n\n    addSoldeAgent(phoneX, data.count);\n    updateSolde(data.count);\n    prixSuccess = data.count;\n    navigation('/send/success-blocked');\n   }\n  } else {\n   prixSuccess = data.count;\n   navigation('/send/success-blocked');\n   window.alert(`Erreur de code d'accès invalide`)\n  }\n\n  reset();\n };\n\n return (\n  <form onSubmit={handleSubmit(onSubmit)}>\n\n   <input type={'text'}\n    {...register('count', { required: true })}\n    name=\"count\"\n    placeholder={'CDF'}\n   />\n   <input type={'text'}\n    {...register('code', { required: true })}\n    name=\"code\"\n    placeholder={'••••••'}\n   />\n\n   <button className='Btn'>Envoyer</button>\n  </form>\n );\n};\n\n// get money pyramid\nexport const updateSolde = async (solde) => {\n\n let getFc = 0;\n let newSolde = 0;\n let actif = 0;\n\n const docRef = doc(db, \"ungama\", 'money');\n const docSnap = await getDoc(docRef);\n\n if (docSnap.exists()) {\n  getFc = docSnap.data().fc;\n  actif = docSnap.data().allblocked;\n }\n\n newSolde = Number(getFc) - Number(solde);\n actif = Number(actif) + Number(solde);\n const washingtonRef = doc(db, \"ungama\", \"money\");\n\n // Set the \"capital\" field of the city 'DC'\n await updateDoc(washingtonRef, {\n  blocked: Math.floor(newSolde),\n  allblocked: Math.floor(actif)\n });\n\n};\n// get add some money on the agent\nexport const addSoldeAgent = async (numPhoneInDocs, solde) => {\n\n let getFc = 0\n\n const docRef = doc(db, \"agent\", numPhoneInDocs);\n const docSnap = await getDoc(docRef);\n\n if (docSnap.exists()) {\n  getFc = docSnap.data().blocked;\n  getFc = Number(getFc) + Number(solde);\n }\n\n const washingtonRef = doc(db, \"agent\", numPhoneInDocs);\n // Set the \"capital\" field of the city 'DC'\n await updateDoc(washingtonRef, {\n  blocked: Math.floor(getFc),\n  money: Math.floor(solde),\n  unite: 'fc'\n });\n\n};"]},"metadata":{},"sourceType":"module"}