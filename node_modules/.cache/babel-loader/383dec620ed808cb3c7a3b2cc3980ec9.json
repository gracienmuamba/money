{"ast":null,"code":"var _jsxFileName = \"/Users/USER/Documents/Money/src/Pret/Fran/Form/Input.js\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport './Input.css';\nimport Media from 'react-media';\nimport { useForm, Controller } from 'react-hook-form';\nimport { useNavigate } from 'react-router-dom';\nimport { doc, setDoc, updateDoc, increment, onSnapshot, getDocs, collection } from 'firebase/firestore';\nimport MomentUtils from \"@date-io/moment\";\nimport moment from 'moment';\nimport \"moment/locale/fr\";\nimport Dialog from '@mui/material/Dialog';\nimport DialogActions from '@mui/material/DialogActions';\nimport DialogContent from '@mui/material/DialogContent';\nimport DialogTitle from '@mui/material/DialogTitle';\nimport DialogContentText from '@mui/material/DialogContentText';\nimport { db, storage } from '../../../firebase';\nimport { ref, uploadBytes, deleteObject, getDownloadURL, uploadBytesResumable } from 'firebase/storage';\nimport { v4 } from 'uuid';\nimport IconButton from '@mui/material/IconButton';\nimport PropTypes from 'prop-types';\nimport CircularProgress from '@mui/material/CircularProgress';\nimport Typography from '@mui/material/Typography';\nimport Box from '@mui/material/Box';\nimport { VscCheck } from 'react-icons/vsc';\nimport { green } from '@mui/material/colors';\nimport Button from '@mui/material/Button';\nimport Fab from '@mui/material/Fab';\nimport CheckIcon from '@mui/icons-material/Check';\nimport SaveIcon from '@mui/icons-material/Save';\nimport Input from '@mui/material/Input';\nimport InputLabel from '@mui/material/InputLabel';\nimport FormControl from '@mui/material/FormControl';\nimport { IMaskInput } from 'react-imask';\nimport { NumericFormat } from 'react-number-format';\nimport TextField from '@mui/material/TextField'; // import DateFnsUtils from '@date-io/date-fns'; // choose your lib\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst TextMaskCustom = /*#__PURE__*/React.forwardRef(_c = function TextMaskCustom(props, ref) {\n  const {\n    onChange,\n    ...other\n  } = props;\n  return /*#__PURE__*/_jsxDEV(IMaskInput, { ...other,\n    mask: \"(#00) 000-0000\",\n    definitions: {\n      '#': /[1-9]/\n    },\n    inputRef: ref,\n    onAccept: value => onChange({\n      target: {\n        name: props.name,\n        value\n      }\n    }),\n    overwrite: true\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 50,\n    columnNumber: 5\n  }, this);\n});\n_c2 = TextMaskCustom;\nTextMaskCustom.propTypes = {\n  name: PropTypes.string.isRequired,\n  onChange: PropTypes.func.isRequired\n};\nconst NumericFormatCustom = /*#__PURE__*/React.forwardRef(_c3 = function NumericFormatCustom(props, ref) {\n  const {\n    onChange,\n    ...other\n  } = props;\n  return /*#__PURE__*/_jsxDEV(NumericFormat, { ...other,\n    getInputRef: ref,\n    onValueChange: values => {\n      onChange({\n        target: {\n          name: props.name,\n          value: values.value\n        }\n      });\n    },\n    thousandSeparator: true,\n    valueIsNumericString: true,\n    prefix: \"\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 73,\n    columnNumber: 5\n  }, this);\n});\n_c4 = NumericFormatCustom;\nNumericFormatCustom.propTypes = {\n  name: PropTypes.string.isRequired,\n  onChange: PropTypes.func.isRequired\n};\nexport let nowField = moment().date();\nexport let pushDocs = new Array();\nlet pushPieces = new Array();\n\nfunction CircularProgressWithLabel(props) {\n  return /*#__PURE__*/_jsxDEV(Box, {\n    sx: {\n      position: 'relative',\n      display: 'inline-flex'\n    },\n    children: [/*#__PURE__*/_jsxDEV(CircularProgress, {\n      variant: \"determinate\",\n      ...props\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 104,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Box, {\n      sx: {\n        top: 0,\n        left: 0,\n        bottom: 0,\n        right: 0,\n        position: 'absolute',\n        display: 'flex',\n        alignItems: 'center',\n        justifyContent: 'center'\n      },\n      children: /*#__PURE__*/_jsxDEV(Typography, {\n        variant: \"caption\",\n        component: \"div\",\n        color: \"text.secondary\",\n        children: `${Math.round(props.value)}%`\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 117,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 105,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 103,\n    columnNumber: 5\n  }, this);\n}\n\n_c5 = CircularProgressWithLabel;\nCircularProgressWithLabel.propTypes = {\n  /**\n   * The value of the progress indicator for the determinate variant.\n   * Value between 0 and 100.\n   * @default 0\n   */\n  value: PropTypes.number.isRequired\n}; // Input Field Component \n\nexport default function ReturnInput() {\n  return /*#__PURE__*/_jsxDEV(Media, {\n    queries: {\n      small: '(max-width: 599px)',\n      medium: '(min-width: 600px) and (max-width:1199px)',\n      large: '(min-width: 1200px)'\n    },\n    children: matches => /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [matches.small && /*#__PURE__*/_jsxDEV(ScreenSmall, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 145,\n        columnNumber: 29\n      }, this), matches.medium && /*#__PURE__*/_jsxDEV(SreenLarge, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 146,\n        columnNumber: 30\n      }, this), matches.large && /*#__PURE__*/_jsxDEV(SreenLarge, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 147,\n        columnNumber: 29\n      }, this)]\n    }, void 0, true)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 137,\n    columnNumber: 5\n  }, this);\n}\n_c6 = ReturnInput;\n;\nexport const SreenLarge = () => {\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"wrp-input-pieces\",\n    children: /*#__PURE__*/_jsxDEV(FormInput, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 157,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 156,\n    columnNumber: 5\n  }, this);\n};\n_c7 = SreenLarge;\nexport const ScreenSmall = () => {\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"wrp-input-pieces\",\n    children: /*#__PURE__*/_jsxDEV(FormInput, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 164,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 163,\n    columnNumber: 5\n  }, this);\n};\n_c8 = ScreenSmall;\nexport const FormInput = () => {\n  _s();\n\n  const [imageUpload, setImageUpload] = React.useState(null);\n  const [url, setUrl] = React.useState(null);\n  const [profil, setProfil] = React.useState(null);\n  const [progress, setProgress] = React.useState(0);\n  const [viewBtn, setViewBtn] = React.useState(false);\n  const [exten, setExten] = React.useState(null);\n  const [loading, setLoading] = React.useState(false);\n  const [success, setSuccess] = React.useState(false);\n  const timer = React.useRef();\n  const [values, setValues] = React.useState({\n    textmask: '(100) 000-0000',\n    numberformat: '1320'\n  });\n\n  const handleChange = event => {\n    setValues({ ...values,\n      [event.target.name]: event.target.value\n    });\n  };\n\n  const buttonSx = { ...(success && {\n      bgcolor: green[500],\n      '&:hover': {\n        bgcolor: green[700]\n      }\n    })\n  };\n  React.useEffect(async () => {\n    const querySnapshot = await getDocs(collection(db, \"client\"));\n    querySnapshot.forEach(doc => {\n      // doc.data() is never undefined for query doc snapshots\n      pushPieces.push(doc.id);\n    });\n    const unsub = onSnapshot(doc(db, \"client\", JSON.parse(window.localStorage.getItem('USER'))), doc => {\n      setProfil(doc.data().pretprofile);\n      setExten(doc.data().pretexten);\n    });\n    return () => {\n      clearTimeout(timer.current);\n    };\n  }, []);\n\n  const handleButtonClick = () => {\n    if (!loading) {\n      setSuccess(false);\n      setLoading(true);\n      timer.current = window.setTimeout(() => {\n        setSuccess(true);\n        setLoading(false);\n      }, 2000);\n    }\n  };\n\n  const uploadImage = async () => {\n    if (imageUpload == null) return;\n    const imgRef = imageUpload.name + v4();\n    const imageRef = ref(storage, `pret/${imgRef}`);\n    uploadBytes(imageRef, imageUpload).then(() => {\n      getDownloadURL(imageRef, imageUpload).then(url => {\n        const uploadTask = uploadBytesResumable(imageRef, imageUpload);\n        uploadTask.on('state_changed', snapshot => {\n          const prog = Math.round(snapshot.bytesTransferred / snapshot.totalBytes * 100);\n          setProgress(prog);\n        }, err => window.console.log(err), () => {\n          getDownloadURL(uploadTask.snapshot.ref).then(url => console.log(url));\n        });\n        setUrl(url);\n        const collect = pushPieces.includes(JSON.parse(window.localStorage.getItem('USER')));\n        const washingtonRef = doc(db, collect ? \"client\" : \"agent\", JSON.parse(window.localStorage.getItem('USER'))); // Set the \"capital\" field of the city 'DC'\n\n        updateDoc(washingtonRef, {\n          pretprofile: url,\n          pretexten: imgRef\n        });\n      }).catch(error => {\n        window.console.log(error.message);\n      });\n      setImageUpload(null);\n    }).catch(error => {\n      window.console.log(error.message);\n    });\n    setViewBtn(false);\n    window.console.log(imgRef);\n\n    if (exten != '') {\n      // Create a reference to the file to delete\n      const desertRef = ref(storage, `pret/${exten}`); // Delete the file\n\n      deleteObject(desertRef).then(() => {\n        // File deleted successfully\n        window.console.log('Success remove image');\n      }).catch(error => {\n        window.console.log('Error Reomve'); // Uh-oh, an error occurred!\n      });\n    }\n  };\n\n  const [open, setOpen] = React.useState(false);\n  const [fullWidth, setFullWidth] = React.useState(true);\n  const [maxWidth, setMaxWidth] = React.useState('sm');\n  const navigation = useNavigate();\n  const {\n    register,\n    handleSubmit,\n    control\n  } = useForm({});\n\n  const handleClose = () => {\n    setOpen(false);\n  }; // Ref collection database!\n\n\n  const onSubmit = async data => {\n    window.localStorage.setItem('@!pret&*access*^^', JSON.stringify(false));\n    window.localStorage.setItem('^^&&register__pret', JSON.stringify(false));\n    let money = {\n      cdf: Number(data.digit),\n      usd: 0,\n      pretusd: 0,\n      pretcdf: Number(data.digit),\n      rationusdin: 0,\n      rationusdout: 0,\n      rationcdfin: 0,\n      rationcdfout: 0,\n      date: moment().format()\n    };\n    const clone = { ...money,\n      ...data\n    };\n    documentPret(clone);\n    updateRegister();\n    navigation('/pret/send');\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    autocomplete: \"off\",\n    onSubmit: handleSubmit(onSubmit),\n    children: [/*#__PURE__*/_jsxDEV(FormControl, {\n      sx: {\n        width: '100%'\n      },\n      variant: \"standard\",\n      children: [/*#__PURE__*/_jsxDEV(InputLabel, {\n        htmlFor: \"formatted-text-mask-input\",\n        children: /*#__PURE__*/_jsxDEV(\"h1\", {\n          className: \"pop-up\",\n          children: \"Nom\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 330,\n          columnNumber: 57\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 330,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Controller, {\n        name: \"name\",\n        control: control,\n        render: ({\n          field\n        }) => /*#__PURE__*/_jsxDEV(Input, {\n          inputProps: {\n            autoComplete: \"off\"\n          },\n          name: \"name\",\n          ...field\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 337,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 332,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 329,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(FormControl, {\n      sx: {\n        width: '100%'\n      },\n      variant: \"standard\",\n      children: [/*#__PURE__*/_jsxDEV(InputLabel, {\n        htmlFor: \"formatted-text-mask-input\",\n        children: /*#__PURE__*/_jsxDEV(\"h1\", {\n          className: \"pop-up\",\n          children: \"Adresse domiciliaire actuelle\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 347,\n          columnNumber: 57\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 347,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Controller, {\n        name: \"address\",\n        control: control,\n        render: ({\n          field\n        }) => /*#__PURE__*/_jsxDEV(Input, {\n          inputProps: {\n            autoComplete: \"off\"\n          },\n          name: \"address\",\n          ...field\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 354,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 349,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 346,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(FormControl, {\n      sx: {\n        width: '100%'\n      },\n      variant: \"standard\",\n      children: [/*#__PURE__*/_jsxDEV(InputLabel, {\n        htmlFor: \"formatted-text-mask-input\",\n        children: /*#__PURE__*/_jsxDEV(\"h1\", {\n          className: \"pop-up\",\n          children: \"Sp\\xE9cifiez le projet\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 364,\n          columnNumber: 57\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 364,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Controller, {\n        name: \"specify\",\n        control: control,\n        render: ({\n          field\n        }) => /*#__PURE__*/_jsxDEV(Input, {\n          inputProps: {\n            autoComplete: \"off\"\n          },\n          name: \"specify\",\n          ...field\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 371,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 366,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 363,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Controller, {\n      name: \"costs\",\n      defaultValue: \"\",\n      control: control,\n      render: ({\n        field\n      }) => /*#__PURE__*/_jsxDEV(TextField, {\n        label: /*#__PURE__*/_jsxDEV(\"h2\", {\n          className: \"pop-up\",\n          children: \"Le cout de mon Projet est estim\\xE9 \\xE0 CDF\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 389,\n          columnNumber: 20\n        }, this),\n        value: values.numberformat,\n        onChange: handleChange,\n        inputProps: {\n          autoComplete: \"off\",\n          inputMode: 'decimal'\n        },\n        ...field,\n        name: \"costs\",\n        placeholder: \"0\",\n        id: \"formatted-numberformat-input\",\n        InputProps: {\n          inputComponent: NumericFormatCustom\n        },\n        variant: \"standard\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 388,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 382,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Controller, {\n      name: \"revenu\",\n      defaultValue: \"\",\n      control: control,\n      render: ({\n        field\n      }) => /*#__PURE__*/_jsxDEV(TextField, {\n        label: /*#__PURE__*/_jsxDEV(\"h2\", {\n          className: \"pop-up\",\n          children: \"Mon revenu mensuel estim\\xE9 \\xE0 CDF\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 417,\n          columnNumber: 20\n        }, this),\n        value: values.numberformat,\n        onChange: handleChange,\n        inputProps: {\n          autoComplete: \"off\",\n          inputMode: 'decimal'\n        },\n        ...field,\n        name: \"revenu\",\n        placeholder: \"0\",\n        id: \"formatted-numberformat-input\",\n        InputProps: {\n          inputComponent: NumericFormatCustom\n        },\n        variant: \"standard\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 416,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 410,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Controller, {\n      name: \"apport\",\n      defaultValue: \"\",\n      control: control,\n      render: ({\n        field\n      }) => /*#__PURE__*/_jsxDEV(TextField, {\n        label: /*#__PURE__*/_jsxDEV(\"h2\", {\n          className: \"pop-up\",\n          children: \"Un Apport estim\\xE9 \\xE0 CDF\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 446,\n          columnNumber: 20\n        }, this),\n        value: values.numberformat,\n        onChange: handleChange,\n        inputProps: {\n          autoComplete: \"off\",\n          inputMode: 'decimal'\n        },\n        ...field,\n        name: \"apport\",\n        placeholder: \"0\",\n        id: \"formatted-numberformat-input\",\n        InputProps: {\n          inputComponent: NumericFormatCustom\n        },\n        variant: \"standard\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 445,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 439,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(FormControl, {\n      sx: {\n        width: '100%'\n      },\n      variant: \"standard\",\n      children: [/*#__PURE__*/_jsxDEV(InputLabel, {\n        htmlFor: \"formatted-text-mask-input\",\n        children: /*#__PURE__*/_jsxDEV(\"h1\", {\n          className: \"pop-up\",\n          children: \"Montant demander en lettre\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 469,\n          columnNumber: 57\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 469,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Controller, {\n        name: \"letter\",\n        control: control,\n        render: ({\n          field\n        }) => /*#__PURE__*/_jsxDEV(Input, {\n          inputProps: {\n            autoComplete: \"off\"\n          },\n          name: \"letter\",\n          ...field\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 476,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 471,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 468,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Controller, {\n      name: \"digit\",\n      defaultValue: \"\",\n      control: control,\n      render: ({\n        field\n      }) => /*#__PURE__*/_jsxDEV(TextField, {\n        label: /*#__PURE__*/_jsxDEV(\"h2\", {\n          className: \"pop-up\",\n          children: \"Montant demander en chiffre\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 493,\n          columnNumber: 20\n        }, this),\n        value: values.numberformat,\n        onChange: handleChange,\n        inputProps: {\n          autoComplete: \"off\",\n          inputMode: 'decimal'\n        },\n        ...field,\n        name: \"digit\",\n        placeholder: \"0\",\n        id: \"formatted-numberformat-input\",\n        InputProps: {\n          inputComponent: NumericFormatCustom\n        },\n        variant: \"standard\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 492,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 486,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"import-pieces\",\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Importer pi\\xE8ces justificatives\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 516,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"wrp-pieces-avatar-user\",\n        children: [/*#__PURE__*/_jsxDEV(IconButton, {\n          color: \"primary\",\n          \"aria-label\": \"upload picture\",\n          component: \"label\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"profile-user\",\n            children: [/*#__PURE__*/_jsxDEV(\"img\", {\n              src: '/img/uploadpret.png',\n              alt: 'upload file'\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 523,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              hidden: true,\n              type: \"file\",\n              onChange: event => {\n                setImageUpload(event.target.files[0]);\n                setViewBtn(true);\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 524,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 521,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 520,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(CircularProgressWithLabel, {\n          value: progress\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 535,\n          columnNumber: 11\n        }, this), viewBtn && /*#__PURE__*/_jsxDEV(\"div\", {\n          onClick: uploadImage,\n          children: /*#__PURE__*/_jsxDEV(Box, {\n            sx: {\n              display: 'flex',\n              alignItems: 'center'\n            },\n            children: /*#__PURE__*/_jsxDEV(Box, {\n              sx: {\n                position: 'relative'\n              },\n              children: [/*#__PURE__*/_jsxDEV(Fab, {\n                \"aria-label\": \"save\",\n                color: \"primary\",\n                sx: buttonSx,\n                onClick: handleButtonClick,\n                children: success ? /*#__PURE__*/_jsxDEV(CheckIcon, {}, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 549,\n                  columnNumber: 32\n                }, this) : /*#__PURE__*/_jsxDEV(SaveIcon, {}, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 549,\n                  columnNumber: 48\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 542,\n                columnNumber: 19\n              }, this), loading && /*#__PURE__*/_jsxDEV(CircularProgress, {\n                size: 45,\n                sx: {\n                  color: green[500],\n                  position: 'absolute',\n                  top: -6,\n                  left: -6,\n                  zIndex: 1\n                }\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 553,\n                columnNumber: 21\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 540,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 538,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 537,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 518,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 515,\n      columnNumber: 7\n    }, this), progress > 95 && /*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"Btn\",\n      children: \"Envoyer Formulaire\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 576,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(Dialog, {\n      fullWidth: fullWidth,\n      maxWidth: maxWidth,\n      open: open,\n      onClose: handleClose,\n      children: [/*#__PURE__*/_jsxDEV(DialogTitle, {\n        children: /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"pop-up\",\n          children: \"MuunganoMoney\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 585,\n          columnNumber: 22\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 585,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(DialogContent, {\n        children: /*#__PURE__*/_jsxDEV(DialogContentText, {\n          children: /*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"pop-up\",\n            children: \"Veuillez confirmer la date de naissance\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 589,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 588,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 586,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(DialogActions, {\n        children: /*#__PURE__*/_jsxDEV(Button, {\n          onClick: handleClose,\n          children: /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"pop-up\",\n            children: \"Fermer\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 596,\n            columnNumber: 41\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 596,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 595,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 579,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 327,\n    columnNumber: 5\n  }, this);\n}; // Add Document Pret\n\n_s(FormInput, \"Cu0e+nI6/YabTBoQDmGpKgujV8k=\", false, function () {\n  return [useNavigate, useForm];\n});\n\n_c9 = FormInput;\nexport async function documentPret(data) {\n  await setDoc(doc(db, \"pret\", JSON.parse(window.localStorage.getItem('USER'))), data);\n}\n; // Update docs register\n\nexport async function updateRegister() {\n  const washingtonRef = doc(db, \"client\", JSON.parse(window.localStorage.getItem('USER'))); // Set the \"capital\" field of the city 'DC'\n\n  await updateDoc(washingtonRef, {\n    pretregister: true\n  });\n}\n\nvar _c, _c2, _c3, _c4, _c5, _c6, _c7, _c8, _c9;\n\n$RefreshReg$(_c, \"TextMaskCustom$React.forwardRef\");\n$RefreshReg$(_c2, \"TextMaskCustom\");\n$RefreshReg$(_c3, \"NumericFormatCustom$React.forwardRef\");\n$RefreshReg$(_c4, \"NumericFormatCustom\");\n$RefreshReg$(_c5, \"CircularProgressWithLabel\");\n$RefreshReg$(_c6, \"ReturnInput\");\n$RefreshReg$(_c7, \"SreenLarge\");\n$RefreshReg$(_c8, \"ScreenSmall\");\n$RefreshReg$(_c9, \"FormInput\");","map":{"version":3,"sources":["/Users/USER/Documents/Money/src/Pret/Fran/Form/Input.js"],"names":["React","Media","useForm","Controller","useNavigate","doc","setDoc","updateDoc","increment","onSnapshot","getDocs","collection","MomentUtils","moment","Dialog","DialogActions","DialogContent","DialogTitle","DialogContentText","db","storage","ref","uploadBytes","deleteObject","getDownloadURL","uploadBytesResumable","v4","IconButton","PropTypes","CircularProgress","Typography","Box","VscCheck","green","Button","Fab","CheckIcon","SaveIcon","Input","InputLabel","FormControl","IMaskInput","NumericFormat","TextField","TextMaskCustom","forwardRef","props","onChange","other","value","target","name","propTypes","string","isRequired","func","NumericFormatCustom","values","nowField","date","pushDocs","Array","pushPieces","CircularProgressWithLabel","position","display","top","left","bottom","right","alignItems","justifyContent","Math","round","number","ReturnInput","small","medium","large","matches","SreenLarge","ScreenSmall","FormInput","imageUpload","setImageUpload","useState","url","setUrl","profil","setProfil","progress","setProgress","viewBtn","setViewBtn","exten","setExten","loading","setLoading","success","setSuccess","timer","useRef","setValues","textmask","numberformat","handleChange","event","buttonSx","bgcolor","useEffect","querySnapshot","forEach","push","id","unsub","JSON","parse","window","localStorage","getItem","data","pretprofile","pretexten","clearTimeout","current","handleButtonClick","setTimeout","uploadImage","imgRef","imageRef","then","uploadTask","on","snapshot","prog","bytesTransferred","totalBytes","err","console","log","collect","includes","washingtonRef","catch","error","message","desertRef","open","setOpen","fullWidth","setFullWidth","maxWidth","setMaxWidth","navigation","register","handleSubmit","control","handleClose","onSubmit","setItem","stringify","money","cdf","Number","digit","usd","pretusd","pretcdf","rationusdin","rationusdout","rationcdfin","rationcdfout","format","clone","documentPret","updateRegister","width","field","autoComplete","inputMode","inputComponent","files","color","zIndex","pretregister"],"mappings":"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","sourcesContent":["import React from 'react';\nimport './Input.css';\nimport Media from 'react-media';\nimport { useForm, Controller } from 'react-hook-form';\nimport { useNavigate } from 'react-router-dom';\nimport { doc, setDoc, updateDoc, increment, onSnapshot, getDocs, collection } from 'firebase/firestore';\nimport MomentUtils from \"@date-io/moment\";\nimport moment from 'moment';\nimport \"moment/locale/fr\";\n\nimport Dialog from '@mui/material/Dialog';\nimport DialogActions from '@mui/material/DialogActions';\nimport DialogContent from '@mui/material/DialogContent';\nimport DialogTitle from '@mui/material/DialogTitle';\nimport DialogContentText from '@mui/material/DialogContentText';\n\nimport { db, storage } from '../../../firebase';\n\nimport { ref, uploadBytes, deleteObject, getDownloadURL, uploadBytesResumable } from 'firebase/storage';\nimport { v4 } from 'uuid';\nimport IconButton from '@mui/material/IconButton';\n\nimport PropTypes from 'prop-types';\nimport CircularProgress from '@mui/material/CircularProgress';\nimport Typography from '@mui/material/Typography';\nimport Box from '@mui/material/Box';\nimport { VscCheck } from 'react-icons/vsc';\nimport { green } from '@mui/material/colors';\nimport Button from '@mui/material/Button';\nimport Fab from '@mui/material/Fab';\nimport CheckIcon from '@mui/icons-material/Check';\nimport SaveIcon from '@mui/icons-material/Save';\n\n\nimport Input from '@mui/material/Input';\nimport InputLabel from '@mui/material/InputLabel';\nimport FormControl from '@mui/material/FormControl';\n\nimport { IMaskInput } from 'react-imask';\nimport { NumericFormat } from 'react-number-format';\nimport TextField from '@mui/material/TextField';\n\n// import DateFnsUtils from '@date-io/date-fns'; // choose your lib\n\n\n\nconst TextMaskCustom = React.forwardRef(function TextMaskCustom(props, ref) {\n  const { onChange, ...other } = props;\n  return (\n    <IMaskInput\n      {...other}\n      mask=\"(#00) 000-0000\"\n      definitions={{\n        '#': /[1-9]/,\n      }}\n      inputRef={ref}\n      onAccept={(value) => onChange({ target: { name: props.name, value } })}\n      overwrite\n    />\n  );\n});\nTextMaskCustom.propTypes = {\n  name: PropTypes.string.isRequired,\n  onChange: PropTypes.func.isRequired,\n};\nconst NumericFormatCustom = React.forwardRef(function NumericFormatCustom(\n  props,\n  ref,\n) {\n  const { onChange, ...other } = props;\n\n  return (\n    <NumericFormat\n      {...other}\n      getInputRef={ref}\n      onValueChange={(values) => {\n        onChange({\n          target: {\n            name: props.name,\n            value: values.value,\n          },\n        });\n      }}\n      thousandSeparator\n      valueIsNumericString\n      prefix=\"\"\n    />\n  );\n});\nNumericFormatCustom.propTypes = {\n  name: PropTypes.string.isRequired,\n  onChange: PropTypes.func.isRequired,\n};\n\n\nexport let nowField = moment().date();\nexport let pushDocs = new Array();\n\n\nlet pushPieces = new Array();\nfunction CircularProgressWithLabel(props) {\n  return (\n    <Box sx={{ position: 'relative', display: 'inline-flex' }}>\n      <CircularProgress variant=\"determinate\" {...props} />\n      <Box\n        sx={{\n          top: 0,\n          left: 0,\n          bottom: 0,\n          right: 0,\n          position: 'absolute',\n          display: 'flex',\n          alignItems: 'center',\n          justifyContent: 'center',\n        }}\n      >\n        <Typography variant=\"caption\" component=\"div\" color=\"text.secondary\">\n          {`${Math.round(props.value)}%`}\n        </Typography>\n      </Box>\n    </Box>\n  );\n}\nCircularProgressWithLabel.propTypes = {\n  /**\n   * The value of the progress indicator for the determinate variant.\n   * Value between 0 and 100.\n   * @default 0\n   */\n  value: PropTypes.number.isRequired,\n};\n\n\n// Input Field Component \nexport default function ReturnInput() {\n  return (\n    <Media\n      queries={{\n        small: '(max-width: 599px)',\n        medium: '(min-width: 600px) and (max-width:1199px)',\n        large: '(min-width: 1200px)',\n      }}>\n      {matches => (\n        <>\n          {matches.small && <ScreenSmall />}\n          {matches.medium && <SreenLarge />}\n          {matches.large && <SreenLarge />}\n        </>\n      )}\n    </Media>\n  );\n};\n\nexport const SreenLarge = () => {\n  return (\n    <div className='wrp-input-pieces'>\n      <FormInput />\n    </div>\n  )\n}\nexport const ScreenSmall = () => {\n  return (\n    <div className='wrp-input-pieces'>\n      <FormInput />\n    </div>\n  )\n};\nexport const FormInput = () => {\n\n  const [imageUpload, setImageUpload] = React.useState(null);\n  const [url, setUrl] = React.useState(null);\n  const [profil, setProfil] = React.useState(null);\n  const [progress, setProgress] = React.useState(0);\n  const [viewBtn, setViewBtn] = React.useState(false);\n  const [exten, setExten] = React.useState(null);\n\n  const [loading, setLoading] = React.useState(false);\n  const [success, setSuccess] = React.useState(false);\n  const timer = React.useRef();\n\n\n  const [values, setValues] = React.useState({\n    textmask: '(100) 000-0000',\n    numberformat: '1320',\n  });\n\n  const handleChange = (event) => {\n    setValues({\n      ...values,\n      [event.target.name]: event.target.value,\n    });\n  };\n\n  const buttonSx = {\n    ...(success && {\n      bgcolor: green[500],\n      '&:hover': {\n        bgcolor: green[700],\n      },\n    }),\n  };\n\n  React.useEffect(async () => {\n\n    const querySnapshot = await getDocs(collection(db, \"client\"));\n    querySnapshot.forEach((doc) => {\n      // doc.data() is never undefined for query doc snapshots\n      pushPieces.push(doc.id);\n    });\n\n    const unsub = onSnapshot(doc(db, \"client\", JSON.parse(window.localStorage.getItem('USER'))), (doc) => {\n      setProfil(doc.data().pretprofile);\n      setExten(doc.data().pretexten);\n    });\n\n    return () => {\n      clearTimeout(timer.current);\n    };\n\n  }, []);\n  const handleButtonClick = () => {\n    if (!loading) {\n      setSuccess(false);\n      setLoading(true);\n      timer.current = window.setTimeout(() => {\n        setSuccess(true);\n        setLoading(false);\n      }, 2000);\n    }\n  };\n  const uploadImage = async () => {\n\n    if (imageUpload == null)\n      return;\n\n    const imgRef = imageUpload.name + v4();\n    const imageRef = ref(storage, `pret/${imgRef}`);\n\n\n    uploadBytes(imageRef, imageUpload).then(() => {\n      getDownloadURL(imageRef, imageUpload).then((url) => {\n\n        const uploadTask = uploadBytesResumable(imageRef, imageUpload)\n        uploadTask.on('state_changed', (snapshot) => {\n          const prog = Math.round((snapshot.bytesTransferred / snapshot.totalBytes) * 100);\n          setProgress(prog);\n        },\n          (err) => window.console.log(err), () => {\n            getDownloadURL(uploadTask.snapshot.ref).then((url) => console.log(url))\n          })\n\n        setUrl(url);\n        const collect = pushPieces.includes(JSON.parse(window.localStorage.getItem('USER')));\n        const washingtonRef = doc(db, collect ? \"client\" : \"agent\", JSON.parse(window.localStorage.getItem('USER')));\n        // Set the \"capital\" field of the city 'DC'\n        updateDoc(washingtonRef, {\n          pretprofile: url,\n          pretexten: imgRef\n        });\n\n      }).catch(error => { window.console.log(error.message) })\n      setImageUpload(null);\n\n    }).catch(error => { window.console.log(error.message) });\n    setViewBtn(false);\n\n    window.console.log(imgRef);\n    if (exten != '') {\n      // Create a reference to the file to delete\n      const desertRef = ref(storage, `pret/${exten}`);\n      // Delete the file\n      deleteObject(desertRef).then(() => {\n        // File deleted successfully\n        window.console.log('Success remove image');\n\n      }).catch((error) => {\n        window.console.log('Error Reomve');\n        // Uh-oh, an error occurred!\n      });\n    }\n\n  }\n\n  const [open, setOpen] = React.useState(false);\n  const [fullWidth, setFullWidth] = React.useState(true);\n  const [maxWidth, setMaxWidth] = React.useState('sm');\n\n  const navigation = useNavigate();\n  const { register, handleSubmit, control } = useForm({});\n\n  const handleClose = () => {\n    setOpen(false);\n  };\n\n  // Ref collection database!\n  const onSubmit = async (data) => {\n\n    window.localStorage.setItem('@!pret&*access*^^', JSON.stringify(false));\n    window.localStorage.setItem('^^&&register__pret', JSON.stringify(false));\n\n    let money = {\n\n      cdf: Number(data.digit),\n      usd: 0,\n      pretusd: 0,\n      pretcdf: Number(data.digit),\n      rationusdin: 0,\n      rationusdout: 0,\n      rationcdfin: 0,\n      rationcdfout: 0,\n      date: moment().format()\n\n    };\n    const clone = {\n      ...money,\n      ...data\n\n    }\n\n    documentPret(clone);\n    updateRegister();\n    navigation('/pret/send');\n\n  };\n\n  return (\n    <form autocomplete=\"off\" onSubmit={handleSubmit(onSubmit)}>\n\n      <FormControl sx={{ width: '100%' }} variant=\"standard\">\n        <InputLabel htmlFor=\"formatted-text-mask-input\"><h1 className='pop-up'>Nom</h1></InputLabel>\n\n        <Controller\n          name=\"name\"\n          control={control}\n          render={({ field }) =>\n\n            <Input\n              inputProps={{ autoComplete: \"off\" }}\n              name=\"name\"\n              {...field}\n            />\n\n          }\n        />\n      </FormControl>\n      <FormControl sx={{ width: '100%' }} variant=\"standard\">\n        <InputLabel htmlFor=\"formatted-text-mask-input\"><h1 className='pop-up'>Adresse domiciliaire actuelle</h1></InputLabel>\n\n        <Controller\n          name=\"address\"\n          control={control}\n          render={({ field }) =>\n\n            <Input\n              inputProps={{ autoComplete: \"off\" }}\n              name=\"address\"\n              {...field}\n            />\n\n          }\n        />\n      </FormControl>\n      <FormControl sx={{ width: '100%' }} variant=\"standard\">\n        <InputLabel htmlFor=\"formatted-text-mask-input\"><h1 className='pop-up'>Spécifiez le projet</h1></InputLabel>\n\n        <Controller\n          name=\"specify\"\n          control={control}\n          render={({ field }) =>\n\n            <Input\n              inputProps={{ autoComplete: \"off\" }}\n              name=\"specify\"\n              {...field}\n            />\n\n          }\n        />\n      </FormControl>\n\n\n      <Controller\n        name=\"costs\"\n        defaultValue=''\n        control={control}\n        render={({ field }) =>\n\n          <TextField\n            label={<h2 className='pop-up'>Le cout de mon Projet est estimé à CDF</h2>}\n            value={values.numberformat}\n            onChange={handleChange}\n\n            inputProps={{\n              autoComplete: \"off\", inputMode: 'decimal'\n            }}\n\n            {...field}\n            name=\"costs\"\n            placeholder=\"0\"\n            id=\"formatted-numberformat-input\"\n            InputProps={{\n              inputComponent: NumericFormatCustom,\n            }}\n\n            variant=\"standard\"\n          />\n\n        }\n      />\n      <Controller\n        name=\"revenu\"\n        defaultValue=''\n        control={control}\n        render={({ field }) =>\n\n          <TextField\n            label={<h2 className='pop-up'>Mon revenu mensuel estimé à CDF</h2>}\n            value={values.numberformat}\n            onChange={handleChange}\n\n            inputProps={{\n              autoComplete: \"off\", inputMode: 'decimal'\n            }}\n\n            {...field}\n            name=\"revenu\"\n            placeholder=\"0\"\n            id=\"formatted-numberformat-input\"\n            InputProps={{\n              inputComponent: NumericFormatCustom,\n            }}\n\n            variant=\"standard\"\n          />\n\n        }\n      />\n\n      <Controller\n        name=\"apport\"\n        defaultValue=''\n        control={control}\n        render={({ field }) =>\n\n          <TextField\n            label={<h2 className='pop-up'>Un Apport estimé à CDF</h2>}\n            value={values.numberformat}\n            onChange={handleChange}\n\n            inputProps={{\n              autoComplete: \"off\", inputMode: 'decimal'\n            }}\n\n            {...field}\n            name=\"apport\"\n            placeholder=\"0\"\n            id=\"formatted-numberformat-input\"\n            InputProps={{\n              inputComponent: NumericFormatCustom,\n            }}\n\n            variant=\"standard\"\n          />\n\n        }\n      />\n\n      <FormControl sx={{ width: '100%' }} variant=\"standard\">\n        <InputLabel htmlFor=\"formatted-text-mask-input\"><h1 className='pop-up'>Montant demander en lettre</h1></InputLabel>\n\n        <Controller\n          name=\"letter\"\n          control={control}\n          render={({ field }) =>\n\n            <Input\n              inputProps={{ autoComplete: \"off\" }}\n              name=\"letter\"\n              {...field}\n            />\n\n          }\n        />\n      </FormControl>\n\n      <Controller\n        name=\"digit\"\n        defaultValue=''\n        control={control}\n        render={({ field }) =>\n\n          <TextField\n            label={<h2 className='pop-up'>Montant demander en chiffre</h2>}\n            value={values.numberformat}\n            onChange={handleChange}\n\n            inputProps={{\n              autoComplete: \"off\", inputMode: 'decimal'\n            }}\n\n            {...field}\n            name=\"digit\"\n            placeholder=\"0\"\n            id=\"formatted-numberformat-input\"\n            InputProps={{\n              inputComponent: NumericFormatCustom,\n            }}\n\n            variant=\"standard\"\n          />\n\n        }\n      />\n\n      <div className='import-pieces'>\n        <p>Importer pièces justificatives</p>\n\n        <div className='wrp-pieces-avatar-user'>\n\n          <IconButton color=\"primary\" aria-label=\"upload picture\" component=\"label\">\n            <div className='profile-user'>\n\n              <img src={'/img/uploadpret.png'} alt={'upload file'} />\n              <input\n                hidden\n                type=\"file\"\n                onChange={(event) => {\n                  setImageUpload(event.target.files[0]);\n                  setViewBtn(true);\n                }}\n              />\n            </div>\n          </IconButton>\n\n          <CircularProgressWithLabel value={progress} />\n          {viewBtn &&\n            <div onClick={uploadImage}>\n              <Box sx={{ display: 'flex', alignItems: 'center' }}>\n\n                <Box sx={{ position: 'relative' }}>\n\n                  <Fab\n\n                    aria-label=\"save\"\n                    color=\"primary\"\n                    sx={buttonSx}\n                    onClick={handleButtonClick}\n                  >\n                    {success ? <CheckIcon /> : <SaveIcon />}\n                  </Fab>\n\n                  {loading && (\n                    <CircularProgress\n                      size={45}\n                      sx={{\n                        color: green[500],\n                        position: 'absolute',\n                        top: -6,\n                        left: -6,\n                        zIndex: 1,\n                      }}\n                    />\n                  )}\n                </Box>\n\n              </Box>\n\n            </div>\n          }\n\n\n        </div>\n      </div>\n\n      {progress > 95 &&\n        <button className='Btn'>Envoyer Formulaire</button>\n      }\n\n      <Dialog\n        fullWidth={fullWidth}\n        maxWidth={maxWidth}\n        open={open}\n        onClose={handleClose}\n      >\n        <DialogTitle><span className='pop-up'>MuunganoMoney</span></DialogTitle>\n        <DialogContent>\n\n          <DialogContentText>\n            <p className='pop-up'>\n              Veuillez confirmer la date de naissance\n     </p>\n          </DialogContentText>\n\n        </DialogContent>\n        <DialogActions>\n          <Button onClick={handleClose}><span className='pop-up'>Fermer</span></Button>\n        </DialogActions>\n      </Dialog>\n\n    </form>\n  );\n};\n\n// Add Document Pret\nexport async function documentPret(data) {\n  await setDoc(doc(db, \"pret\", JSON.parse(window.localStorage.getItem('USER'))), data);\n};\n// Update docs register\nexport async function updateRegister() {\n\n  const washingtonRef = doc(db, \"client\", JSON.parse(window.localStorage.getItem('USER')));\n  // Set the \"capital\" field of the city 'DC'\n  await updateDoc(washingtonRef, {\n    pretregister: true\n  });\n\n}\n\n\n\n"]},"metadata":{},"sourceType":"module"}