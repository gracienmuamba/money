{"ast":null,"code":"var _jsxFileName = \"/Users/USER/Desktop/MuunganoMoney/src/Sign/Input.js\",\n    _s = $RefreshSig$(),\n    _s2 = $RefreshSig$();\n\nimport React from 'react';\nimport './Input.css';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport Media from 'react-media';\nimport { useForm } from 'react-hook-form';\nimport { useNavigate } from 'react-router-dom';\nimport ReturnQuote from './Quote'; // Firebase Auth for phone\n\nimport { collection, getDocs } from \"firebase/firestore\";\nimport { signInWithPhoneNumber, RecaptchaVerifier, onAuthStateChanged } from \"firebase/auth\";\nimport { auth, db } from '../firebase';\nimport Button from '@mui/material/Button';\nimport Dialog from '@mui/material/Dialog';\nimport DialogActions from '@mui/material/DialogActions';\nimport DialogContent from '@mui/material/DialogContent';\nimport DialogTitle from '@mui/material/DialogTitle';\nimport DialogContentText from '@mui/material/DialogContentText';\nimport BarLoader from 'react-spinners/BarLoader';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport let phoneX = ''; // Input Field form\n\nexport default function REturnInPutConnexIon() {\n  return /*#__PURE__*/_jsxDEV(Media, {\n    queries: {\n      small: '(max-width: 599px)',\n      medium: '(min-width: 600px) and (max-width:1199px)',\n      large: '(min-width: 1200px)'\n    },\n    children: matches => /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [matches.small && /*#__PURE__*/_jsxDEV(ScreenSmall, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 29\n      }, this), matches.medium && /*#__PURE__*/_jsxDEV(ScreenLarge, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 30\n      }, this), matches.large && /*#__PURE__*/_jsxDEV(ScreenLarge, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 29\n      }, this)]\n    }, void 0, true)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 28,\n    columnNumber: 5\n  }, this);\n}\n_c = REturnInPutConnexIon;\n;\nexport const ScreenLarge = () => /*#__PURE__*/_jsxDEV(\"div\", {\n  className: \"form-input-sign\",\n  children: /*#__PURE__*/_jsxDEV(FormDataInput, {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 47,\n    columnNumber: 5\n  }, this)\n}, void 0, false, {\n  fileName: _jsxFileName,\n  lineNumber: 46,\n  columnNumber: 3\n}, this);\n_c2 = ScreenLarge;\nexport const ScreenSmall = () => /*#__PURE__*/_jsxDEV(\"div\", {\n  className: \"form-input-sign-sm\",\n  children: /*#__PURE__*/_jsxDEV(FormDataInput, {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 52,\n    columnNumber: 5\n  }, this)\n}, void 0, false, {\n  fileName: _jsxFileName,\n  lineNumber: 51,\n  columnNumber: 3\n}, this);\n_c3 = ScreenSmall;\nexport const FormDataInput = () => {\n  _s();\n\n  let regular = /[a-z]+/;\n  let pushClient = new Array();\n  let pushAgent = new Array();\n  const [checked, setChecked] = React.useState(true);\n  const [open, setOpen] = React.useState(false);\n  const [fullWidth, setFullWidth] = React.useState(true);\n  const [maxWidth, setMaxWidth] = React.useState('sm');\n  const [loading, setLoading] = React.useState(false);\n\n  const handleClickOpen = () => {\n    setOpen(true);\n  };\n\n  const handleClose = () => {\n    setOpen(false);\n  };\n\n  let isExistClient;\n  let isExistAgent;\n  const navigation = useNavigate();\n\n  const generateRecaptcha = () => {\n    window.recaptchaVerifier = new RecaptchaVerifier('recaptcha-container', {\n      'size': 'normal',\n      'callback': response => {},\n      'expired-callback': () => {}\n    }, auth);\n  };\n\n  const {\n    register,\n    handleSubmit,\n    formState,\n    reset\n  } = useForm({\n    defaultValues: {\n      phone: '+243'\n    },\n    mode: 'onChange'\n  });\n  const {\n    isSubmitting,\n    isValid\n  } = formState;\n\n  const onSubmit = async data => {\n    if (data.phone.length != 13 || regular.test(data.phone)) {\n      setLoading(true);\n      setTimeout(() => {\n        setLoading(false);\n        setOpen(true);\n      }, 8000);\n      reset();\n    } else {\n      const clientSnapshot = await getDocs(collection(db, \"client\"));\n      clientSnapshot.forEach(doc => {\n        pushClient.push(doc.id);\n      });\n      const agentSnapshot = await getDocs(collection(db, \"agent\"));\n      agentSnapshot.forEach(doc => {\n        pushAgent.push(doc.id);\n      });\n      isExistClient = pushClient.some(value => value == data.phone);\n      isExistAgent = pushAgent.some(value => value == data.phone);\n\n      if (isExistClient || isExistAgent) {\n        let phoneNumber = data.phone;\n        phoneX = data.phone;\n        generateRecaptcha();\n        const appVerifier = window.recaptchaVerifier;\n        setLoading(true);\n        setTimeout(() => {\n          setLoading(false);\n          signInWithPhoneNumber(auth, phoneNumber, appVerifier).then(confirmationResult => {\n            // SMS sent. Prompt user to type the code from the message, then sign the\n            // user in with confirmationResult.confirm(code).\n            window.confirmationResult = confirmationResult;\n            phoneX = data.phone;\n            setChecked(false);\n            setOpen(false);\n            reset();\n          }).catch(error => {\n            // Error; SMS not sent\n            window.console.log(error);\n          });\n        }, 4000);\n      } else {\n        setLoading(true);\n        setTimeout(() => {\n          setLoading(false);\n          setOpen(true);\n        }, 8000);\n        reset();\n      }\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [loading && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"App-loading\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 165,\n      columnNumber: 19\n    }, this), loading && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"App-Icon\",\n      children: /*#__PURE__*/_jsxDEV(BarLoader, {\n        size: 15,\n        color: '#ffeb3b',\n        loading: loading\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 167,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 166,\n      columnNumber: 19\n    }, this), checked ? /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit(onSubmit),\n      children: [/*#__PURE__*/_jsxDEV(ReturnQuote, {\n        Text: `Envoyer, Ã©changer ou accepter des fiat avec un numero personnel sur votre compte.`\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 178,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"phone\",\n        id: \"phone\",\n        placeholder: \"Phone\",\n        name: \"phone\",\n        ...register('phone', {\n          required: true\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 181,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(Dialog, {\n        fullWidth: fullWidth,\n        maxWidth: maxWidth,\n        open: open,\n        onClose: handleClose,\n        children: [/*#__PURE__*/_jsxDEV(DialogTitle, {\n          children: \"MuunganoMoney\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 189,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(DialogContent, {\n          children: /*#__PURE__*/_jsxDEV(DialogContentText, {\n            children: \"Le num\\xE9ro de t\\xE9l\\xE9phone saisi n'est pas encore enregistr\\xE9 aupr\\xE8s de MuunganoMoney.Ou invalide\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 192,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 190,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(DialogActions, {\n          children: /*#__PURE__*/_jsxDEV(Button, {\n            onClick: handleClose,\n            children: \"Fermer\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 198,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 197,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 183,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        id: \"recaptcha-container\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 202,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"Btn-sm\",\n        children: \"Connexion\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 203,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 177,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(InputCodeRecaptcha, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 207,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true);\n}; // input Recaptcha  verifier!\n\n_s(FormDataInput, \"5i0ryjEIRvH72COsLgDJwJW1Pr4=\", false, function () {\n  return [useNavigate, useForm];\n});\n\n_c4 = FormDataInput;\nexport const InputCodeRecaptcha = () => {\n  _s2();\n\n  const navigation = useNavigate();\n  const {\n    register,\n    handleSubmit,\n    formState\n  } = useForm();\n  const [open, setOpen] = React.useState(false);\n  const [fullWidth, setFullWidth] = React.useState(true);\n  const [maxWidth, setMaxWidth] = React.useState('sm');\n\n  const handleClickOpen = () => {\n    setOpen(true);\n  };\n\n  const handleClose = () => {\n    setOpen(false);\n  };\n\n  const onSubmitOTP = async data => {\n    let confirmationResult = window.confirmationResult;\n    confirmationResult.confirm(data.code).then(result => {\n      // User signed in successfully.\n      const user = result.user;\n      !!user.uid && navigation('/dash');\n    }).catch(error => {\n      // User couldn't sign in (bad verification code?)\n      window.console.log(error);\n      setOpen(true);\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    onSubmit: handleSubmit(onSubmitOTP),\n    children: [/*#__PURE__*/_jsxDEV(ReturnQuote, {\n      Text: 'Valider code envoyer.'\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 246,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      placeholder: \"Code Envoyer\",\n      name: \"code\",\n      ...register('code', {\n        required: true\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 247,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"Btn-sm\",\n      children: \"Connexion\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 248,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Dialog, {\n      fullWidth: fullWidth,\n      maxWidth: maxWidth,\n      open: open,\n      onClose: handleClose,\n      children: [/*#__PURE__*/_jsxDEV(DialogTitle, {\n        children: \"MuunganoMoney\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 256,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(DialogContent, {\n        children: /*#__PURE__*/_jsxDEV(DialogContentText, {\n          children: \"Code incorrect, veuillez v\\xE9rifier\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 259,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 257,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(DialogActions, {\n        children: /*#__PURE__*/_jsxDEV(Button, {\n          onClick: handleClose,\n          children: \"Fermer\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 265,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 264,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 250,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 244,\n    columnNumber: 5\n  }, this);\n};\n\n_s2(InputCodeRecaptcha, \"9U39vyC5H7hIEHKxJ0WLHFnM5LI=\", false, function () {\n  return [useNavigate, useForm];\n});\n\n_c5 = InputCodeRecaptcha;\n\nvar _c, _c2, _c3, _c4, _c5;\n\n$RefreshReg$(_c, \"REturnInPutConnexIon\");\n$RefreshReg$(_c2, \"ScreenLarge\");\n$RefreshReg$(_c3, \"ScreenSmall\");\n$RefreshReg$(_c4, \"FormDataInput\");\n$RefreshReg$(_c5, \"InputCodeRecaptcha\");","map":{"version":3,"sources":["/Users/USER/Desktop/MuunganoMoney/src/Sign/Input.js"],"names":["React","Media","useForm","useNavigate","ReturnQuote","collection","getDocs","signInWithPhoneNumber","RecaptchaVerifier","onAuthStateChanged","auth","db","Button","Dialog","DialogActions","DialogContent","DialogTitle","DialogContentText","BarLoader","phoneX","REturnInPutConnexIon","small","medium","large","matches","ScreenLarge","ScreenSmall","FormDataInput","regular","pushClient","Array","pushAgent","checked","setChecked","useState","open","setOpen","fullWidth","setFullWidth","maxWidth","setMaxWidth","loading","setLoading","handleClickOpen","handleClose","isExistClient","isExistAgent","navigation","generateRecaptcha","window","recaptchaVerifier","response","register","handleSubmit","formState","reset","defaultValues","phone","mode","isSubmitting","isValid","onSubmit","data","length","test","setTimeout","clientSnapshot","forEach","doc","push","id","agentSnapshot","some","value","phoneNumber","appVerifier","then","confirmationResult","catch","error","console","log","required","InputCodeRecaptcha","onSubmitOTP","confirm","code","result","user","uid"],"mappings":"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","sourcesContent":["import React from 'react';\nimport './Input.css';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport Media from 'react-media';\nimport { useForm } from 'react-hook-form';\nimport { useNavigate } from 'react-router-dom';\nimport ReturnQuote from './Quote';\n\n// Firebase Auth for phone\nimport { collection, getDocs } from \"firebase/firestore\";\nimport { signInWithPhoneNumber, RecaptchaVerifier, onAuthStateChanged } from \"firebase/auth\";\nimport { auth, db } from '../firebase';\n\nimport Button from '@mui/material/Button';\nimport Dialog from '@mui/material/Dialog';\nimport DialogActions from '@mui/material/DialogActions';\nimport DialogContent from '@mui/material/DialogContent';\nimport DialogTitle from '@mui/material/DialogTitle';\nimport DialogContentText from '@mui/material/DialogContentText';\nimport BarLoader from 'react-spinners/BarLoader';\n\n\nexport let phoneX = '';\n\n// Input Field form\nexport default function REturnInPutConnexIon() {\n  return (\n    <Media\n      queries={{\n        small: '(max-width: 599px)',\n        medium: '(min-width: 600px) and (max-width:1199px)',\n        large: '(min-width: 1200px)',\n      }}>\n      {matches => (\n        <>\n          {matches.small && <ScreenSmall />}\n          {matches.medium && <ScreenLarge />}\n          {matches.large && <ScreenLarge />}\n        </>\n      )}\n    </Media>\n  );\n};\n\nexport const ScreenLarge = () => (\n  <div className='form-input-sign'>\n    <FormDataInput />\n  </div>\n);\nexport const ScreenSmall = () => (\n  <div className='form-input-sign-sm'>\n    <FormDataInput />\n  </div>\n);\nexport const FormDataInput = () => {\n\n  let regular = /[a-z]+/;\n  let pushClient = new Array();\n  let pushAgent = new Array();\n\n  const [checked, setChecked] = React.useState(true);\n  const [open, setOpen] = React.useState(false);\n  const [fullWidth, setFullWidth] = React.useState(true);\n  const [maxWidth, setMaxWidth] = React.useState('sm');\n  const [loading, setLoading] = React.useState(false);\n\n  const handleClickOpen = () => {\n    setOpen(true);\n  };\n  const handleClose = () => {\n    setOpen(false);\n  };\n\n  let isExistClient;\n  let isExistAgent;\n\n  const navigation = useNavigate();\n  const generateRecaptcha = () => {\n    window.recaptchaVerifier = new RecaptchaVerifier('recaptcha-container', {\n      'size': 'normal',\n      'callback': (response) => {\n      },\n      'expired-callback': () => {\n      }\n    }, auth);\n  }\n\n  const { register, handleSubmit, formState, reset } = useForm({\n    defaultValues: { phone: '+243' }, mode: 'onChange'\n  });\n  const { isSubmitting, isValid } = formState;\n\n  const onSubmit = async (data) => {\n\n    if (data.phone.length != 13 || regular.test(data.phone)) {\n\n      setLoading(true);\n      setTimeout(() => {\n        setLoading(false)\n        setOpen(true);\n      }, 8000);\n\n      reset();\n\n    } else {\n\n      const clientSnapshot = await getDocs(collection(db, \"client\"));\n      clientSnapshot.forEach((doc) => {\n        pushClient.push(doc.id);\n      });\n\n      const agentSnapshot = await getDocs(collection(db, \"agent\"));\n      agentSnapshot.forEach((doc) => {\n        pushAgent.push(doc.id);\n      });\n\n      isExistClient = pushClient.some(value => value == data.phone);\n      isExistAgent = pushAgent.some(value => value == data.phone);\n\n      if (isExistClient || isExistAgent) {\n\n        let phoneNumber = data.phone;\n        phoneX = data.phone;\n        generateRecaptcha();\n        const appVerifier = window.recaptchaVerifier;\n\n        setLoading(true);\n        setTimeout(() => {\n\n          setLoading(false)\n          signInWithPhoneNumber(auth, phoneNumber, appVerifier)\n            .then((confirmationResult) => {\n\n              // SMS sent. Prompt user to type the code from the message, then sign the\n              // user in with confirmationResult.confirm(code).\n              window.confirmationResult = confirmationResult;\n              phoneX = data.phone;\n\n              setChecked(false);\n              setOpen(false);\n              reset();\n\n            }).catch((error) => {\n              // Error; SMS not sent\n              window.console.log(error);\n            });\n\n        }, 4000);\n\n      } else {\n\n        setLoading(true);\n        setTimeout(() => {\n          setLoading(false)\n          setOpen(true);\n        }, 8000);\n\n        reset();\n      }\n    }\n  };\n\n  return (\n    <>\n      {loading && <div className='App-loading'></div>}\n      {loading && <div className='App-Icon'>\n        <BarLoader\n          size={15}\n          color={'#ffeb3b'}\n          loading={loading}\n        />\n      </div>}\n\n\n      {checked\n        ?\n        <form onSubmit={handleSubmit(onSubmit)}>\n          <ReturnQuote\n            Text={`Envoyer, Ã©changer ou accepter des fiat avec un numero personnel sur votre compte.`}\n          />\n          <input type='phone' id='phone' placeholder='Phone' name='phone' {...register('phone', { required: true })} />\n\n          <Dialog\n            fullWidth={fullWidth}\n            maxWidth={maxWidth}\n            open={open}\n            onClose={handleClose}\n          >\n            <DialogTitle>MuunganoMoney</DialogTitle>\n            <DialogContent>\n\n              <DialogContentText>\n                Le numÃ©ro de tÃ©lÃ©phone saisi n'est pas encore enregistrÃ© auprÃ¨s de MuunganoMoney.Ou invalide\n     </DialogContentText>\n\n            </DialogContent>\n            <DialogActions>\n              <Button onClick={handleClose}>Fermer</Button>\n            </DialogActions>\n          </Dialog>\n\n          <div id='recaptcha-container'></div>\n          <button className='Btn-sm'>Connexion</button>\n        </form>\n\n        :\n        <InputCodeRecaptcha />\n      }\n    </>\n  );\n};\n\n// input Recaptcha  verifier!\nexport const InputCodeRecaptcha = () => {\n\n  const navigation = useNavigate();\n  const { register, handleSubmit, formState } = useForm();\n  const [open, setOpen] = React.useState(false);\n  const [fullWidth, setFullWidth] = React.useState(true);\n  const [maxWidth, setMaxWidth] = React.useState('sm');\n\n  const handleClickOpen = () => {\n    setOpen(true);\n  };\n  const handleClose = () => {\n    setOpen(false);\n  };\n\n  const onSubmitOTP = async (data) => {\n\n    let confirmationResult = window.confirmationResult;\n    confirmationResult.confirm(data.code).then((result) => {\n      // User signed in successfully.\n      const user = result.user;\n      !!user.uid && navigation('/dash');\n    }).catch((error) => {\n      // User couldn't sign in (bad verification code?)\n      window.console.log(error);\n      setOpen(true);\n    });\n  };\n\n  return (\n    <form onSubmit={handleSubmit(onSubmitOTP)}>\n\n      <ReturnQuote Text={'Valider code envoyer.'} />\n      <input type='text' placeholder='Code Envoyer' name='code' {...register('code', { required: true })} />\n      <button className='Btn-sm'>Connexion</button>\n\n      <Dialog\n        fullWidth={fullWidth}\n        maxWidth={maxWidth}\n        open={open}\n        onClose={handleClose}\n      >\n        <DialogTitle>MuunganoMoney</DialogTitle>\n        <DialogContent>\n\n          <DialogContentText>\n            Code incorrect, veuillez vÃ©rifier\n     </DialogContentText>\n\n        </DialogContent>\n        <DialogActions>\n          <Button onClick={handleClose}>Fermer</Button>\n        </DialogActions>\n      </Dialog>\n\n    </form>\n  );\n};\n"]},"metadata":{},"sourceType":"module"}