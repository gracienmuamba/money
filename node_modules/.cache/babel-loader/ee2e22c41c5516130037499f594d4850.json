{"ast":null,"code":"var _jsxFileName = \"/Users/USER/Desktop/Awesome/src/Test.js\",\n    _s = $RefreshSig$();\n\nimport React from \"react\";\nimport { useForm } from \"react-hook-form\"; // The following component is an example of your existing Input Component\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst Input = ({\n  label,\n  register,\n  required\n}) => /*#__PURE__*/_jsxDEV(_Fragment, {\n  children: [/*#__PURE__*/_jsxDEV(\"label\", {\n    children: label\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 7,\n    columnNumber: 3\n  }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n    type: \"email\",\n    ...register(label, {\n      required\n    })\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 8,\n    columnNumber: 3\n  }, this)]\n}, void 0, true); // you can use React.forwardRef to pass the ref too\n// const Select = React.forwardRef(({ onChange, onBlur, name, label }, ref) => (\n//  <>\n//   <label>{label}</label>\n//   <select name={name} ref={ref} onChange={onChange} onBlur={onBlur}>\n//    <option value=\"20\">20</option>\n//    <option value=\"30\">30</option>\n//   </select>\n//  </>\n// ));\n\n\n_c = Input;\n\nconst App = () => {\n  _s();\n\n  const {\n    register,\n    handleSubmit\n  } = useForm();\n\n  const onSubmit = data => {\n    alert(JSON.stringify(data));\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    onSubmit: handleSubmit(onSubmit),\n    children: [/*#__PURE__*/_jsxDEV(Input, {\n      label: \"First Name\",\n      register: register,\n      required: true\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 4\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      type: \"submit\",\n      children: \"send\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 4\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 32,\n    columnNumber: 3\n  }, this);\n};\n\n_s(App, \"zkd3JmxRK/AmyiWtSfciHeYO5Zk=\", false, function () {\n  return [useForm];\n});\n\n_c2 = App;\nexport default App;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"Input\");\n$RefreshReg$(_c2, \"App\");","map":{"version":3,"sources":["/Users/USER/Desktop/Awesome/src/Test.js"],"names":["React","useForm","Input","label","register","required","App","handleSubmit","onSubmit","data","alert","JSON","stringify"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,OAAT,QAAwB,iBAAxB,C,CAEA;;;;;AACA,MAAMC,KAAK,GAAG,CAAC;AAAEC,EAAAA,KAAF;AAASC,EAAAA,QAAT;AAAmBC,EAAAA;AAAnB,CAAD,kBACb;AAAA,0BACC;AAAA,cAAQF;AAAR;AAAA;AAAA;AAAA;AAAA,UADD,eAEC;AAAO,IAAA,IAAI,EAAC,OAAZ;AAAA,OAAwBC,QAAQ,CAACD,KAAD,EAAQ;AAAEE,MAAAA;AAAF,KAAR;AAAhC;AAAA;AAAA;AAAA;AAAA,UAFD;AAAA,gBADD,C,CAOA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;KAhBMH,K;;AAmBN,MAAMI,GAAG,GAAG,MAAM;AAAA;;AACjB,QAAM;AAAEF,IAAAA,QAAF;AAAYG,IAAAA;AAAZ,MAA6BN,OAAO,EAA1C;;AAEA,QAAMO,QAAQ,GAAIC,IAAD,IAAU;AAC1BC,IAAAA,KAAK,CAACC,IAAI,CAACC,SAAL,CAAeH,IAAf,CAAD,CAAL;AACA,GAFD;;AAIA,sBACC;AAAM,IAAA,QAAQ,EAAEF,YAAY,CAACC,QAAD,CAA5B;AAAA,4BACC,QAAC,KAAD;AAAO,MAAA,KAAK,EAAC,YAAb;AAA0B,MAAA,QAAQ,EAAEJ,QAApC;AAA8C,MAAA,QAAQ;AAAtD;AAAA;AAAA;AAAA;AAAA,YADD,eAGC;AAAQ,MAAA,IAAI,EAAC,QAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAHD;AAAA;AAAA;AAAA;AAAA;AAAA,UADD;AAOA,CAdD;;GAAME,G;UAC8BL,O;;;MAD9BK,G;AAgBN,eAAeA,GAAf","sourcesContent":["import React from \"react\";\nimport { useForm } from \"react-hook-form\";\n\n// The following component is an example of your existing Input Component\nconst Input = ({ label, register, required }) => (\n <>\n  <label>{label}</label>\n  <input type='email' {...register(label, { required })} />\n </>\n);\n\n// you can use React.forwardRef to pass the ref too\n// const Select = React.forwardRef(({ onChange, onBlur, name, label }, ref) => (\n//  <>\n//   <label>{label}</label>\n//   <select name={name} ref={ref} onChange={onChange} onBlur={onBlur}>\n//    <option value=\"20\">20</option>\n//    <option value=\"30\">30</option>\n//   </select>\n//  </>\n// ));\n\n\nconst App = () => {\n const { register, handleSubmit } = useForm();\n\n const onSubmit = (data) => {\n  alert(JSON.stringify(data));\n };\n\n return (\n  <form onSubmit={handleSubmit(onSubmit)}>\n   <Input label=\"First Name\" register={register} required />\n   {/* <Select label=\"Age\" {...register(\"Age\")} /> */}\n   <button type=\"submit\">send</button>\n  </form>\n );\n};\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}