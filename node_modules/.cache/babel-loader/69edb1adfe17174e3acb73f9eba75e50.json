{"ast":null,"code":"var _jsxFileName = \"/Users/USER/Desktop/Agent/src/Send/USD/Input.js\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport './Input.css';\nimport { useForm } from 'react-hook-form';\nimport Media from 'react-media';\nimport { useNavigate } from 'react-router-dom';\nimport { phoneX } from '../Phone/Input';\nimport { doc, getDoc, updateDoc, serverTimestamp } from \"firebase/firestore\";\nimport { db } from '../../firebase';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport let prixSuccess = 0; // withdraw input\n\nexport default function ReturnWithdrAwInput() {\n  return /*#__PURE__*/_jsxDEV(Media, {\n    queries: {\n      small: '(max-width: 599px)',\n      medium: '(min-width: 600px) and (max-width:1199px)',\n      large: '(min-width: 1200px)'\n    },\n    children: matches => /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [matches.small && /*#__PURE__*/_jsxDEV(ScreenSmall, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 25,\n        columnNumber: 24\n      }, this), matches.medium && /*#__PURE__*/_jsxDEV(ScreenLarge, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 25\n      }, this), matches.large && /*#__PURE__*/_jsxDEV(ScreenLarge, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 24\n      }, this)]\n    }, void 0, true)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 17,\n    columnNumber: 3\n  }, this);\n}\n_c = ReturnWithdrAwInput;\n;\nexport const ScreenLarge = () => /*#__PURE__*/_jsxDEV(\"div\", {\n  className: \"wrp-withdraw-input\",\n  children: /*#__PURE__*/_jsxDEV(FormInput, {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 36,\n    columnNumber: 3\n  }, this)\n}, void 0, false, {\n  fileName: _jsxFileName,\n  lineNumber: 35,\n  columnNumber: 2\n}, this);\n_c2 = ScreenLarge;\nexport const ScreenSmall = () => /*#__PURE__*/_jsxDEV(\"div\", {\n  className: \"wrp-withdraw-input-sm\",\n  children: /*#__PURE__*/_jsxDEV(FormInput, {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 41,\n    columnNumber: 3\n  }, this)\n}, void 0, false, {\n  fileName: _jsxFileName,\n  lineNumber: 40,\n  columnNumber: 2\n}, this);\n_c3 = ScreenSmall;\nexport const FormInput = () => {\n  _s();\n\n  const navigation = useNavigate();\n  const {\n    handleSubmit,\n    register,\n    reset\n  } = useForm();\n  const [getPin, setGetPin] = React.useState('');\n  const [getUsd, setGetUsd] = React.useState(null);\n  const [user, setUser] = React.useState(null);\n  React.useEffect(async () => {\n    const docRefPin = doc(db, \"ungama\", \"money\");\n    const docSnapPin = await getDoc(docRefPin);\n\n    if (docSnapPin.exists()) {\n      setGetPin(docSnapPin.data().pin);\n    }\n\n    ;\n    const agentRef = doc(db, \"agent\", phoneX);\n    const agentSnap = await getDoc(agentRef);\n\n    if (agentSnap.exists()) {\n      setGetUsd(Number(agentSnap.data().usd));\n      setUser(agentSnap.data().firstname);\n    }\n  }, []);\n\n  const onSubmit = async data => {\n    if (getPin == data.code && data.code.length == 6) {\n      if (data.count > 2500) {\n        window.alert(`La valeur est superieur à 200000`);\n        reset();\n      } else {\n        addSoldeAgent(phoneX, Number(getUsd) + Number(data.count), data.count);\n        updateSolde(data.count, user);\n        prixSuccess = data.count;\n        navigation('/send/success-usd');\n      }\n    } else {\n      prixSuccess = data.count;\n      window.alert(`Erreur de code d'accès invalide`);\n      reset();\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    onSubmit: handleSubmit(onSubmit),\n    children: [/*#__PURE__*/_jsxDEV(\"input\", {\n      type: 'text',\n      ...register('count', {\n        required: true\n      }),\n      name: \"count\",\n      placeholder: 'USD'\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 103,\n      columnNumber: 4\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: 'text',\n      ...register('code', {\n        required: true\n      }),\n      name: \"code\",\n      placeholder: '••••••'\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 108,\n      columnNumber: 4\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"Btn\",\n      children: \"Envoyer\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 114,\n      columnNumber: 4\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 101,\n    columnNumber: 3\n  }, this);\n}; // get money client\n\n_s(FormInput, \"FDjex+n16Jh3coYpmSW8xKwSyMU=\", false, function () {\n  return [useNavigate, useForm];\n});\n\n_c4 = FormInput;\nexport const updateSolde = async (solde, newSolde, actif, userClient) => {\n  const washingtonRef = doc(db, \"ungama\", \"money\"); // Set the \"capital\" field of the city 'DC'\n\n  await updateDoc(washingtonRef, {\n    usd: Math.floor(newSolde),\n    allusd: Math.floor(actif),\n    money: Math.floor(Number(solde)),\n    user: userClient\n  });\n};\nexport const addSoldeAgent = async (numPhoneInDocs, money, solde) => {\n  const washingtonRef = doc(db, \"agent\", numPhoneInDocs); // Set the \"capital\" field of the city 'DC'\n\n  await updateDoc(washingtonRef, {\n    usd: Math.floor(money),\n    money: Math.floor(solde),\n    unite: 'usd',\n    delay: serverTimestamp()\n  });\n};\n\nvar _c, _c2, _c3, _c4;\n\n$RefreshReg$(_c, \"ReturnWithdrAwInput\");\n$RefreshReg$(_c2, \"ScreenLarge\");\n$RefreshReg$(_c3, \"ScreenSmall\");\n$RefreshReg$(_c4, \"FormInput\");","map":{"version":3,"sources":["/Users/USER/Desktop/Agent/src/Send/USD/Input.js"],"names":["React","useForm","Media","useNavigate","phoneX","doc","getDoc","updateDoc","serverTimestamp","db","prixSuccess","ReturnWithdrAwInput","small","medium","large","matches","ScreenLarge","ScreenSmall","FormInput","navigation","handleSubmit","register","reset","getPin","setGetPin","useState","getUsd","setGetUsd","user","setUser","useEffect","docRefPin","docSnapPin","exists","data","pin","agentRef","agentSnap","Number","usd","firstname","onSubmit","code","length","count","window","alert","addSoldeAgent","updateSolde","required","solde","newSolde","actif","userClient","washingtonRef","Math","floor","allusd","money","numPhoneInDocs","unite","delay"],"mappings":"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","sourcesContent":["\nimport React from 'react';\nimport './Input.css';\nimport { useForm } from 'react-hook-form';\nimport Media from 'react-media';\nimport { useNavigate } from 'react-router-dom';\nimport { phoneX } from '../Phone/Input';\nimport { doc, getDoc, updateDoc, serverTimestamp } from \"firebase/firestore\";\n\nimport { db } from '../../firebase';\n\nexport let prixSuccess = 0;\n\n// withdraw input\nexport default function ReturnWithdrAwInput() {\n return (\n  <Media\n   queries={{\n    small: '(max-width: 599px)',\n    medium: '(min-width: 600px) and (max-width:1199px)',\n    large: '(min-width: 1200px)',\n   }}>\n   {matches => (\n    <>\n     {matches.small && <ScreenSmall />}\n     {matches.medium && <ScreenLarge />}\n     {matches.large && <ScreenLarge />}\n    </>\n   )}\n  </Media>\n );\n};\n\nexport const ScreenLarge = () => (\n <div className='wrp-withdraw-input'>\n  <FormInput />\n </div>\n);\nexport const ScreenSmall = () => (\n <div className='wrp-withdraw-input-sm'>\n  <FormInput />\n </div>\n);\nexport const FormInput = () => {\n\n\n\n const navigation = useNavigate();\n const { handleSubmit, register, reset } = useForm();\n const [getPin, setGetPin] = React.useState('');\n const [getUsd, setGetUsd] = React.useState(null);\n const [user, setUser] = React.useState(null);\n\n\n\n React.useEffect(async () => {\n\n  const docRefPin = doc(db, \"ungama\", \"money\");\n  const docSnapPin = await getDoc(docRefPin);\n\n  if (docSnapPin.exists()) {\n   setGetPin(docSnapPin.data().pin);\n\n  };\n\n  const agentRef = doc(db, \"agent\", phoneX);\n  const agentSnap = await getDoc(agentRef);\n\n  if (agentSnap.exists()) {\n   setGetUsd(Number(agentSnap.data().usd));\n   setUser(agentSnap.data().firstname);\n  }\n\n }, []);\n\n const onSubmit = async (data) => {\n\n  if (getPin == data.code && data.code.length == 6) {\n\n   if (data.count > 2500) {\n    window.alert(`La valeur est superieur à 200000`);\n    reset();\n\n   } else {\n\n    addSoldeAgent(phoneX, Number(getUsd) + Number(data.count), data.count);\n    updateSolde(data.count, user);\n    prixSuccess = data.count;\n    navigation('/send/success-usd');\n   }\n\n  } else {\n   prixSuccess = data.count;\n   window.alert(`Erreur de code d'accès invalide`)\n   reset();\n  }\n\n };\n\n return (\n  <form onSubmit={handleSubmit(onSubmit)}>\n\n   <input type={'text'}\n    {...register('count', { required: true })}\n    name=\"count\"\n    placeholder={'USD'}\n   />\n   <input type={'text'}\n    {...register('code', { required: true })}\n    name=\"code\"\n    placeholder={'••••••'}\n   />\n\n   <button className='Btn'>Envoyer</button>\n  </form>\n );\n};\n\n\n// get money client\nexport const updateSolde = async (solde, newSolde, actif, userClient) => {\n\n const washingtonRef = doc(db, \"ungama\", \"money\");\n\n // Set the \"capital\" field of the city 'DC'\n await updateDoc(washingtonRef, {\n  usd: Math.floor(newSolde),\n  allusd: Math.floor(actif),\n  money: Math.floor(Number(solde)),\n  user: userClient\n });\n\n};\n\nexport const addSoldeAgent = async (numPhoneInDocs, money, solde) => {\n\n const washingtonRef = doc(db, \"agent\", numPhoneInDocs);\n // Set the \"capital\" field of the city 'DC'\n await updateDoc(washingtonRef, {\n  usd: Math.floor(money),\n  money: Math.floor(solde),\n  unite: 'usd',\n  delay: serverTimestamp()\n });\n};"]},"metadata":{},"sourceType":"module"}