{"ast":null,"code":"var _jsxFileName = \"/Users/USER/Desktop/Agent/src/Profil/Main/Right/Basic.js\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport './Basic.css';\nimport ReturnHeAd from './Head';\nimport ReturnText from './Text';\nimport { collection, getDocs, doc, onSnapshot } from \"firebase/firestore\";\nimport { db } from '../../../firebase'; // Return Box \n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function BasicInFo() {\n  _s();\n\n  let pushDocs = new Array();\n  const [numPhone, setNumPhone] = React.useEffect();\n  React.useEffect(async () => {\n    const querySnapshot = await getDocs(collection(db, \"client\"));\n    querySnapshot.forEach(doc => {\n      pushDocs.push(doc.id);\n    });\n    const collections = pushDocs.some(value => value == JSON.parse(window.localStorage.getItem('%^info&*ºº––')));\n    const unsub = onSnapshot(doc(db, collections ? \"client\" : \"agent\", JSON.parse(window.localStorage.getItem('%^info&*ºº––'))), doc => {\n      setNumPhone(doc.data().email);\n    });\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"basic-info\",\n    children: [/*#__PURE__*/_jsxDEV(ReturnHeAd, {\n      Text: \"basic information\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 4\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"info-flex-gap\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 4\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 32,\n    columnNumber: 3\n  }, this);\n}\n\n_s(BasicInFo, \"F+px/L3HJQcQZNdQci3YnlTkAz4=\");\n\n_c = BasicInFo;\n;\n\nvar _c;\n\n$RefreshReg$(_c, \"BasicInFo\");","map":{"version":3,"sources":["/Users/USER/Desktop/Agent/src/Profil/Main/Right/Basic.js"],"names":["React","ReturnHeAd","ReturnText","collection","getDocs","doc","onSnapshot","db","BasicInFo","pushDocs","Array","numPhone","setNumPhone","useEffect","querySnapshot","forEach","push","id","collections","some","value","JSON","parse","window","localStorage","getItem","unsub","data","email"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAO,aAAP;AACA,OAAOC,UAAP,MAAuB,QAAvB;AACA,OAAOC,UAAP,MAAuB,QAAvB;AACA,SAASC,UAAT,EAAqBC,OAArB,EAA8BC,GAA9B,EAAmCC,UAAnC,QAAqD,oBAArD;AACA,SAASC,EAAT,QAAmB,mBAAnB,C,CAKA;;;AACA,eAAe,SAASC,SAAT,GAAqB;AAAA;;AAEnC,MAAIC,QAAQ,GAAG,IAAIC,KAAJ,EAAf;AACA,QAAM,CAACC,QAAD,EAAWC,WAAX,IAA0BZ,KAAK,CAACa,SAAN,EAAhC;AAEAb,EAAAA,KAAK,CAACa,SAAN,CAAgB,YAAY;AAE3B,UAAMC,aAAa,GAAG,MAAMV,OAAO,CAACD,UAAU,CAACI,EAAD,EAAK,QAAL,CAAX,CAAnC;AACAO,IAAAA,aAAa,CAACC,OAAd,CAAuBV,GAAD,IAAS;AAC9BI,MAAAA,QAAQ,CAACO,IAAT,CAAcX,GAAG,CAACY,EAAlB;AACA,KAFD;AAIA,UAAMC,WAAW,GAAGT,QAAQ,CAACU,IAAT,CAAcC,KAAK,IAAIA,KAAK,IAAIC,IAAI,CAACC,KAAL,CAAWC,MAAM,CAACC,YAAP,CAAoBC,OAApB,CAA4B,cAA5B,CAAX,CAAhC,CAApB;AACA,UAAMC,KAAK,GAAGpB,UAAU,CAACD,GAAG,CAACE,EAAD,EAAKW,WAAW,GAAG,QAAH,GAAc,OAA9B,EAAuCG,IAAI,CAACC,KAAL,CAAWC,MAAM,CAACC,YAAP,CAAoBC,OAApB,CAA4B,cAA5B,CAAX,CAAvC,CAAJ,EAAsGpB,GAAD,IAAS;AACrIO,MAAAA,WAAW,CAACP,GAAG,CAACsB,IAAJ,GAAWC,KAAZ,CAAX;AACA,KAFuB,CAAxB;AAIA,GAZD,EAYG,EAZH;AAcA,sBACC;AAAK,IAAA,SAAS,EAAC,YAAf;AAAA,4BACC,QAAC,UAAD;AAAY,MAAA,IAAI,EAAC;AAAjB;AAAA;AAAA;AAAA;AAAA,YADD,eAGC;AAAK,MAAA,SAAS,EAAC;AAAf;AAAA;AAAA;AAAA;AAAA,YAHD;AAAA;AAAA;AAAA;AAAA;AAAA,UADD;AAUA;;GA7BuBpB,S;;KAAAA,S;AA6BvB","sourcesContent":["import React from 'react';\nimport './Basic.css';\nimport ReturnHeAd from './Head';\nimport ReturnText from './Text';\nimport { collection, getDocs, doc, onSnapshot } from \"firebase/firestore\";\nimport { db } from '../../../firebase';\n\n\n\n\n// Return Box \nexport default function BasicInFo() {\n\n let pushDocs = new Array();\n const [numPhone, setNumPhone] = React.useEffect();\n\n React.useEffect(async () => {\n\n  const querySnapshot = await getDocs(collection(db, \"client\"));\n  querySnapshot.forEach((doc) => {\n   pushDocs.push(doc.id);\n  });\n\n  const collections = pushDocs.some(value => value == JSON.parse(window.localStorage.getItem('%^info&*ºº––')));\n  const unsub = onSnapshot(doc(db, collections ? \"client\" : \"agent\", JSON.parse(window.localStorage.getItem('%^info&*ºº––'))), (doc) => {\n   setNumPhone(doc.data().email);\n  });\n\n }, []);\n\n return (\n  <div className='basic-info'>\n   <ReturnHeAd Text='basic information' />\n\n   <div className='info-flex-gap'>\n    {/* <ReturnText subject='Phone' Info={numPhone} /> */}\n   </div>\n\n  </div>\n );\n};"]},"metadata":{},"sourceType":"module"}