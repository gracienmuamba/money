{"ast":null,"code":"var _jsxFileName = \"/Users/USER/Desktop/Agent/src/Dash/All/PrixBlocked.js\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport { doc, getDoc } from \"firebase/firestore\";\nimport { db } from '../../firebase';\nimport Media from 'react-media';\nimport './PrixCdf.css'; // Return PrixCdf Component \n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport default function ReturnPrixCdfBlocked() {\n  return /*#__PURE__*/_jsxDEV(Media, {\n    queries: {\n      small: '(max-width: 599px)',\n      medium: '(min-width: 600px) and (max-width:1199px)',\n      large: '(min-width: 1200px)'\n    },\n    children: matches => /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [matches.small && /*#__PURE__*/_jsxDEV(ScreenSmall, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 20,\n        columnNumber: 24\n      }, this), matches.medium && /*#__PURE__*/_jsxDEV(ScreenLarge, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 21,\n        columnNumber: 25\n      }, this), matches.large && /*#__PURE__*/_jsxDEV(ScreenLarge, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 22,\n        columnNumber: 24\n      }, this)]\n    }, void 0, true)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 12,\n    columnNumber: 3\n  }, this);\n}\n_c = ReturnPrixCdfBlocked;\n;\nexport const ScreenLarge = () => /*#__PURE__*/_jsxDEV(\"div\", {\n  className: \"wrp-prixcdf-all\",\n  children: /*#__PURE__*/_jsxDEV(ViewText, {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 32,\n    columnNumber: 3\n  }, this)\n}, void 0, false, {\n  fileName: _jsxFileName,\n  lineNumber: 31,\n  columnNumber: 2\n}, this);\n_c2 = ScreenLarge;\nexport const ScreenSmall = () => /*#__PURE__*/_jsxDEV(\"div\", {\n  className: \"wrp-prixcdf-all-sm\",\n  children: /*#__PURE__*/_jsxDEV(ViewText, {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 37,\n    columnNumber: 3\n  }, this)\n}, void 0, false, {\n  fileName: _jsxFileName,\n  lineNumber: 36,\n  columnNumber: 2\n}, this);\n_c3 = ScreenSmall;\nexport const ViewText = () => {\n  _s();\n\n  const [prix, setPrix] = React.useState(null);\n  React.useEffect(async () => {\n    const docRef = doc(db, \"ungama\", \"money\");\n    const docSnap = await getDoc(docRef);\n\n    if (docSnap.exists()) {\n      setPrix(docSnap.data().allblocked);\n    }\n\n    ;\n  }, []);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: prix\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 4\n    }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n      style: {\n        color: '#d2d0ce'\n      },\n      children: \"CDF\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 4\n    }, this)]\n  }, void 0, true);\n};\n\n_s(ViewText, \"oe5HX8EL/X71uu/1h9xh3gIHQf8=\");\n\n_c4 = ViewText;\n\nvar _c, _c2, _c3, _c4;\n\n$RefreshReg$(_c, \"ReturnPrixCdfBlocked\");\n$RefreshReg$(_c2, \"ScreenLarge\");\n$RefreshReg$(_c3, \"ScreenSmall\");\n$RefreshReg$(_c4, \"ViewText\");","map":{"version":3,"sources":["/Users/USER/Desktop/Agent/src/Dash/All/PrixBlocked.js"],"names":["React","doc","getDoc","db","Media","ReturnPrixCdfBlocked","small","medium","large","matches","ScreenLarge","ScreenSmall","ViewText","prix","setPrix","useState","useEffect","docRef","docSnap","exists","data","allblocked","color"],"mappings":";;;AACA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,GAAT,EAAcC,MAAd,QAA4B,oBAA5B;AACA,SAASC,EAAT,QAAmB,gBAAnB;AACA,OAAOC,KAAP,MAAkB,aAAlB;AACA,OAAO,eAAP,C,CAGA;;;;AACA,eAAe,SAASC,oBAAT,GAAgC;AAC9C,sBACC,QAAC,KAAD;AACC,IAAA,OAAO,EAAE;AACRC,MAAAA,KAAK,EAAE,oBADC;AAERC,MAAAA,MAAM,EAAE,2CAFA;AAGRC,MAAAA,KAAK,EAAE;AAHC,KADV;AAAA,cAMEC,OAAO,iBACP;AAAA,iBACEA,OAAO,CAACH,KAAR,iBAAiB,QAAC,WAAD;AAAA;AAAA;AAAA;AAAA,cADnB,EAEEG,OAAO,CAACF,MAAR,iBAAkB,QAAC,WAAD;AAAA;AAAA;AAAA;AAAA,cAFpB,EAGEE,OAAO,CAACD,KAAR,iBAAiB,QAAC,WAAD;AAAA;AAAA;AAAA;AAAA,cAHnB;AAAA;AAPF;AAAA;AAAA;AAAA;AAAA,UADD;AAgBA;KAjBuBH,oB;AAiBvB;AAGD,OAAO,MAAMK,WAAW,GAAG,mBAC1B;AAAK,EAAA,SAAS,EAAC,iBAAf;AAAA,yBACC,QAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AADD;AAAA;AAAA;AAAA;AAAA,QADM;MAAMA,W;AAKb,OAAO,MAAMC,WAAW,GAAG,mBAC1B;AAAK,EAAA,SAAS,EAAC,oBAAf;AAAA,yBACC,QAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AADD;AAAA;AAAA;AAAA;AAAA,QADM;MAAMA,W;AAMb,OAAO,MAAMC,QAAQ,GAAG,MAAM;AAAA;;AAC7B,QAAM,CAACC,IAAD,EAAOC,OAAP,IAAkBd,KAAK,CAACe,QAAN,CAAe,IAAf,CAAxB;AAEAf,EAAAA,KAAK,CAACgB,SAAN,CAAgB,YAAY;AAE3B,UAAMC,MAAM,GAAGhB,GAAG,CAACE,EAAD,EAAK,QAAL,EAAe,OAAf,CAAlB;AACA,UAAMe,OAAO,GAAG,MAAMhB,MAAM,CAACe,MAAD,CAA5B;;AAEA,QAAIC,OAAO,CAACC,MAAR,EAAJ,EAAsB;AACrBL,MAAAA,OAAO,CAACI,OAAO,CAACE,IAAR,GAAeC,UAAhB,CAAP;AACA;;AAAA;AAED,GATD,EASG,EATH;AAWA,sBACC;AAAA,4BACC;AAAA,gBAAKR;AAAL;AAAA;AAAA;AAAA;AAAA,YADD,eAEC;AAAM,MAAA,KAAK,EAAE;AAAES,QAAAA,KAAK,EAAE;AAAT,OAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAFD;AAAA,kBADD;AAMA,CApBM;;GAAMV,Q;;MAAAA,Q","sourcesContent":["\nimport React from 'react';\nimport { doc, getDoc } from \"firebase/firestore\";\nimport { db } from '../../firebase';\nimport Media from 'react-media';\nimport './PrixCdf.css';\n\n\n// Return PrixCdf Component \nexport default function ReturnPrixCdfBlocked() {\n return (\n  <Media\n   queries={{\n    small: '(max-width: 599px)',\n    medium: '(min-width: 600px) and (max-width:1199px)',\n    large: '(min-width: 1200px)',\n   }}>\n   {matches => (\n    <>\n     {matches.small && <ScreenSmall />}\n     {matches.medium && <ScreenLarge />}\n     {matches.large && <ScreenLarge />}\n    </>\n   )}\n  </Media>\n );\n};\n\n\nexport const ScreenLarge = () => (\n <div className='wrp-prixcdf-all'>\n  <ViewText />\n </div>\n);\nexport const ScreenSmall = () => (\n <div className='wrp-prixcdf-all-sm'>\n  <ViewText />\n </div>\n);\n\nexport const ViewText = () => {\n const [prix, setPrix] = React.useState(null);\n\n React.useEffect(async () => {\n\n  const docRef = doc(db, \"ungama\", \"money\");\n  const docSnap = await getDoc(docRef);\n\n  if (docSnap.exists()) {\n   setPrix(docSnap.data().allblocked);\n  };\n\n }, []);\n\n return (\n  <>\n   <h1>{prix}</h1>\n   <span style={{ color: '#d2d0ce' }}>CDF</span>\n  </>\n )\n}"]},"metadata":{},"sourceType":"module"}