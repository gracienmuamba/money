{"ast":null,"code":"var _jsxFileName = \"/Users/USER/Desktop/Agent/src/Money/ValidExFran/Input.js\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport './Input.css';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport Media from 'react-media';\nimport { useForm, Controller } from 'react-hook-form';\nimport { useNavigate } from 'react-router-dom';\nimport Button from '@mui/material/Button';\nimport Dialog from '@mui/material/Dialog';\nimport DialogActions from '@mui/material/DialogActions';\nimport DialogContent from '@mui/material/DialogContent';\nimport DialogTitle from '@mui/material/DialogTitle';\nimport DialogContentText from '@mui/material/DialogContentText';\nimport Input from '@mui/material/Input';\nimport InputLabel from '@mui/material/InputLabel';\nimport FormControl from '@mui/material/FormControl';\nimport Backdrop from '@mui/material/Backdrop';\nimport CircularProgress from '@mui/material/CircularProgress'; // Firebase Auth for phone\n\nimport { collection, getDocs } from \"firebase/firestore\";\nimport FadeLoader from 'react-spinners/FadeLoader';\nimport { db } from '../../firebase';\nimport PropTypes from 'prop-types';\nimport { IMaskInput } from 'react-imask';\nimport { NumericFormat } from 'react-number-format';\nimport TextField from '@mui/material/TextField';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport let sendPhone = '';\nconst TextMaskCustom = /*#__PURE__*/React.forwardRef(_c = function TextMaskCustom(props, ref) {\n  const {\n    onChange,\n    ...other\n  } = props;\n  return /*#__PURE__*/_jsxDEV(IMaskInput, { ...other,\n    mask: \"(#00) 000-0000\",\n    definitions: {\n      '#': /[0-9]/\n    },\n    inputRef: ref,\n    onAccept: value => onChange({\n      target: {\n        name: props.name,\n        value\n      }\n    }),\n    overwrite: true\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 40,\n    columnNumber: 3\n  }, this);\n});\n_c2 = TextMaskCustom;\nTextMaskCustom.propTypes = {\n  name: PropTypes.string.isRequired,\n  onChange: PropTypes.func.isRequired\n};\nconst NumericFormatCustom = /*#__PURE__*/React.forwardRef(_c3 = function NumericFormatCustom(props, ref) {\n  const {\n    onChange,\n    ...other\n  } = props;\n  return /*#__PURE__*/_jsxDEV(NumericFormat, { ...other,\n    getInputRef: ref,\n    onValueChange: values => {\n      onChange({\n        target: {\n          name: props.name,\n          value: values.value\n        }\n      });\n    },\n    thousandSeparator: true,\n    valueIsNumericString: true,\n    prefix: \"(F)\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 63,\n    columnNumber: 3\n  }, this);\n});\n_c4 = NumericFormatCustom;\nNumericFormatCustom.propTypes = {\n  name: PropTypes.string.isRequired,\n  onChange: PropTypes.func.isRequired\n}; // Input Field form\n\nexport default function REturnInPutCode() {\n  return /*#__PURE__*/_jsxDEV(Media, {\n    queries: {\n      small: '(max-width: 599px)',\n      medium: '(min-width: 600px) and (max-width:1199px)',\n      large: '(min-width: 1200px)'\n    },\n    children: matches => /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [matches.small && /*#__PURE__*/_jsxDEV(ScreenSmall, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 98,\n        columnNumber: 24\n      }, this), matches.medium && /*#__PURE__*/_jsxDEV(ScreenLarge, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 99,\n        columnNumber: 25\n      }, this), matches.large && /*#__PURE__*/_jsxDEV(ScreenLarge, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 100,\n        columnNumber: 24\n      }, this)]\n    }, void 0, true)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 90,\n    columnNumber: 3\n  }, this);\n}\n_c5 = REturnInPutCode;\n;\nexport const ScreenLarge = () => /*#__PURE__*/_jsxDEV(\"div\", {\n  className: \"input-phone-register\",\n  children: /*#__PURE__*/_jsxDEV(FormDataInput, {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 109,\n    columnNumber: 3\n  }, this)\n}, void 0, false, {\n  fileName: _jsxFileName,\n  lineNumber: 108,\n  columnNumber: 2\n}, this);\n_c6 = ScreenLarge;\nexport const ScreenSmall = () => /*#__PURE__*/_jsxDEV(\"div\", {\n  className: \"input-phone-register\",\n  children: /*#__PURE__*/_jsxDEV(FormDataInput, {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 114,\n    columnNumber: 3\n  }, this)\n}, void 0, false, {\n  fileName: _jsxFileName,\n  lineNumber: 113,\n  columnNumber: 2\n}, this);\n_c7 = ScreenSmall;\nexport const FormDataInput = () => {\n  _s();\n\n  let pushClient = new Array();\n  let pushAgent = new Array();\n  const [load, setLoad] = React.useState(false);\n  const regular = /[a-z]+/;\n  const navigation = useNavigate();\n  const {\n    register,\n    handleSubmit,\n    reset,\n    control\n  } = useForm({\n    defaultValues: {\n      phone: '+243'\n    }\n  });\n  const [loading, setLoading] = React.useState(false);\n  const [open, setOpen] = React.useState(false);\n  const [fullWidth, setFullWidth] = React.useState(true);\n  const [maxWidth, setMaxWidth] = React.useState('sm');\n  const [values, setValues] = React.useState({\n    textmask: '(100) 000-0000',\n    numberformat: '1320'\n  });\n\n  const handleChange = event => {\n    setValues({ ...values,\n      [event.target.name]: event.target.value\n    });\n  };\n\n  const handleClose = () => {\n    setOpen(false);\n  };\n\n  const onSubmit = async data => {\n    setLoad(true);\n    let num = data.textmask.match(/\\d+/g);\n    let numPhone = '';\n    num.map(index => {\n      numPhone += index;\n    });\n\n    if (numPhone.length != 10 || numPhone.charAt(0) != 0) {\n      setOpen(true);\n      setLoad(false);\n      reset();\n    } else {\n      const clientSnapshot = await getDocs(collection(db, \"client\"));\n      clientSnapshot.forEach(doc => {\n        pushClient.push(doc.id);\n      });\n      const agentSnapshot = await getDocs(collection(db, \"agent\"));\n      agentSnapshot.forEach(doc => {\n        pushAgent.push(doc.id);\n      });\n      const verifierClient = pushClient.some(value => value == data.textmask);\n      const verifierAgent = pushAgent.some(value => value == data.textmask);\n\n      if (verifierClient || verifierAgent) {\n        sendPhone = data.textmask;\n        window.localStorage.setItem('**adm@@ph$$&-@#', JSON.stringify(data.textmask));\n        window.setTimeout(() => {\n          navigation('/exchange');\n          setLoading(false);\n        }, 2100);\n        reset();\n      } else {\n        setLoading(false);\n        setLoad(false);\n        setOpen(true);\n        reset();\n      }\n\n      ;\n    }\n\n    ;\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"zindex-theme\",\n      children: /*#__PURE__*/_jsxDEV(Backdrop, {\n        sx: {\n          color: '#fff',\n          zIndex: theme => theme.zIndex.drawer + 1\n        },\n        open: load,\n        children: /*#__PURE__*/_jsxDEV(CircularProgress, {\n          color: \"inherit\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 212,\n          columnNumber: 6\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 208,\n        columnNumber: 5\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 207,\n      columnNumber: 4\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit(onSubmit),\n      children: [/*#__PURE__*/_jsxDEV(FormControl, {\n        sx: {\n          width: '100%'\n        },\n        variant: \"standard\",\n        children: [/*#__PURE__*/_jsxDEV(InputLabel, {\n          htmlFor: \"formatted-text-mask-input\",\n          children: /*#__PURE__*/_jsxDEV(\"h1\", {\n            children: \"T\\xE9l\\xE9phone\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 219,\n            columnNumber: 54\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 219,\n          columnNumber: 6\n        }, this), /*#__PURE__*/_jsxDEV(Controller, {\n          name: \"textmask\",\n          control: control,\n          render: ({\n            field\n          }) => /*#__PURE__*/_jsxDEV(Input, {\n            value: values.textmask,\n            onChange: handleChange,\n            name: \"textmask\",\n            id: \"formatted-text-mask-input\",\n            inputComponent: TextMaskCustom,\n            ...field\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 226,\n            columnNumber: 8\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 221,\n          columnNumber: 6\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 218,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(Dialog, {\n        fullWidth: fullWidth,\n        maxWidth: maxWidth,\n        open: open,\n        onClose: handleClose,\n        children: [/*#__PURE__*/_jsxDEV(DialogTitle, {\n          children: \"MuunganoMoney\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 245,\n          columnNumber: 6\n        }, this), /*#__PURE__*/_jsxDEV(DialogContent, {\n          children: /*#__PURE__*/_jsxDEV(DialogContentText, {\n            children: /*#__PURE__*/_jsxDEV(\"p\", {\n              className: \"text-pop\",\n              children: \"Ce num\\xE9ro de t\\xE9l\\xE9phone n'est pas reconnu par muungamoney\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 249,\n              columnNumber: 8\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 248,\n            columnNumber: 7\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 246,\n          columnNumber: 6\n        }, this), /*#__PURE__*/_jsxDEV(DialogActions, {\n          children: /*#__PURE__*/_jsxDEV(Button, {\n            onClick: handleClose,\n            children: \"Fermer\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 256,\n            columnNumber: 7\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 255,\n          columnNumber: 6\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 239,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"Btn\",\n        children: \"Suivant\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 260,\n        columnNumber: 5\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 216,\n      columnNumber: 4\n    }, this)]\n  }, void 0, true);\n};\n\n_s(FormDataInput, \"5sCsOeQaUg5OblQsGIxFsyOIKqA=\", false, function () {\n  return [useNavigate, useForm];\n});\n\n_c8 = FormDataInput;\n\nvar _c, _c2, _c3, _c4, _c5, _c6, _c7, _c8;\n\n$RefreshReg$(_c, \"TextMaskCustom$React.forwardRef\");\n$RefreshReg$(_c2, \"TextMaskCustom\");\n$RefreshReg$(_c3, \"NumericFormatCustom$React.forwardRef\");\n$RefreshReg$(_c4, \"NumericFormatCustom\");\n$RefreshReg$(_c5, \"REturnInPutCode\");\n$RefreshReg$(_c6, \"ScreenLarge\");\n$RefreshReg$(_c7, \"ScreenSmall\");\n$RefreshReg$(_c8, \"FormDataInput\");","map":{"version":3,"sources":["/Users/USER/Desktop/Agent/src/Money/ValidExFran/Input.js"],"names":["React","Media","useForm","Controller","useNavigate","Button","Dialog","DialogActions","DialogContent","DialogTitle","DialogContentText","Input","InputLabel","FormControl","Backdrop","CircularProgress","collection","getDocs","FadeLoader","db","PropTypes","IMaskInput","NumericFormat","TextField","sendPhone","TextMaskCustom","forwardRef","props","ref","onChange","other","value","target","name","propTypes","string","isRequired","func","NumericFormatCustom","values","REturnInPutCode","small","medium","large","matches","ScreenLarge","ScreenSmall","FormDataInput","pushClient","Array","pushAgent","load","setLoad","useState","regular","navigation","register","handleSubmit","reset","control","defaultValues","phone","loading","setLoading","open","setOpen","fullWidth","setFullWidth","maxWidth","setMaxWidth","setValues","textmask","numberformat","handleChange","event","handleClose","onSubmit","data","num","match","numPhone","map","index","length","charAt","clientSnapshot","forEach","doc","push","id","agentSnapshot","verifierClient","some","verifierAgent","window","localStorage","setItem","JSON","stringify","setTimeout","color","zIndex","theme","drawer","width","field"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAO,aAAP;AACA,OAAO,sCAAP;AACA,OAAOC,KAAP,MAAkB,aAAlB;AACA,SAASC,OAAT,EAAkBC,UAAlB,QAAoC,iBAApC;AACA,SAASC,WAAT,QAA4B,kBAA5B;AAEA,OAAOC,MAAP,MAAmB,sBAAnB;AACA,OAAOC,MAAP,MAAmB,sBAAnB;AACA,OAAOC,aAAP,MAA0B,6BAA1B;AACA,OAAOC,aAAP,MAA0B,6BAA1B;AACA,OAAOC,WAAP,MAAwB,2BAAxB;AACA,OAAOC,iBAAP,MAA8B,iCAA9B;AAEA,OAAOC,KAAP,MAAkB,qBAAlB;AACA,OAAOC,UAAP,MAAuB,0BAAvB;AACA,OAAOC,WAAP,MAAwB,2BAAxB;AAEA,OAAOC,QAAP,MAAqB,wBAArB;AACA,OAAOC,gBAAP,MAA6B,gCAA7B,C,CAEA;;AACA,SAASC,UAAT,EAAqBC,OAArB,QAAoC,oBAApC;AACA,OAAOC,UAAP,MAAuB,2BAAvB;AACA,SAASC,EAAT,QAAmB,gBAAnB;AAEA,OAAOC,SAAP,MAAsB,YAAtB;AACA,SAASC,UAAT,QAA2B,aAA3B;AACA,SAASC,aAAT,QAA8B,qBAA9B;AACA,OAAOC,SAAP,MAAsB,yBAAtB;;;AAIA,OAAO,IAAIC,SAAS,GAAG,EAAhB;AAGP,MAAMC,cAAc,gBAAGzB,KAAK,CAAC0B,UAAN,MAAiB,SAASD,cAAT,CAAwBE,KAAxB,EAA+BC,GAA/B,EAAoC;AAC3E,QAAM;AAAEC,IAAAA,QAAF;AAAY,OAAGC;AAAf,MAAyBH,KAA/B;AACA,sBACC,QAAC,UAAD,OACKG,KADL;AAEC,IAAA,IAAI,EAAC,gBAFN;AAGC,IAAA,WAAW,EAAE;AACZ,WAAK;AADO,KAHd;AAMC,IAAA,QAAQ,EAAEF,GANX;AAOC,IAAA,QAAQ,EAAGG,KAAD,IAAWF,QAAQ,CAAC;AAAEG,MAAAA,MAAM,EAAE;AAAEC,QAAAA,IAAI,EAAEN,KAAK,CAACM,IAAd;AAAoBF,QAAAA;AAApB;AAAV,KAAD,CAP9B;AAQC,IAAA,SAAS;AARV;AAAA;AAAA;AAAA;AAAA,UADD;AAYA,CAdsB,CAAvB;MAAMN,c;AAeNA,cAAc,CAACS,SAAf,GAA2B;AAC1BD,EAAAA,IAAI,EAAEb,SAAS,CAACe,MAAV,CAAiBC,UADG;AAE1BP,EAAAA,QAAQ,EAAET,SAAS,CAACiB,IAAV,CAAeD;AAFC,CAA3B;AAIA,MAAME,mBAAmB,gBAAGtC,KAAK,CAAC0B,UAAN,OAAiB,SAASY,mBAAT,CAC5CX,KAD4C,EAE5CC,GAF4C,EAG3C;AACD,QAAM;AAAEC,IAAAA,QAAF;AAAY,OAAGC;AAAf,MAAyBH,KAA/B;AAEA,sBACC,QAAC,aAAD,OACKG,KADL;AAEC,IAAA,WAAW,EAAEF,GAFd;AAGC,IAAA,aAAa,EAAGW,MAAD,IAAY;AAC1BV,MAAAA,QAAQ,CAAC;AACRG,QAAAA,MAAM,EAAE;AACPC,UAAAA,IAAI,EAAEN,KAAK,CAACM,IADL;AAEPF,UAAAA,KAAK,EAAEQ,MAAM,CAACR;AAFP;AADA,OAAD,CAAR;AAMA,KAVF;AAWC,IAAA,iBAAiB,MAXlB;AAYC,IAAA,oBAAoB,MAZrB;AAaC,IAAA,MAAM,EAAC;AAbR;AAAA;AAAA;AAAA;AAAA,UADD;AAiBA,CAvB2B,CAA5B;MAAMO,mB;AAwBNA,mBAAmB,CAACJ,SAApB,GAAgC;AAC/BD,EAAAA,IAAI,EAAEb,SAAS,CAACe,MAAV,CAAiBC,UADQ;AAE/BP,EAAAA,QAAQ,EAAET,SAAS,CAACiB,IAAV,CAAeD;AAFM,CAAhC,C,CAOA;;AACA,eAAe,SAASI,eAAT,GAA2B;AACzC,sBACC,QAAC,KAAD;AACC,IAAA,OAAO,EAAE;AACRC,MAAAA,KAAK,EAAE,oBADC;AAERC,MAAAA,MAAM,EAAE,2CAFA;AAGRC,MAAAA,KAAK,EAAE;AAHC,KADV;AAAA,cAMEC,OAAO,iBACP;AAAA,iBACEA,OAAO,CAACH,KAAR,iBAAiB,QAAC,WAAD;AAAA;AAAA;AAAA;AAAA,cADnB,EAEEG,OAAO,CAACF,MAAR,iBAAkB,QAAC,WAAD;AAAA;AAAA;AAAA;AAAA,cAFpB,EAGEE,OAAO,CAACD,KAAR,iBAAiB,QAAC,WAAD;AAAA;AAAA;AAAA;AAAA,cAHnB;AAAA;AAPF;AAAA;AAAA;AAAA;AAAA,UADD;AAgBA;MAjBuBH,e;AAiBvB;AAED,OAAO,MAAMK,WAAW,GAAG,mBAC1B;AAAK,EAAA,SAAS,EAAC,sBAAf;AAAA,yBACC,QAAC,aAAD;AAAA;AAAA;AAAA;AAAA;AADD;AAAA;AAAA;AAAA;AAAA,QADM;MAAMA,W;AAKb,OAAO,MAAMC,WAAW,GAAG,mBAC1B;AAAK,EAAA,SAAS,EAAC,sBAAf;AAAA,yBACC,QAAC,aAAD;AAAA;AAAA;AAAA;AAAA;AADD;AAAA;AAAA;AAAA;AAAA,QADM;MAAMA,W;AAMb,OAAO,MAAMC,aAAa,GAAG,MAAM;AAAA;;AAElC,MAAIC,UAAU,GAAG,IAAIC,KAAJ,EAAjB;AACA,MAAIC,SAAS,GAAG,IAAID,KAAJ,EAAhB;AACA,QAAM,CAACE,IAAD,EAAOC,OAAP,IAAkBpD,KAAK,CAACqD,QAAN,CAAe,KAAf,CAAxB;AAEA,QAAMC,OAAO,GAAG,QAAhB;AACA,QAAMC,UAAU,GAAGnD,WAAW,EAA9B;AACA,QAAM;AAAEoD,IAAAA,QAAF;AAAYC,IAAAA,YAAZ;AAA0BC,IAAAA,KAA1B;AAAiCC,IAAAA;AAAjC,MAA6CzD,OAAO,CAAC;AAC1D0D,IAAAA,aAAa,EAAE;AAAEC,MAAAA,KAAK,EAAE;AAAT;AAD2C,GAAD,CAA1D;AAIA,QAAM,CAACC,OAAD,EAAUC,UAAV,IAAwB/D,KAAK,CAACqD,QAAN,CAAe,KAAf,CAA9B;AACA,QAAM,CAACW,IAAD,EAAOC,OAAP,IAAkBjE,KAAK,CAACqD,QAAN,CAAe,KAAf,CAAxB;AACA,QAAM,CAACa,SAAD,EAAYC,YAAZ,IAA4BnE,KAAK,CAACqD,QAAN,CAAe,IAAf,CAAlC;AACA,QAAM,CAACe,QAAD,EAAWC,WAAX,IAA0BrE,KAAK,CAACqD,QAAN,CAAe,IAAf,CAAhC;AAGA,QAAM,CAACd,MAAD,EAAS+B,SAAT,IAAsBtE,KAAK,CAACqD,QAAN,CAAe;AAC1CkB,IAAAA,QAAQ,EAAE,gBADgC;AAE1CC,IAAAA,YAAY,EAAE;AAF4B,GAAf,CAA5B;;AAIA,QAAMC,YAAY,GAAIC,KAAD,IAAW;AAC/BJ,IAAAA,SAAS,CAAC,EACT,GAAG/B,MADM;AAET,OAACmC,KAAK,CAAC1C,MAAN,CAAaC,IAAd,GAAqByC,KAAK,CAAC1C,MAAN,CAAaD;AAFzB,KAAD,CAAT;AAIA,GALD;;AAOA,QAAM4C,WAAW,GAAG,MAAM;AACzBV,IAAAA,OAAO,CAAC,KAAD,CAAP;AACA,GAFD;;AAIA,QAAMW,QAAQ,GAAG,MAAOC,IAAP,IAAgB;AAEhCzB,IAAAA,OAAO,CAAC,IAAD,CAAP;AACA,QAAI0B,GAAG,GAAID,IAAI,CAACN,QAAN,CAAgBQ,KAAhB,CAAsB,MAAtB,CAAV;AACA,QAAIC,QAAQ,GAAG,EAAf;AACAF,IAAAA,GAAG,CAACG,GAAJ,CAAQC,KAAK,IAAI;AAChBF,MAAAA,QAAQ,IAAIE,KAAZ;AAEA,KAHD;;AAKA,QAAIF,QAAQ,CAACG,MAAT,IAAmB,EAAnB,IAAyBH,QAAQ,CAACI,MAAT,CAAgB,CAAhB,KAAsB,CAAnD,EAAsD;AACrDnB,MAAAA,OAAO,CAAC,IAAD,CAAP;AACAb,MAAAA,OAAO,CAAC,KAAD,CAAP;AACAM,MAAAA,KAAK;AACL,KAJD,MAIO;AAEN,YAAM2B,cAAc,GAAG,MAAMpE,OAAO,CAACD,UAAU,CAACG,EAAD,EAAK,QAAL,CAAX,CAApC;AACAkE,MAAAA,cAAc,CAACC,OAAf,CAAwBC,GAAD,IAAS;AAC/BvC,QAAAA,UAAU,CAACwC,IAAX,CAAgBD,GAAG,CAACE,EAApB;AACA,OAFD;AAGA,YAAMC,aAAa,GAAG,MAAMzE,OAAO,CAACD,UAAU,CAACG,EAAD,EAAK,OAAL,CAAX,CAAnC;AACAuE,MAAAA,aAAa,CAACJ,OAAd,CAAuBC,GAAD,IAAS;AAC9BrC,QAAAA,SAAS,CAACsC,IAAV,CAAeD,GAAG,CAACE,EAAnB;AACA,OAFD;AAIA,YAAME,cAAc,GAAG3C,UAAU,CAAC4C,IAAX,CAAgB7D,KAAK,IAAIA,KAAK,IAAI8C,IAAI,CAACN,QAAvC,CAAvB;AACA,YAAMsB,aAAa,GAAG3C,SAAS,CAAC0C,IAAV,CAAe7D,KAAK,IAAIA,KAAK,IAAI8C,IAAI,CAACN,QAAtC,CAAtB;;AAEA,UAAIoB,cAAc,IAAIE,aAAtB,EAAqC;AAEpCrE,QAAAA,SAAS,GAAGqD,IAAI,CAACN,QAAjB;AACAuB,QAAAA,MAAM,CAACC,YAAP,CAAoBC,OAApB,CAA4B,iBAA5B,EAA+CC,IAAI,CAACC,SAAL,CAAerB,IAAI,CAACN,QAApB,CAA/C;AAEAuB,QAAAA,MAAM,CAACK,UAAP,CAAkB,MAAM;AACvB5C,UAAAA,UAAU,CAAC,WAAD,CAAV;AACAQ,UAAAA,UAAU,CAAC,KAAD,CAAV;AACA,SAHD,EAGG,IAHH;AAKAL,QAAAA,KAAK;AAEL,OAZD,MAYO;AAENK,QAAAA,UAAU,CAAC,KAAD,CAAV;AACAX,QAAAA,OAAO,CAAC,KAAD,CAAP;AACAa,QAAAA,OAAO,CAAC,IAAD,CAAP;AACAP,QAAAA,KAAK;AAEL;;AAAA;AAID;;AAAA;AACD,GApDD;;AAsDA,sBACC;AAAA,4BACC;AAAK,MAAA,SAAS,EAAC,cAAf;AAAA,6BACC,QAAC,QAAD;AACC,QAAA,EAAE,EAAE;AAAE0C,UAAAA,KAAK,EAAE,MAAT;AAAiBC,UAAAA,MAAM,EAAGC,KAAD,IAAWA,KAAK,CAACD,MAAN,CAAaE,MAAb,GAAsB;AAA1D,SADL;AAEC,QAAA,IAAI,EAAEpD,IAFP;AAAA,+BAIC,QAAC,gBAAD;AAAkB,UAAA,KAAK,EAAC;AAAxB;AAAA;AAAA;AAAA;AAAA;AAJD;AAAA;AAAA;AAAA;AAAA;AADD;AAAA;AAAA;AAAA;AAAA,YADD,eAUC;AAAM,MAAA,QAAQ,EAAEM,YAAY,CAACmB,QAAD,CAA5B;AAAA,8BAEC,QAAC,WAAD;AAAa,QAAA,EAAE,EAAE;AAAE4B,UAAAA,KAAK,EAAE;AAAT,SAAjB;AAAoC,QAAA,OAAO,EAAC,UAA5C;AAAA,gCACC,QAAC,UAAD;AAAY,UAAA,OAAO,EAAC,2BAApB;AAAA,iCAAgD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAhD;AAAA;AAAA;AAAA;AAAA,gBADD,eAGC,QAAC,UAAD;AACC,UAAA,IAAI,EAAC,UADN;AAEC,UAAA,OAAO,EAAE7C,OAFV;AAGC,UAAA,MAAM,EAAE,CAAC;AAAE8C,YAAAA;AAAF,WAAD,kBAEP,QAAC,KAAD;AACC,YAAA,KAAK,EAAElE,MAAM,CAACgC,QADf;AAEC,YAAA,QAAQ,EAAEE,YAFX;AAGC,YAAA,IAAI,EAAC,UAHN;AAIC,YAAA,EAAE,EAAC,2BAJJ;AAKC,YAAA,cAAc,EAAEhD,cALjB;AAAA,eAMKgF;AANL;AAAA;AAAA;AAAA;AAAA;AALF;AAAA;AAAA;AAAA;AAAA,gBAHD;AAAA;AAAA;AAAA;AAAA;AAAA,cAFD,eAuBC,QAAC,MAAD;AACC,QAAA,SAAS,EAAEvC,SADZ;AAEC,QAAA,QAAQ,EAAEE,QAFX;AAGC,QAAA,IAAI,EAAEJ,IAHP;AAIC,QAAA,OAAO,EAAEW,WAJV;AAAA,gCAMC,QAAC,WAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAND,eAOC,QAAC,aAAD;AAAA,iCAEC,QAAC,iBAAD;AAAA,mCACC;AAAG,cAAA,SAAS,EAAC,UAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADD;AAAA;AAAA;AAAA;AAAA;AAFD;AAAA;AAAA;AAAA;AAAA,gBAPD,eAgBC,QAAC,aAAD;AAAA,iCACC,QAAC,MAAD;AAAQ,YAAA,OAAO,EAAEA,WAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADD;AAAA;AAAA;AAAA;AAAA,gBAhBD;AAAA;AAAA;AAAA;AAAA;AAAA,cAvBD,eA4CC;AAAQ,QAAA,SAAS,EAAC,KAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cA5CD;AAAA;AAAA;AAAA;AAAA;AAAA,YAVD;AAAA,kBADD;AA2DA,CAlJM;;GAAM5B,a;UAOO3C,W,EACgCF,O;;;MARvC6C,a","sourcesContent":["import React from 'react';\nimport './Input.css';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport Media from 'react-media';\nimport { useForm, Controller } from 'react-hook-form';\nimport { useNavigate } from 'react-router-dom';\n\nimport Button from '@mui/material/Button';\nimport Dialog from '@mui/material/Dialog';\nimport DialogActions from '@mui/material/DialogActions';\nimport DialogContent from '@mui/material/DialogContent';\nimport DialogTitle from '@mui/material/DialogTitle';\nimport DialogContentText from '@mui/material/DialogContentText';\n\nimport Input from '@mui/material/Input';\nimport InputLabel from '@mui/material/InputLabel';\nimport FormControl from '@mui/material/FormControl';\n\nimport Backdrop from '@mui/material/Backdrop';\nimport CircularProgress from '@mui/material/CircularProgress';\n\n// Firebase Auth for phone\nimport { collection, getDocs } from \"firebase/firestore\";\nimport FadeLoader from 'react-spinners/FadeLoader';\nimport { db } from '../../firebase';\n\nimport PropTypes from 'prop-types';\nimport { IMaskInput } from 'react-imask';\nimport { NumericFormat } from 'react-number-format';\nimport TextField from '@mui/material/TextField';\n\n\n\nexport let sendPhone = '';\n\n\nconst TextMaskCustom = React.forwardRef(function TextMaskCustom(props, ref) {\n const { onChange, ...other } = props;\n return (\n  <IMaskInput\n   {...other}\n   mask=\"(#00) 000-0000\"\n   definitions={{\n    '#': /[0-9]/,\n   }}\n   inputRef={ref}\n   onAccept={(value) => onChange({ target: { name: props.name, value } })}\n   overwrite\n  />\n );\n});\nTextMaskCustom.propTypes = {\n name: PropTypes.string.isRequired,\n onChange: PropTypes.func.isRequired,\n};\nconst NumericFormatCustom = React.forwardRef(function NumericFormatCustom(\n props,\n ref,\n) {\n const { onChange, ...other } = props;\n\n return (\n  <NumericFormat\n   {...other}\n   getInputRef={ref}\n   onValueChange={(values) => {\n    onChange({\n     target: {\n      name: props.name,\n      value: values.value,\n     },\n    });\n   }}\n   thousandSeparator\n   valueIsNumericString\n   prefix=\"(F)\"\n  />\n );\n});\nNumericFormatCustom.propTypes = {\n name: PropTypes.string.isRequired,\n onChange: PropTypes.func.isRequired,\n};\n\n\n\n// Input Field form\nexport default function REturnInPutCode() {\n return (\n  <Media\n   queries={{\n    small: '(max-width: 599px)',\n    medium: '(min-width: 600px) and (max-width:1199px)',\n    large: '(min-width: 1200px)',\n   }}>\n   {matches => (\n    <>\n     {matches.small && <ScreenSmall />}\n     {matches.medium && <ScreenLarge />}\n     {matches.large && <ScreenLarge />}\n    </>\n   )}\n  </Media>\n );\n};\n\nexport const ScreenLarge = () => (\n <div className='input-phone-register'>\n  <FormDataInput />\n </div>\n);\nexport const ScreenSmall = () => (\n <div className='input-phone-register'>\n  <FormDataInput />\n </div>\n);\n\nexport const FormDataInput = () => {\n\n let pushClient = new Array();\n let pushAgent = new Array();\n const [load, setLoad] = React.useState(false);\n\n const regular = /[a-z]+/;\n const navigation = useNavigate();\n const { register, handleSubmit, reset, control } = useForm({\n  defaultValues: { phone: '+243' }\n });\n\n const [loading, setLoading] = React.useState(false);\n const [open, setOpen] = React.useState(false);\n const [fullWidth, setFullWidth] = React.useState(true);\n const [maxWidth, setMaxWidth] = React.useState('sm');\n\n\n const [values, setValues] = React.useState({\n  textmask: '(100) 000-0000',\n  numberformat: '1320',\n });\n const handleChange = (event) => {\n  setValues({\n   ...values,\n   [event.target.name]: event.target.value,\n  });\n };\n\n const handleClose = () => {\n  setOpen(false);\n };\n\n const onSubmit = async (data) => {\n\n  setLoad(true);\n  let num = (data.textmask).match(/\\d+/g);\n  let numPhone = '';\n  num.map(index => {\n   numPhone += index;\n\n  })\n\n  if (numPhone.length != 10 || numPhone.charAt(0) != 0) {\n   setOpen(true);\n   setLoad(false);\n   reset();\n  } else {\n\n   const clientSnapshot = await getDocs(collection(db, \"client\"));\n   clientSnapshot.forEach((doc) => {\n    pushClient.push(doc.id);\n   });\n   const agentSnapshot = await getDocs(collection(db, \"agent\"));\n   agentSnapshot.forEach((doc) => {\n    pushAgent.push(doc.id);\n   });\n\n   const verifierClient = pushClient.some(value => value == data.textmask);\n   const verifierAgent = pushAgent.some(value => value == data.textmask);\n\n   if (verifierClient || verifierAgent) {\n\n    sendPhone = data.textmask;\n    window.localStorage.setItem('**adm@@ph$$&-@#', JSON.stringify(data.textmask));\n\n    window.setTimeout(() => {\n     navigation('/exchange');\n     setLoading(false);\n    }, 2100);\n\n    reset();\n\n   } else {\n\n    setLoading(false);\n    setLoad(false);\n    setOpen(true);\n    reset();\n\n   };\n\n\n\n  };\n };\n\n return (\n  <>\n   <div className='zindex-theme'>\n    <Backdrop\n     sx={{ color: '#fff', zIndex: (theme) => theme.zIndex.drawer + 1 }}\n     open={load}>\n\n     <CircularProgress color=\"inherit\" />\n    </Backdrop>\n   </div>\n\n   <form onSubmit={handleSubmit(onSubmit)}>\n\n    <FormControl sx={{ width: '100%' }} variant=\"standard\">\n     <InputLabel htmlFor=\"formatted-text-mask-input\"><h1>Téléphone</h1></InputLabel>\n\n     <Controller\n      name=\"textmask\"\n      control={control}\n      render={({ field }) =>\n\n       <Input\n        value={values.textmask}\n        onChange={handleChange}\n        name=\"textmask\"\n        id=\"formatted-text-mask-input\"\n        inputComponent={TextMaskCustom}\n        {...field}\n       />\n\n      }\n     />\n    </FormControl>\n\n    <Dialog\n     fullWidth={fullWidth}\n     maxWidth={maxWidth}\n     open={open}\n     onClose={handleClose}\n    >\n     <DialogTitle>MuunganoMoney</DialogTitle>\n     <DialogContent>\n\n      <DialogContentText>\n       <p className='text-pop'>\n        Ce numéro de téléphone n'est pas reconnu par muungamoney\n      </p>\n      </DialogContentText>\n\n     </DialogContent>\n     <DialogActions>\n      <Button onClick={handleClose}>Fermer</Button>\n     </DialogActions>\n    </Dialog>\n\n    <button className='Btn'>Suivant</button>\n   </form>\n  </>\n );\n};\n"]},"metadata":{},"sourceType":"module"}