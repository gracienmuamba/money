{"ast":null,"code":"var _jsxFileName = \"/Users/USER/Documents/Money/src/Profil/Code/Upgrade/Input.js\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport Media from 'react-media';\nimport { useForm, Controller } from 'react-hook-form';\nimport { useNavigate } from 'react-router-dom';\nimport { collection, getDocs, doc, updateDoc } from 'firebase/firestore';\nimport { db } from '../../../firebase';\nimport Button from '@mui/material/Button';\nimport Dialog from '@mui/material/Dialog';\nimport DialogActions from '@mui/material/DialogActions';\nimport DialogContent from '@mui/material/DialogContent';\nimport DialogTitle from '@mui/material/DialogTitle';\nimport DialogContentText from '@mui/material/DialogContentText';\nimport Box from '@mui/material/Box';\nimport IconButton from '@mui/material/IconButton';\nimport Input from '@mui/material/Input';\nimport InputLabel from '@mui/material/InputLabel';\nimport InputAdornment from '@mui/material/InputAdornment';\nimport FormControl from '@mui/material/FormControl';\nimport Visibility from '@mui/icons-material/Visibility';\nimport VisibilityOff from '@mui/icons-material/VisibilityOff';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nlet pushDocs = new Array(); // View Form Update view\n\nexport default function ReturnFormUpdate() {\n  return /*#__PURE__*/_jsxDEV(Media, {\n    queries: {\n      small: '(max-width: 599px)',\n      medium: '(min-width: 600px) and (max-width:1199px)',\n      large: '(min-width: 1200px)'\n    },\n    children: matches => /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [matches.small && /*#__PURE__*/_jsxDEV(ScreenSmall, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 29\n      }, this), matches.medium && /*#__PURE__*/_jsxDEV(ScreenLarge, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 30\n      }, this), matches.large && /*#__PURE__*/_jsxDEV(ScreenLarge, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 29\n      }, this)]\n    }, void 0, true)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 32,\n    columnNumber: 5\n  }, this);\n}\n_c = ReturnFormUpdate;\n;\nexport const ScreenLarge = () => /*#__PURE__*/_jsxDEV(\"div\", {\n  className: \"wrp-form-input-nows\",\n  children: /*#__PURE__*/_jsxDEV(FormInputField, {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 51,\n    columnNumber: 5\n  }, this)\n}, void 0, false, {\n  fileName: _jsxFileName,\n  lineNumber: 50,\n  columnNumber: 3\n}, this);\n_c2 = ScreenLarge;\nexport const ScreenSmall = () => /*#__PURE__*/_jsxDEV(\"div\", {\n  className: \"wrp-form-input-nows\",\n  children: /*#__PURE__*/_jsxDEV(FormInputField, {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 56,\n    columnNumber: 5\n  }, this)\n}, void 0, false, {\n  fileName: _jsxFileName,\n  lineNumber: 55,\n  columnNumber: 3\n}, this);\n_c3 = ScreenSmall;\nexport const FormInputField = () => {\n  _s();\n\n  const navigation = useNavigate();\n  const {\n    handleSubmit,\n    control,\n    reset,\n    watch\n  } = useForm({});\n  const [open, setOpen] = React.useState(false);\n  const [fullWidth, setFullWidth] = React.useState(true);\n  const [maxWidth, setMaxWidth] = React.useState('sm');\n  const [firstChart, setFirstChart] = React.useState(false);\n  const [checked, setChecked] = React.useState(false);\n  const [showPassword, setShowPassword] = React.useState(false);\n\n  const handleClickShowPassword = () => setShowPassword(show => !show);\n\n  const handleMouseDownPassword = event => {\n    event.preventDefault();\n  };\n\n  const handleClose = () => {\n    setOpen(false);\n  };\n\n  React.useEffect(async () => {\n    const querySnapshot = await getDocs(collection(db, \"client\"));\n    querySnapshot.forEach(doc => {\n      pushDocs.push(doc.id);\n    });\n  }, []);\n  React.useEffect(() => {\n    const subscription = watch(data => {\n      if (/^\\d+$/.test(`${data.first}`) && data.first.length <= 6) {\n        setFirstChart(false);\n      } else {\n        setFirstChart(true);\n      }\n\n      if (data.first != data.second) {\n        setChecked(true);\n      } else {\n        setChecked(false);\n      }\n    });\n    return () => {\n      subscription.unsubscribe();\n    };\n  }, [watch]);\n\n  const onSubmitPwd = async data => {\n    if (data.first != data.second || data.first == '123456' || !/^\\d+$/.test(`${data.first}`) || data.first.length != 6 || data.first == '000000' || data.first == '111111' || data.first == '222222' || data.first == '333333' || data.first == '444444' || data.first == '555555' || data.first == '666666' || data.first == '777777' || data.first == '888888' || data.first == '999999') {\n      setOpen(true);\n      reset();\n    } else {\n      const verifierCollection = pushDocs.some(value => value == JSON.parse(window.localStorage.getItem('USER')));\n      updatePinInWithDocs(verifierCollection, data.first, JSON.parse(window.localStorage.getItem('USER')));\n      navigation('/pin/success');\n      window.localStorage.setItem('@!che03', JSON.stringify(null));\n    }\n\n    ;\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    autoComplete: \"off\",\n    onSubmit: handleSubmit(onSubmitPwd),\n    children: [/*#__PURE__*/_jsxDEV(Box, {\n      sx: {\n        display: 'flex',\n        flexWrap: 'wrap'\n      },\n      children: [/*#__PURE__*/_jsxDEV(FormControl, {\n        sx: {\n          width: '100%'\n        },\n        variant: \"standard\",\n        children: [/*#__PURE__*/_jsxDEV(InputLabel, {\n          htmlFor: \"standard-adornment-password\",\n          children: /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"pop-up\",\n            children: \"Nouveau code\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 145,\n            columnNumber: 61\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 145,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Controller, {\n          name: \"first\",\n          control: control,\n          render: ({\n            field\n          }) => /*#__PURE__*/_jsxDEV(Input, {\n            id: \"standard-adornment-password\",\n            ...field,\n            inputProps: {\n              autoComplete: \"off\",\n              inputMode: 'numeric'\n            },\n            autocomplete: \"off\",\n            type: showPassword ? 'text' : 'password',\n            endAdornment: /*#__PURE__*/_jsxDEV(InputAdornment, {\n              position: \"end\",\n              children: /*#__PURE__*/_jsxDEV(IconButton, {\n                \"aria-label\": \"toggle password visibility\",\n                onClick: handleClickShowPassword,\n                onMouseDown: handleMouseDownPassword,\n                children: showPassword ? /*#__PURE__*/_jsxDEV(VisibilityOff, {}, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 171,\n                  columnNumber: 39\n                }, this) : /*#__PURE__*/_jsxDEV(Visibility, {}, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 171,\n                  columnNumber: 59\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 166,\n                columnNumber: 21\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 164,\n              columnNumber: 19\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 152,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 147,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 141,\n        columnNumber: 9\n      }, this), firstChart && /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"wrp-errors-code pop-up\",\n        children: \"Seul caract\\xE8re num\\xE9rique, a 6 chiffre sont valides\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 181,\n        columnNumber: 24\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"wrp-errors-code-transparent pop-up\",\n        children: \"Seul caract\\xE8re num\\xE9rique\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 182,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 139,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Box, {\n      sx: {\n        display: 'flex',\n        flexWrap: 'wrap'\n      },\n      children: [/*#__PURE__*/_jsxDEV(FormControl, {\n        sx: {\n          width: '100%'\n        },\n        variant: \"standard\",\n        children: [/*#__PURE__*/_jsxDEV(InputLabel, {\n          htmlFor: \"standard-adornment-password\",\n          children: /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"pop-up\",\n            children: \"Confirmer le nouveau code\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 191,\n            columnNumber: 61\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 191,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Controller, {\n          name: \"second\",\n          control: control,\n          render: ({\n            field\n          }) => /*#__PURE__*/_jsxDEV(Input, {\n            id: \"standard-adornment-password\",\n            inputProps: {\n              autoComplete: \"off\",\n              inputMode: 'numeric'\n            },\n            ...field,\n            type: showPassword ? 'numeric' : 'password',\n            endAdornment: /*#__PURE__*/_jsxDEV(InputAdornment, {\n              position: \"end\",\n              children: /*#__PURE__*/_jsxDEV(IconButton, {\n                \"aria-label\": \"toggle password visibility\",\n                onClick: handleClickShowPassword,\n                onMouseDown: handleMouseDownPassword,\n                children: showPassword ? /*#__PURE__*/_jsxDEV(VisibilityOff, {}, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 216,\n                  columnNumber: 39\n                }, this) : /*#__PURE__*/_jsxDEV(Visibility, {}, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 216,\n                  columnNumber: 59\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 211,\n                columnNumber: 21\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 209,\n              columnNumber: 19\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 198,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 193,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 187,\n        columnNumber: 9\n      }, this), checked && /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"wrp-errors-code\",\n        children: \"Les codes sont diff\\xE9rents v\\xE9rifier\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 226,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"wrp-errors-code-transparent\",\n        children: \"Seul caract\\xE8re num\\xE9rique\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 227,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 185,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Dialog, {\n      fullWidth: fullWidth,\n      maxWidth: maxWidth,\n      open: open,\n      onClose: handleClose,\n      children: [/*#__PURE__*/_jsxDEV(DialogTitle, {\n        children: /*#__PURE__*/_jsxDEV(\"h1\", {\n          className: \"pop-up\",\n          children: \"MuunganoMoney\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 236,\n          columnNumber: 22\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 236,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(DialogContent, {\n        children: /*#__PURE__*/_jsxDEV(DialogContentText, {\n          children: /*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"pop-up\",\n            children: \"Le code saisi est valide avec six chiffres num\\xE9riques. \\xC9vitez les valeurs identiques en caract\\xE8res.\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 240,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 239,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 237,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(DialogActions, {\n        children: /*#__PURE__*/_jsxDEV(Button, {\n          onClick: handleClose,\n          children: /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"pop-up\",\n            children: \"Fermer\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 248,\n            columnNumber: 41\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 248,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 247,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 230,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"Btn\",\n      children: \"Valider\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 252,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 135,\n    columnNumber: 5\n  }, this);\n};\n\n_s(FormInputField, \"KqsA8BOJRbCqgUyLEf4U/s5UH/4=\", false, function () {\n  return [useNavigate, useForm];\n});\n\n_c4 = FormInputField;\n\nasync function updatePinInWithDocs(verifierCollection, newPin, numPhone) {\n  const washingtonRef = doc(db, verifierCollection ? \"client\" : \"agent\", numPhone); // Set the \"capital\" field of the city 'DC'\n\n  await updateDoc(washingtonRef, {\n    pin: newPin\n  });\n}\n\n;\n\nvar _c, _c2, _c3, _c4;\n\n$RefreshReg$(_c, \"ReturnFormUpdate\");\n$RefreshReg$(_c2, \"ScreenLarge\");\n$RefreshReg$(_c3, \"ScreenSmall\");\n$RefreshReg$(_c4, \"FormInputField\");","map":{"version":3,"sources":["/Users/USER/Documents/Money/src/Profil/Code/Upgrade/Input.js"],"names":["React","Media","useForm","Controller","useNavigate","collection","getDocs","doc","updateDoc","db","Button","Dialog","DialogActions","DialogContent","DialogTitle","DialogContentText","Box","IconButton","Input","InputLabel","InputAdornment","FormControl","Visibility","VisibilityOff","pushDocs","Array","ReturnFormUpdate","small","medium","large","matches","ScreenLarge","ScreenSmall","FormInputField","navigation","handleSubmit","control","reset","watch","open","setOpen","useState","fullWidth","setFullWidth","maxWidth","setMaxWidth","firstChart","setFirstChart","checked","setChecked","showPassword","setShowPassword","handleClickShowPassword","show","handleMouseDownPassword","event","preventDefault","handleClose","useEffect","querySnapshot","forEach","push","id","subscription","data","test","first","length","second","unsubscribe","onSubmitPwd","verifierCollection","some","value","JSON","parse","window","localStorage","getItem","updatePinInWithDocs","setItem","stringify","display","flexWrap","width","field","autoComplete","inputMode","newPin","numPhone","washingtonRef","pin"],"mappings":"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","sourcesContent":["import React from 'react';\nimport Media from 'react-media';\nimport { useForm, Controller } from 'react-hook-form';\nimport { useNavigate } from 'react-router-dom';\n\nimport { collection, getDocs, doc, updateDoc } from 'firebase/firestore';\nimport { db } from '../../../firebase';\n\nimport Button from '@mui/material/Button';\nimport Dialog from '@mui/material/Dialog';\nimport DialogActions from '@mui/material/DialogActions';\nimport DialogContent from '@mui/material/DialogContent';\nimport DialogTitle from '@mui/material/DialogTitle';\nimport DialogContentText from '@mui/material/DialogContentText';\n\nimport Box from '@mui/material/Box';\nimport IconButton from '@mui/material/IconButton';\nimport Input from '@mui/material/Input';\nimport InputLabel from '@mui/material/InputLabel';\nimport InputAdornment from '@mui/material/InputAdornment';\nimport FormControl from '@mui/material/FormControl';\nimport Visibility from '@mui/icons-material/Visibility';\nimport VisibilityOff from '@mui/icons-material/VisibilityOff';\n\n\nlet pushDocs = new Array();\n\n\n// View Form Update view\nexport default function ReturnFormUpdate() {\n  return (\n    <Media\n      queries={{\n        small: '(max-width: 599px)',\n        medium: '(min-width: 600px) and (max-width:1199px)',\n        large: '(min-width: 1200px)',\n      }}>\n      {matches => (\n        <>\n          {matches.small && <ScreenSmall />}\n          {matches.medium && <ScreenLarge />}\n          {matches.large && <ScreenLarge />}\n        </>\n      )}\n    </Media>\n  );\n};\n\nexport const ScreenLarge = () => (\n  <div className='wrp-form-input-nows'>\n    <FormInputField />\n  </div>\n);\nexport const ScreenSmall = () => (\n  <div className='wrp-form-input-nows'>\n    <FormInputField />\n  </div>\n);\nexport const FormInputField = () => {\n\n\n  const navigation = useNavigate();\n  const { handleSubmit, control, reset, watch } = useForm({});\n\n  const [open, setOpen] = React.useState(false);\n  const [fullWidth, setFullWidth] = React.useState(true);\n  const [maxWidth, setMaxWidth] = React.useState('sm');\n\n  const [firstChart, setFirstChart] = React.useState(false);\n  const [checked, setChecked] = React.useState(false);\n  const [showPassword, setShowPassword] = React.useState(false);\n\n\n  const handleClickShowPassword = () => setShowPassword((show) => !show);\n  const handleMouseDownPassword = (event) => {\n    event.preventDefault();\n  };\n\n  const handleClose = () => {\n    setOpen(false);\n  };\n\n  React.useEffect(async () => {\n\n    const querySnapshot = await getDocs(collection(db, \"client\"));\n    querySnapshot.forEach((doc) => {\n      pushDocs.push(doc.id);\n    });\n\n  }, []);\n  React.useEffect(() => {\n\n    const subscription = watch((data) => {\n\n      if (/^\\d+$/.test(`${data.first}`) && data.first.length <= 6) {\n        setFirstChart(false);\n      } else {\n        setFirstChart(true);\n      }\n\n      if (data.first != data.second) {\n        setChecked(true);\n      } else {\n        setChecked(false);\n      }\n\n    });\n\n    return () => {\n      subscription.unsubscribe();\n    }\n\n  }, [watch]);\n\n\n  const onSubmitPwd = async (data) => {\n\n    if (data.first != data.second || data.first == '123456' || !(/^\\d+$/.test(`${data.first}`)) || data.first.length != 6 || data.first == '000000' || data.first == '111111' || data.first == '222222' || data.first == '333333' || data.first == '444444' || data.first == '555555' || data.first == '666666' || data.first == '777777' || data.first == '888888' || data.first == '999999') {\n\n      setOpen(true);\n      reset();\n\n    } else {\n\n      const verifierCollection = pushDocs.some((value) => value == JSON.parse(window.localStorage.getItem('USER')));\n      updatePinInWithDocs(verifierCollection, data.first, JSON.parse(window.localStorage.getItem('USER')));\n      navigation('/pin/success');\n      window.localStorage.setItem('@!che03', JSON.stringify(null));\n\n    };\n\n  };\n\n  return (\n    <form\n      autoComplete='off'\n      onSubmit={handleSubmit(onSubmitPwd)}>\n\n      <Box sx={{ display: 'flex', flexWrap: 'wrap' }}>\n\n        <FormControl\n          sx={{ width: '100%' }}\n\n          variant=\"standard\">\n          <InputLabel htmlFor=\"standard-adornment-password\"><span className='pop-up'>Nouveau code</span></InputLabel>\n\n          <Controller\n            name=\"first\"\n            control={control}\n            render={({ field }) =>\n\n              <Input\n                id=\"standard-adornment-password\"\n                {...field}\n                inputProps={{\n                  autoComplete: \"off\", inputMode: 'numeric'\n                }}\n\n\n                autocomplete=\"off\"\n                type={showPassword ? 'text' : 'password'}\n\n                endAdornment={\n                  <InputAdornment position=\"end\">\n\n                    <IconButton\n                      aria-label=\"toggle password visibility\"\n                      onClick={handleClickShowPassword}\n                      onMouseDown={handleMouseDownPassword}\n                    >\n                      {showPassword ? <VisibilityOff /> : <Visibility />}\n                    </IconButton>\n\n                  </InputAdornment>\n                }\n              />}\n          />\n\n        </FormControl>\n\n        {firstChart && <p className='wrp-errors-code pop-up'>Seul caractère numérique, a 6 chiffre sont valides</p>}\n        <p className='wrp-errors-code-transparent pop-up'>Seul caractère numérique</p>\n      </Box>\n\n      <Box sx={{ display: 'flex', flexWrap: 'wrap' }}>\n\n        <FormControl\n          sx={{ width: '100%' }}\n\n          variant=\"standard\">\n          <InputLabel htmlFor=\"standard-adornment-password\"><span className='pop-up'>Confirmer le nouveau code</span></InputLabel>\n\n          <Controller\n            name=\"second\"\n            control={control}\n            render={({ field }) =>\n\n              <Input\n                id=\"standard-adornment-password\"\n                inputProps={{\n                  autoComplete: \"off\", inputMode: 'numeric'\n                }}\n\n\n                {...field}\n                type={showPassword ? 'numeric' : 'password'}\n\n                endAdornment={\n                  <InputAdornment position=\"end\">\n\n                    <IconButton\n                      aria-label=\"toggle password visibility\"\n                      onClick={handleClickShowPassword}\n                      onMouseDown={handleMouseDownPassword}\n                    >\n                      {showPassword ? <VisibilityOff /> : <Visibility />}\n                    </IconButton>\n\n                  </InputAdornment>\n                }\n              />}\n          />\n\n        </FormControl>\n\n        {checked && <p className='wrp-errors-code'>Les codes sont différents vérifier</p>}\n        <p className='wrp-errors-code-transparent'>Seul caractère numérique</p>\n      </Box>\n\n      <Dialog\n        fullWidth={fullWidth}\n        maxWidth={maxWidth}\n        open={open}\n        onClose={handleClose}>\n\n        <DialogTitle><h1 className='pop-up'>MuunganoMoney</h1></DialogTitle>\n        <DialogContent>\n\n          <DialogContentText>\n            <p className='pop-up'>\n              Le code saisi est valide avec six chiffres numériques.\n              Évitez les valeurs identiques en caractères.\n     </p>\n          </DialogContentText>\n\n        </DialogContent>\n        <DialogActions>\n          <Button onClick={handleClose}><span className='pop-up'>Fermer</span></Button>\n        </DialogActions>\n      </Dialog>\n\n      <button className='Btn'>Valider</button>\n    </form>\n  );\n};\n\nasync function updatePinInWithDocs(verifierCollection, newPin, numPhone) {\n\n  const washingtonRef = doc(db, verifierCollection ? \"client\" : \"agent\", numPhone);\n  // Set the \"capital\" field of the city 'DC'\n  await updateDoc(washingtonRef, { pin: newPin });\n};\n"]},"metadata":{},"sourceType":"module"}