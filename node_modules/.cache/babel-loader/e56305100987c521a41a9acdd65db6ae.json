{"ast":null,"code":"var _jsxFileName = \"/Users/USER/Desktop/Agent/src/Register/SignIn/Input.js\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport './Input.css';\nimport Media from 'react-media';\nimport { useForm, Controller } from 'react-hook-form';\nimport { useNavigate } from 'react-router-dom';\nimport { doc, setDoc, updateDoc, increment, onSnapshot } from 'firebase/firestore';\nimport { db } from '../../firebase';\nimport dayjs from 'dayjs';\nimport MomentUtils from \"@date-io/moment\";\nimport { phoneX } from '../Phone/Input';\nimport moment from 'moment';\nimport \"moment/locale/fr\";\nimport DateFnsUtils from '@date-io/date-fns'; // choose your lib\n\nimport { DatePicker, MuiPickersUtilsProvider } from '@material-ui/pickers';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nlet dateBirth = '';\nconst localeMap = {\n  en: \"en\",\n  fr: \"fr\",\n  ru: \"ru\"\n};\nexport let nowField = moment().date(); // Input Field Component \n\nexport default function ReturnInput() {\n  return /*#__PURE__*/_jsxDEV(Media, {\n    queries: {\n      small: '(max-width: 599px)',\n      medium: '(min-width: 600px) and (max-width:1199px)',\n      large: '(min-width: 1200px)'\n    },\n    children: matches => /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [matches.small && /*#__PURE__*/_jsxDEV(ScreenSmall, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 29\n      }, this), matches.medium && /*#__PURE__*/_jsxDEV(SreenLarge, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 30\n      }, this), matches.large && /*#__PURE__*/_jsxDEV(SreenLarge, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 29\n      }, this)]\n    }, void 0, true)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 33,\n    columnNumber: 5\n  }, this);\n}\n_c = ReturnInput;\n;\nexport const SreenLarge = () => {\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"view-input-signin-register\",\n    children: /*#__PURE__*/_jsxDEV(FormInput, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 52,\n    columnNumber: 5\n  }, this);\n};\n_c2 = SreenLarge;\nexport const ScreenSmall = () => {\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"view-input-signin-register-sm\",\n    children: /*#__PURE__*/_jsxDEV(FormInput, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 60,\n    columnNumber: 5\n  }, this);\n};\n_c3 = ScreenSmall;\nexport const FormInput = () => {\n  _s();\n\n  let regular = /[a-z]+/;\n  const [locale, setLocale] = React.useState(\"fr\");\n  const [tablepartner, setTablepartner] = React.useState();\n  const [selectedDate, handleDateChange] = React.useState(new Date());\n  const navigation = useNavigate();\n  const existing = {\n    state: \"agent\",\n    cdf: 0,\n    usd: 0,\n    thriftcdf: 0,\n    thriftusd: 0,\n    accountdate: moment().format(),\n    delay: '',\n    code: 'muuganomoney',\n    phoneclient: '',\n    unite: '',\n    solde: 0,\n    money: 0,\n    frais: 0,\n    user: '',\n    swap: []\n  };\n  const {\n    register,\n    handleSubmit,\n    control\n  } = useForm({\n    defaultValues: {\n      phone: '+243'\n    }\n  });\n  React.useEffect(async () => {\n    try {\n      await onSnapshot(doc(db, \"muungano\", \"partner\"), doc => {\n        setTablepartner(doc.data().agent);\n      });\n    } catch {\n      window.console.log('erreur disponible');\n    }\n  }, []); // Ref collection database!\n\n  const onSubmit = async data => {\n    dateBirth = data.date.format('LL');\n\n    if (data.phone.length != 13 || regular.test(data.phone)) {\n      window.alert('Numéro de téléphone est Incorrect!');\n    } else {\n      let valuePartner = Number(tablepartner[nowField]) + 1;\n      let arrayPartner = tablepartner;\n\n      for (let i = nowField; i <= 31; i++) {\n        arrayPartner[i] = valuePartner;\n      } // signinUpdate();\n      // signinAgent();\n      // signinClient();\n\n\n      data.map(); // const clone = Object.assign(data, existing);\n      // saveInfoInWithDocs(phoneX, clone);\n      // incrementPartner(arrayPartner);\n      // navigation('/register/success');\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    onSubmit: handleSubmit(onSubmit),\n    children: [/*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      placeholder: \"Nom\",\n      name: \"firstname\",\n      ...register('firstname', {\n        required: true\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 130,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      placeholder: \"Pr\\xE8nom\",\n      name: \"lastname\",\n      ...register('lastname', {\n        required: true\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 131,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"email\",\n      placeholder: \"Email\",\n      name: \"email\",\n      ...register('email', {\n        required: false\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 132,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"phone\",\n      placeholder: \"Phone\",\n      name: \"phone\",\n      ...register('phone', {\n        required: true\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 133,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      placeholder: \"Nom du Business\",\n      name: \"job\",\n      ...register('job', {\n        required: true\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 134,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      placeholder: \"Ville\",\n      name: \"ville\",\n      ...register('ville', {\n        required: true\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 135,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      placeholder: \"Addresse\",\n      name: \"addresse\",\n      ...register('addresse', {\n        required: true\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 136,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Controller, {\n      name: \"date\",\n      control: control,\n      render: ({\n        field\n      }) => /*#__PURE__*/_jsxDEV(MuiPickersUtilsProvider, {\n        libInstance: moment,\n        utils: MomentUtils,\n        locale: locale,\n        children: /*#__PURE__*/_jsxDEV(DatePicker, {\n          disableFuture: true,\n          openTo: \"year\",\n          format: \"dd/MM/yyyy\",\n          label: \"Date de naissance\",\n          views: [\"year\", \"month\", \"date\"],\n          value: selectedDate,\n          onChange: handleDateChange,\n          ...field\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 145,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 142,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 138,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"Btn\",\n      children: \"Enregistre\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 157,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 129,\n    columnNumber: 5\n  }, this);\n};\n\n_s(FormInput, \"2ewDOB2fh3ib+4HBfTol2rHg3Jc=\", false, function () {\n  return [useNavigate, useForm];\n});\n\n_c4 = FormInput;\n\nasync function saveInfoInWithDocs(phoneInDocs, user) {\n  await setDoc(doc(db, \"agent\", phoneInDocs), user);\n}\n\n;\n\nasync function incrementPartner(arrayPartner) {\n  const washingtonRef = doc(db, \"muungano\", \"partner\");\n  await updateDoc(washingtonRef, {\n    agent: arrayPartner\n  });\n  const partnerRef = doc(db, \"muunganomoney\", \"partner\");\n  await updateDoc(partnerRef, {\n    agent: increment(1)\n  });\n}\n\n; // let order = [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0];\n// async function signinUpdate() {\n//  // Add a new document in collection \"cities\"\n//  await setDoc(doc(db, \"muungano\", \"commission\"), {\n//   cdf: order,\n//   usd: order,\n//  });\n//  await setDoc(doc(db, \"muungano\", \"emoney\"), {\n//   cdf: order,\n//   usd: order,\n//  });\n//  await setDoc(doc(db, \"muungano\", \"partner\"), {\n//   agent: order,\n//   client: order,\n//  });\n//  await setDoc(doc(db, \"muungano\", \"upgrade\"), {\n//   cdf: order,\n//   usd: order,\n//  });\n// }\n// async function signinAgent() {\n//  // Add a new document in collection \"cities\"\n//  await setDoc(doc(db, \"agents\", \"commission\"), {\n//   cdf: order,\n//   usd: order,\n//  });\n//  // Add a new document in collection \"cities\"\n//  await setDoc(doc(db, \"agents\", \"emoney\"), {\n//   cdf: order,\n//   usd: order,\n//  });\n// }\n// async function signinClient() {\n//  // Add a new document in collection \"cities\"\n//  await setDoc(doc(db, \"clients\", \"emoney\"), {\n//   cdf: order,\n//   usd: order,\n//  });\n// };\n\nvar _c, _c2, _c3, _c4;\n\n$RefreshReg$(_c, \"ReturnInput\");\n$RefreshReg$(_c2, \"SreenLarge\");\n$RefreshReg$(_c3, \"ScreenSmall\");\n$RefreshReg$(_c4, \"FormInput\");","map":{"version":3,"sources":["/Users/USER/Desktop/Agent/src/Register/SignIn/Input.js"],"names":["React","Media","useForm","Controller","useNavigate","doc","setDoc","updateDoc","increment","onSnapshot","db","dayjs","MomentUtils","phoneX","moment","DateFnsUtils","DatePicker","MuiPickersUtilsProvider","dateBirth","localeMap","en","fr","ru","nowField","date","ReturnInput","small","medium","large","matches","SreenLarge","ScreenSmall","FormInput","regular","locale","setLocale","useState","tablepartner","setTablepartner","selectedDate","handleDateChange","Date","navigation","existing","state","cdf","usd","thriftcdf","thriftusd","accountdate","format","delay","code","phoneclient","unite","solde","money","frais","user","swap","register","handleSubmit","control","defaultValues","phone","useEffect","data","agent","window","console","log","onSubmit","length","test","alert","valuePartner","Number","arrayPartner","i","map","required","field","saveInfoInWithDocs","phoneInDocs","incrementPartner","washingtonRef","partnerRef"],"mappings":"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","sourcesContent":["import React from 'react';\nimport './Input.css';\nimport Media from 'react-media';\nimport { useForm, Controller } from 'react-hook-form';\nimport { useNavigate } from 'react-router-dom';\nimport { doc, setDoc, updateDoc, increment, onSnapshot } from 'firebase/firestore';\nimport { db } from '../../firebase';\nimport dayjs from 'dayjs';\nimport MomentUtils from \"@date-io/moment\";\nimport { phoneX } from '../Phone/Input';\nimport moment from 'moment';\nimport \"moment/locale/fr\";\n\nimport DateFnsUtils from '@date-io/date-fns'; // choose your lib\nimport {\n  DatePicker,\n  MuiPickersUtilsProvider,\n} from '@material-ui/pickers';\n\n\nlet dateBirth = '';\nconst localeMap = {\n  en: \"en\",\n  fr: \"fr\",\n  ru: \"ru\",\n};\n\nexport let nowField = moment().date();\n\n// Input Field Component \nexport default function ReturnInput() {\n  return (\n    <Media\n      queries={{\n        small: '(max-width: 599px)',\n        medium: '(min-width: 600px) and (max-width:1199px)',\n        large: '(min-width: 1200px)',\n      }}>\n      {matches => (\n        <>\n          {matches.small && <ScreenSmall />}\n          {matches.medium && <SreenLarge />}\n          {matches.large && <SreenLarge />}\n        </>\n      )}\n    </Media>\n  );\n};\n\nexport const SreenLarge = () => {\n  return (\n    <div className='view-input-signin-register'>\n      <FormInput />\n\n    </div>\n  )\n}\nexport const ScreenSmall = () => {\n  return (\n    <div className='view-input-signin-register-sm'>\n      <FormInput />\n\n    </div>\n  )\n};\nexport const FormInput = () => {\n\n  let regular = /[a-z]+/;\n\n  const [locale, setLocale] = React.useState(\"fr\");\n  const [tablepartner, setTablepartner] = React.useState();\n  const [selectedDate, handleDateChange] = React.useState(new Date());\n\n  const navigation = useNavigate();\n\n  const existing = { state: \"agent\", cdf: 0, usd: 0, thriftcdf: 0, thriftusd: 0, accountdate: moment().format(), delay: '', code: 'muuganomoney', phoneclient: '', unite: '', solde: 0, money: 0, frais: 0, user: '', swap: [] }\n  const { register, handleSubmit, control } = useForm({\n    defaultValues: {\n      phone: '+243'\n    }\n  });\n\n  React.useEffect(async () => {\n\n    try {\n      await onSnapshot(doc(db, \"muungano\", \"partner\"), (doc) => {\n        setTablepartner(doc.data().agent);\n      });\n\n    } catch {\n      window.console.log('erreur disponible');\n    }\n\n  }, []);\n\n  // Ref collection database!\n  const onSubmit = async (data) => {\n\n    dateBirth = data.date.format('LL');\n\n    if (data.phone.length != 13 || regular.test(data.phone)) {\n      window.alert('Numéro de téléphone est Incorrect!');\n\n    } else {\n\n      let valuePartner = Number(tablepartner[nowField]) + 1;\n      let arrayPartner = tablepartner;\n\n      for (let i = nowField; i <= 31; i++) {\n        arrayPartner[i] = valuePartner;\n      }\n\n      // signinUpdate();\n      // signinAgent();\n      // signinClient();\n\n      data.map()\n\n\n      // const clone = Object.assign(data, existing);\n      // saveInfoInWithDocs(phoneX, clone);\n      // incrementPartner(arrayPartner);\n      // navigation('/register/success');\n\n    }\n  };\n\n  return (\n    <form onSubmit={handleSubmit(onSubmit)}>\n      <input type='text' placeholder='Nom' name='firstname' {...register('firstname', { required: true })} />\n      <input type='text' placeholder='Prènom' name='lastname' {...register('lastname', { required: true })} />\n      <input type='email' placeholder='Email' name='email' {...register('email', { required: false })} />\n      <input type='phone' placeholder='Phone' name='phone' {...register('phone', { required: true })} />\n      <input type='text' placeholder='Nom du Business' name='job' {...register('job', { required: true })} />\n      <input type='text' placeholder='Ville' name='ville' {...register('ville', { required: true })} />\n      <input type='text' placeholder='Addresse' name='addresse' {...register('addresse', { required: true })} />\n\n      <Controller\n        name=\"date\"\n        control={control}\n        render={({ field }) =>\n          <MuiPickersUtilsProvider\n            libInstance={moment} utils={MomentUtils} locale={locale}>\n\n            <DatePicker\n              disableFuture\n              openTo=\"year\"\n              format=\"dd/MM/yyyy\"\n              label=\"Date de naissance\"\n              views={[\"year\", \"month\", \"date\"]}\n              value={selectedDate}\n              onChange={handleDateChange}\n              {...field}\n            />\n          </MuiPickersUtilsProvider>}\n      />\n      <button className='Btn'>Enregistre</button>\n    </form>\n  )\n};\n\nasync function saveInfoInWithDocs(phoneInDocs, user) {\n  await setDoc(doc(db, \"agent\", phoneInDocs), user);\n};\nasync function incrementPartner(arrayPartner) {\n\n  const washingtonRef = doc(db, \"muungano\", \"partner\");\n  await updateDoc(washingtonRef, {\n    agent: arrayPartner,\n  });\n\n  const partnerRef = doc(db, \"muunganomoney\", \"partner\");\n  await updateDoc(partnerRef, {\n    agent: increment(1),\n  });\n\n};\n\n// let order = [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0];\n// async function signinUpdate() {\n\n//  // Add a new document in collection \"cities\"\n//  await setDoc(doc(db, \"muungano\", \"commission\"), {\n//   cdf: order,\n//   usd: order,\n//  });\n\n//  await setDoc(doc(db, \"muungano\", \"emoney\"), {\n//   cdf: order,\n//   usd: order,\n//  });\n\n//  await setDoc(doc(db, \"muungano\", \"partner\"), {\n//   agent: order,\n//   client: order,\n//  });\n\n//  await setDoc(doc(db, \"muungano\", \"upgrade\"), {\n//   cdf: order,\n//   usd: order,\n//  });\n\n// }\n// async function signinAgent() {\n\n//  // Add a new document in collection \"cities\"\n//  await setDoc(doc(db, \"agents\", \"commission\"), {\n//   cdf: order,\n//   usd: order,\n//  });\n\n//  // Add a new document in collection \"cities\"\n//  await setDoc(doc(db, \"agents\", \"emoney\"), {\n//   cdf: order,\n//   usd: order,\n//  });\n\n// }\n// async function signinClient() {\n\n//  // Add a new document in collection \"cities\"\n//  await setDoc(doc(db, \"clients\", \"emoney\"), {\n//   cdf: order,\n//   usd: order,\n//  });\n\n// };\n\n"]},"metadata":{},"sourceType":"module"}