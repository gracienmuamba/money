{"ast":null,"code":"var _jsxFileName = \"/Users/USER/Desktop/Money/src/Sign/Code.js\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport './Code.css';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport Button from 'react-bootstrap/Button';\nimport Media from 'react-media';\nimport { useForm } from 'react-hook-form'; // Input Field form\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport default function REturnInPutCode() {\n  return /*#__PURE__*/_jsxDEV(Media, {\n    queries: {\n      small: '(max-width: 599px)',\n      medium: '(min-width: 600px) and (max-width:1199px)',\n      large: '(min-width: 1200px)'\n    },\n    children: matches => /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [matches.small && /*#__PURE__*/_jsxDEV(ScreenSmall, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 23,\n        columnNumber: 24\n      }, this), matches.medium && /*#__PURE__*/_jsxDEV(ScreenLarge, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 24,\n        columnNumber: 25\n      }, this), matches.large && /*#__PURE__*/_jsxDEV(ScreenLarge, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 25,\n        columnNumber: 24\n      }, this)]\n    }, void 0, true)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 15,\n    columnNumber: 3\n  }, this);\n}\n_c = REturnInPutCode;\n;\nexport const ScreenLarge = () => {\n  _s();\n\n  const {\n    register,\n    handleSubmit\n  } = useForm();\n\n  const onsubmit = data => {\n    window.alert(data);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"form-input-sign\",\n    children: /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit(onsubmit),\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        focus: true,\n        placeholder: \"Code de validation\",\n        name: \"code\",\n        ...register('code', {\n          required: true\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"btn\",\n        children: \"Connexion\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 5\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 4\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 40,\n    columnNumber: 3\n  }, this);\n};\n\n_s(ScreenLarge, \"zkd3JmxRK/AmyiWtSfciHeYO5Zk=\", false, function () {\n  return [useForm];\n});\n\n_c2 = ScreenLarge;\nexport const ScreenSmall = () => /*#__PURE__*/_jsxDEV(\"div\", {\n  className: \"form-input-sign-sm\",\n  children: /*#__PURE__*/_jsxDEV(\"form\", {\n    children: [/*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      placeholder: \"Telephone numero \",\n      name: \"phone\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 4\n    }, this), /*#__PURE__*/_jsxDEV(Button, {\n      children: \"Suivant\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 4\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 52,\n    columnNumber: 3\n  }, this)\n}, void 0, false, {\n  fileName: _jsxFileName,\n  lineNumber: 51,\n  columnNumber: 2\n}, this);\n_c3 = ScreenSmall;\n\nvar _c, _c2, _c3;\n\n$RefreshReg$(_c, \"REturnInPutCode\");\n$RefreshReg$(_c2, \"ScreenLarge\");\n$RefreshReg$(_c3, \"ScreenSmall\");","map":{"version":3,"sources":["/Users/USER/Desktop/Money/src/Sign/Code.js"],"names":["React","Button","Media","useForm","REturnInPutCode","small","medium","large","matches","ScreenLarge","register","handleSubmit","onsubmit","data","window","alert","required","ScreenSmall"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAO,YAAP;AAEA,OAAO,sCAAP;AACA,OAAOC,MAAP,MAAmB,wBAAnB;AACA,OAAOC,KAAP,MAAkB,aAAlB;AAEA,SAASC,OAAT,QAAwB,iBAAxB,C,CAGA;;;;AACA,eAAe,SAASC,eAAT,GAA2B;AAEzC,sBACC,QAAC,KAAD;AACC,IAAA,OAAO,EAAE;AACRC,MAAAA,KAAK,EAAE,oBADC;AAERC,MAAAA,MAAM,EAAE,2CAFA;AAGRC,MAAAA,KAAK,EAAE;AAHC,KADV;AAAA,cAMEC,OAAO,iBACP;AAAA,iBACEA,OAAO,CAACH,KAAR,iBAAiB,QAAC,WAAD;AAAA;AAAA;AAAA;AAAA,cADnB,EAEEG,OAAO,CAACF,MAAR,iBAAkB,QAAC,WAAD;AAAA;AAAA;AAAA;AAAA,cAFpB,EAGEE,OAAO,CAACD,KAAR,iBAAiB,QAAC,WAAD;AAAA;AAAA;AAAA;AAAA,cAHnB;AAAA;AAPF;AAAA;AAAA;AAAA;AAAA,UADD;AAgBA;KAlBuBH,e;AAkBvB;AAGD,OAAO,MAAMK,WAAW,GAAG,MAAM;AAAA;;AAChC,QAAM;AAAEC,IAAAA,QAAF;AAAYC,IAAAA;AAAZ,MAA6BR,OAAO,EAA1C;;AACA,QAAMS,QAAQ,GAAIC,IAAD,IAAU;AAC1BC,IAAAA,MAAM,CAACC,KAAP,CAAaF,IAAb;AACA,GAFD;;AAIA,sBACC;AAAK,IAAA,SAAS,EAAC,iBAAf;AAAA,2BACC;AAAM,MAAA,QAAQ,EAAEF,YAAY,CAACC,QAAD,CAA5B;AAAA,8BACC;AAAO,QAAA,IAAI,EAAC,MAAZ;AAAmB,QAAA,KAAK,MAAxB;AAAyB,QAAA,WAAW,EAAC,oBAArC;AAA0D,QAAA,IAAI,EAAC,MAA/D;AAAA,WAA2EF,QAAQ,CAAC,MAAD,EAAS;AAAEM,UAAAA,QAAQ,EAAE;AAAZ,SAAT;AAAnF;AAAA;AAAA;AAAA;AAAA,cADD,eAEC;AACC,QAAA,SAAS,EAAC,KADX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAFD;AAAA;AAAA;AAAA;AAAA;AAAA;AADD;AAAA;AAAA;AAAA;AAAA,UADD;AASA,CAfM;;GAAMP,W;UACuBN,O;;;MADvBM,W;AAiBb,OAAO,MAAMQ,WAAW,GAAG,mBAC1B;AAAK,EAAA,SAAS,EAAC,oBAAf;AAAA,yBACC;AAAA,4BACC;AAAO,MAAA,IAAI,EAAC,MAAZ;AAAmB,MAAA,WAAW,EAAC,mBAA/B;AAAmD,MAAA,IAAI,EAAC;AAAxD;AAAA;AAAA;AAAA;AAAA,YADD,eAEC,QAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAFD;AAAA;AAAA;AAAA;AAAA;AAAA;AADD;AAAA;AAAA;AAAA;AAAA,QADM;MAAMA,W","sourcesContent":["import React from 'react';\nimport './Code.css';\n\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport Button from 'react-bootstrap/Button';\nimport Media from 'react-media';\n\nimport { useForm } from 'react-hook-form';\n\n\n// Input Field form\nexport default function REturnInPutCode() {\n\n return (\n  <Media\n   queries={{\n    small: '(max-width: 599px)',\n    medium: '(min-width: 600px) and (max-width:1199px)',\n    large: '(min-width: 1200px)',\n   }}>\n   {matches => (\n    <>\n     {matches.small && <ScreenSmall />}\n     {matches.medium && <ScreenLarge />}\n     {matches.large && <ScreenLarge />}\n    </>\n   )}\n  </Media>\n );\n};\n\n\nexport const ScreenLarge = () => {\n const { register, handleSubmit } = useForm();\n const onsubmit = (data) => {\n  window.alert(data);\n }\n\n return (\n  <div className='form-input-sign'>\n   <form onSubmit={handleSubmit(onsubmit)}>\n    <input type='text' focus placeholder='Code de validation' name='code'  {...register('code', { required: true })} />\n    <button\n     className='btn'>Connexion</button>\n   </form>\n  </div>\n )\n};\n\nexport const ScreenSmall = () => (\n <div className='form-input-sign-sm'>\n  <form>\n   <input type='text' placeholder='Telephone numero ' name='phone' />\n   <Button>Suivant</Button>\n  </form>\n </div>\n);"]},"metadata":{},"sourceType":"module"}