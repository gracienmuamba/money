{"ast":null,"code":"var _jsxFileName = \"/Users/USER/Desktop/MuunganoMoney/src/USD/Input.js\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport './Input.css';\nimport REturnPriX from './Prix';\nimport Media from 'react-media';\nimport { useForm } from 'react-hook-form';\nimport { useNavigate } from 'react-router-dom';\nimport { Usd } from '../Money';\nimport { doc, updateDoc, getDocs, collection, getDoc } from 'firebase/firestore';\nimport { db } from '../firebase';\nimport { phoneX } from '../Sign/Input';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport let money = 0;\nexport let count = 0;\nexport let frais = 0;\nexport let solde = 0;\nexport let Unite = null; // Return Phone input component\n\nexport default function REturnInputPhone() {\n  return /*#__PURE__*/_jsxDEV(Media, {\n    queries: {\n      small: '(max-width: 599px)',\n      medium: '(min-width: 600px) and (max-width:1199px)',\n      large: '(min-width: 1200px)'\n    },\n    children: matches => /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [matches.small && /*#__PURE__*/_jsxDEV(ScreenSmall, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 24\n      }, this), matches.medium && /*#__PURE__*/_jsxDEV(ScreenLarge, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 25\n      }, this), matches.large && /*#__PURE__*/_jsxDEV(ScreenLarge, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 24\n      }, this)]\n    }, void 0, true)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 27,\n    columnNumber: 3\n  }, this);\n}\n_c = REturnInputPhone;\n;\nexport const ScreenLarge = () => {\n  return /*#__PURE__*/_jsxDEV(FormInputValue, {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 45,\n    columnNumber: 3\n  }, this);\n};\n_c2 = ScreenLarge;\nexport const ScreenSmall = () => {\n  return /*#__PURE__*/_jsxDEV(FormInputValue, {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 50,\n    columnNumber: 3\n  }, this);\n};\n_c3 = ScreenSmall;\nexport const FormInputValue = () => {\n  _s();\n\n  const navigation = useNavigate();\n  const {\n    register,\n    handleSubmit,\n    watch,\n    reset\n  } = useForm();\n  let verifierCollection = null;\n  let pushUser = new Array();\n  const [prix, setPrix] = React.useState(Usd);\n  const [agent, setAgent] = React.useState();\n  let entry = watch('count');\n  let value = entry == undefined ? prix : Number(prix) - Number(entry);\n\n  if (Number(entry) <= 5) {\n    frais = remainderInput(entry, 17.5);\n    count = doesInputEntry(entry, frais);\n  } else if (Number(entry) > 5 && Number(entry) <= 10) {\n    frais = remainderInput(entry, 8.7);\n    count = count = doesInputEntry(entry, frais);\n  } else if (Number(entry) > 10 && Number(entry) <= 20) {\n    frais = remainderInput(entry, 5.4);\n    count = doesInputEntry(entry, frais);\n  } else if (Number(entry) > 20 && Number(entry) <= 30) {\n    frais = remainderInput(entry, 2.8);\n    count = doesInputEntry(entry, frais);\n  } else if (Number(entry) > 30 && Number(entry) <= 50) {\n    frais = remainderInput(entry, 2.9);\n    count = doesInputEntry(entry, frais);\n  } else if (Number(entry) > 50 && Number(entry) <= 100) {\n    frais = remainderInput(entry, 1.98);\n    count = doesInputEntry(entry, frais);\n  } else if (Number(entry) > 100 && Number(entry) <= 400) {\n    frais = remainderInput(entry, 1.7);\n    count = doesInputEntry(entry, frais);\n  } else if (Number(entry) > 400 && Number(entry) <= 1000) {\n    frais = remainderInput(entry, 1.69);\n    count = doesInputEntry(entry, frais);\n  } else if (Number(entry) > 1000 && Number(entry) <= 2000) {\n    frais = remainderInput(entry, 1.6);\n    count = doesInputEntry(entry, frais);\n  } else {\n    frais = remainderInput(entry, 1.6);\n    count = doesInputEntry(entry, frais);\n  }\n\n  ;\n  React.useEffect(async () => {\n    const querySnapshot = await getDocs(collection(db, \"client\"));\n    querySnapshot.forEach(doc => {\n      pushUser.push(doc.id);\n    });\n    verifierCollection = pushUser.some(value => value == phoneX);\n    const docRef = doc(db, verifierCollection ? \"client\" : \"agent\", phoneX);\n    const docSnap = await getDoc(docRef);\n\n    if (docSnap.exists()) {\n      setPrix(docSnap.data().usd);\n      setAgent(docSnap.data().state);\n    }\n  }, []);\n\n  const onSubmit = async data => {\n    if (Number(data.count) > Number(prix) || Number(data.count) < 1) {\n      window.alert(`Montant n'est pas disponible.`);\n      reset();\n    } else {\n      money = Math.floor(Number(count));\n      Unite = 'USD';\n      frais = Math.floor(Number(frais));\n      solde = Math.floor(Number(data.count));\n      navigation('/valid-usd');\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(REturnPriX, {\n      count: `${value}`\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 146,\n      columnNumber: 4\n    }, this), agent != \"agent\" && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"wrp-frais-withdraw\",\n      children: `Frais ${count}`\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 147,\n      columnNumber: 25\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"wrp-inputphone-send\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Entre votre Money\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 150,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: handleSubmit(onSubmit),\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: 'text',\n          ...register('count', {\n            required: true\n          }),\n          name: \"count\",\n          placeholder: '0',\n          className: \"input-count\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 153,\n          columnNumber: 6\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"wrp-Btn-input-withdraw\",\n          children: /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"Btn\",\n            children: \"Suivant\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 160,\n            columnNumber: 7\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 159,\n          columnNumber: 6\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 151,\n        columnNumber: 5\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 149,\n      columnNumber: 4\n    }, this)]\n  }, void 0, true);\n}; // ======================================\n\n_s(FormInputValue, \"z9OElu5g4g5okQRgkJ7Da23TGtU=\", false, function () {\n  return [useNavigate, useForm];\n});\n\n_c4 = FormInputValue;\nexport const doesInputEntry = (x, y) => {\n  return Math.floor(Number(x) - Number(y));\n};\nexport const remainderInput = (entryInput, value) => {\n  return Math.floor(entryInput * value) / 100;\n};\n\nvar _c, _c2, _c3, _c4;\n\n$RefreshReg$(_c, \"REturnInputPhone\");\n$RefreshReg$(_c2, \"ScreenLarge\");\n$RefreshReg$(_c3, \"ScreenSmall\");\n$RefreshReg$(_c4, \"FormInputValue\");","map":{"version":3,"sources":["/Users/USER/Desktop/MuunganoMoney/src/USD/Input.js"],"names":["React","REturnPriX","Media","useForm","useNavigate","Usd","doc","updateDoc","getDocs","collection","getDoc","db","phoneX","money","count","frais","solde","Unite","REturnInputPhone","small","medium","large","matches","ScreenLarge","ScreenSmall","FormInputValue","navigation","register","handleSubmit","watch","reset","verifierCollection","pushUser","Array","prix","setPrix","useState","agent","setAgent","entry","value","undefined","Number","remainderInput","doesInputEntry","useEffect","querySnapshot","forEach","push","id","some","docRef","docSnap","exists","data","usd","state","onSubmit","window","alert","Math","floor","required","x","y","entryInput"],"mappings":"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","sourcesContent":["\nimport React from 'react';\nimport './Input.css';\nimport REturnPriX from './Prix';\nimport Media from 'react-media';\nimport {\n useForm\n} from 'react-hook-form';\nimport { useNavigate } from 'react-router-dom';\nimport { Usd } from '../Money';\n\nimport { doc, updateDoc, getDocs, collection, getDoc } from 'firebase/firestore';\nimport { db } from '../firebase';\nimport { phoneX } from '../Sign/Input';\n\n\nexport let money = 0;\nexport let count = 0;\nexport let frais = 0;\nexport let solde = 0;\nexport let Unite = null;\n\n\n// Return Phone input component\nexport default function REturnInputPhone() {\n return (\n  <Media\n   queries={{\n    small: '(max-width: 599px)',\n    medium: '(min-width: 600px) and (max-width:1199px)',\n    large: '(min-width: 1200px)',\n   }}>\n   {matches => (\n    <>\n     {matches.small && <ScreenSmall />}\n     {matches.medium && <ScreenLarge />}\n     {matches.large && <ScreenLarge />}\n    </>\n   )}\n  </Media>\n );\n};\nexport const ScreenLarge = () => {\n return (\n  <FormInputValue />\n );\n};\nexport const ScreenSmall = () => {\n return (\n  <FormInputValue />\n )\n};\nexport const FormInputValue = () => {\n\n const navigation = useNavigate();\n const { register, handleSubmit, watch, reset } = useForm();\n\n let verifierCollection = null;\n let pushUser = new Array();\n\n const [prix, setPrix] = React.useState(Usd);\n const [agent, setAgent] = React.useState();\n\n let entry = watch('count');\n let value = entry == undefined ? prix : Number(prix) - Number(entry);\n\n\n if (Number(entry) <= 5) {\n  frais = remainderInput(entry, 17.5);\n  count = doesInputEntry(entry, frais);\n }\n else if (Number(entry) > 5 && Number(entry) <= 10) {\n  frais = remainderInput(entry, 8.7);\n  count = count = doesInputEntry(entry, frais)\n }\n else if (Number(entry) > 10 && Number(entry) <= 20) {\n  frais = remainderInput(entry, 5.4);\n  count = doesInputEntry(entry, frais);\n }\n else if (Number(entry) > 20 && Number(entry) <= 30) {\n  frais = remainderInput(entry, 2.8);\n  count = doesInputEntry(entry, frais);\n }\n else if (Number(entry) > 30 && Number(entry) <= 50) {\n  frais = remainderInput(entry, 2.9);\n  count = doesInputEntry(entry, frais);\n }\n else if (Number(entry) > 50 && Number(entry) <= 100) {\n  frais = remainderInput(entry, 1.98);\n  count = doesInputEntry(entry, frais);\n }\n else if (Number(entry) > 100 && Number(entry) <= 400) {\n  frais = remainderInput(entry, 1.7);\n  count = doesInputEntry(entry, frais);\n }\n else if (Number(entry) > 400 && Number(entry) <= 1000) {\n  frais = remainderInput(entry, 1.69);\n  count = doesInputEntry(entry, frais);\n }\n else if (Number(entry) > 1000 && Number(entry) <= 2000) {\n  frais = remainderInput(entry, 1.6);\n  count = doesInputEntry(entry, frais);\n }\n else {\n  frais = remainderInput(entry, 1.6);\n  count = doesInputEntry(entry, frais)\n };\n\n\n React.useEffect(async () => {\n\n  const querySnapshot = await getDocs(collection(db, \"client\"));\n  querySnapshot.forEach((doc) => {\n   pushUser.push(doc.id);\n  });\n  verifierCollection = pushUser.some(value => value == phoneX);\n\n  const docRef = doc(db, verifierCollection ? \"client\" : \"agent\", phoneX);\n  const docSnap = await getDoc(docRef);\n\n  if (docSnap.exists()) {\n   setPrix(docSnap.data().usd);\n   setAgent(docSnap.data().state);\n  }\n\n }, []);\n\n const onSubmit = async (data) => {\n\n  if (Number(data.count) > Number(prix) || Number(data.count) < 1) {\n   window.alert(`Montant n'est pas disponible.`);\n   reset();\n  } else {\n\n   money = Math.floor(Number(count));\n   Unite = 'USD'\n   frais = Math.floor(Number(frais));\n   solde = Math.floor(Number(data.count));\n\n   navigation('/valid-usd');\n  }\n };\n\n return (\n  <>\n   <REturnPriX count={`${value}`} />\n   {agent != \"agent\" && <div className='wrp-frais-withdraw'>{`Frais ${count}`}</div>}\n\n   <div className='wrp-inputphone-send'>\n    <h2>Entre votre Money</h2>\n    <form onSubmit={handleSubmit(onSubmit)}>\n\n     <input type={'text'}\n      {...register('count', { required: true })}\n      name=\"count\"\n      placeholder={'0'}\n      className='input-count'\n     />\n     <div className='wrp-Btn-input-withdraw'>\n      <button className='Btn'>Suivant</button>\n     </div>\n    </form>\n   </div>\n  </>\n );\n};\n\n// ======================================\nexport const doesInputEntry = (x, y) => {\n return Math.floor(Number(x) - Number(y));\n};\nexport const remainderInput = (entryInput, value) => {\n return Math.floor(entryInput * value) / 100;\n};"]},"metadata":{},"sourceType":"module"}