{"ast":null,"code":"var _jsxFileName = \"/Users/USER/Desktop/MuunganoMoney/src/ExFran/BtnBlocked.js\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport { HiLockClosed } from 'react-icons/hi';\nimport { useNavigate } from 'react-router-dom';\nimport { db } from '../firebase';\nimport { phoneX } from '../Sign/Input';\nimport { collection, getDocs, doc, getDoc } from \"firebase/firestore\";\nimport Media from 'react-media'; // Button blocked\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport default function ReturnBtnBlocKed() {\n  /*#__PURE__*/\n  _jsxDEV(Media, {\n    queries: {\n      small: '(max-width: 599px)',\n      medium: '(min-width: 600px) and (max-width:1199px)',\n      large: '(min-width: 1200px)'\n    },\n    children: matches => /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [matches.small && /*#__PURE__*/_jsxDEV(ScreenSmall, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 19,\n        columnNumber: 23\n      }, this), matches.medium && /*#__PURE__*/_jsxDEV(ScreenLarge, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 20,\n        columnNumber: 24\n      }, this), matches.large && /*#__PURE__*/_jsxDEV(ScreenLarge, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 21,\n        columnNumber: 23\n      }, this)]\n    }, void 0, true)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 11,\n    columnNumber: 2\n  }, this);\n}\n_c = ReturnBtnBlocKed;\n;\nexport const ScreenLarge = () => /*#__PURE__*/_jsxDEV(\"div\", {\n  className: \"wrp-btn-valid-exh\",\n  children: /*#__PURE__*/_jsxDEV(Btn, {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 29,\n    columnNumber: 3\n  }, this)\n}, void 0, false, {\n  fileName: _jsxFileName,\n  lineNumber: 28,\n  columnNumber: 2\n}, this);\n_c2 = ScreenLarge;\nexport const ScreenSmall = () => /*#__PURE__*/_jsxDEV(\"div\", {\n  className: \"wrp-btn-valid-exh-sm\",\n  children: /*#__PURE__*/_jsxDEV(Btn, {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 34,\n    columnNumber: 3\n  }, this)\n}, void 0, false, {\n  fileName: _jsxFileName,\n  lineNumber: 33,\n  columnNumber: 2\n}, this);\n_c3 = ScreenSmall;\nexport const Btn = () => {\n  _s();\n\n  let pushDocs = new Array();\n  const [state, setState] = React.useState();\n  const navigation = useNavigate();\n\n  const handlepath = event => {\n    event.preventDefault();\n    navigation('/send-blocked');\n  };\n\n  React.useEffect(async () => {\n    const querySnapshot = await getDocs(collection(db, \"client\"));\n    querySnapshot.forEach(doc => {\n      pushDocs.push(doc.id);\n    });\n    const verifier = pushDocs.some(value => value == phoneX);\n    const docRef = doc(db, verifier ? \"client\" : \"agent\", phoneX);\n    const docSnap = await getDoc(docRef);\n\n    if (docSnap.exists()) {\n      setState(docSnap.data().state);\n    }\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"button\", {\n    onClick: handlepath,\n    className: 'Btn-Closed',\n    children: [/*#__PURE__*/_jsxDEV(\"span\", {\n      children: state == \"client\" ? \"Retrait\" : \"Envoyer\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 4\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(HiLockClosed, {\n        size: '1em'\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 4\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 66,\n    columnNumber: 3\n  }, this);\n};\n\n_s(Btn, \"n4pWQA+OZSxgSInGBQyvJXu6WUw=\", false, function () {\n  return [useNavigate];\n});\n\n_c4 = Btn;\n\nvar _c, _c2, _c3, _c4;\n\n$RefreshReg$(_c, \"ReturnBtnBlocKed\");\n$RefreshReg$(_c2, \"ScreenLarge\");\n$RefreshReg$(_c3, \"ScreenSmall\");\n$RefreshReg$(_c4, \"Btn\");","map":{"version":3,"sources":["/Users/USER/Desktop/MuunganoMoney/src/ExFran/BtnBlocked.js"],"names":["React","HiLockClosed","useNavigate","db","phoneX","collection","getDocs","doc","getDoc","Media","ReturnBtnBlocKed","small","medium","large","matches","ScreenLarge","ScreenSmall","Btn","pushDocs","Array","state","setState","useState","navigation","handlepath","event","preventDefault","useEffect","querySnapshot","forEach","push","id","verifier","some","value","docRef","docSnap","exists","data"],"mappings":"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","sourcesContent":["import React from 'react';\nimport { HiLockClosed } from 'react-icons/hi';\nimport { useNavigate } from 'react-router-dom';\nimport { db } from '../firebase';\nimport { phoneX } from '../Sign/Input';\nimport { collection, getDocs, doc, getDoc } from \"firebase/firestore\";\nimport Media from 'react-media';\n\n// Button blocked\nexport default function ReturnBtnBlocKed() {\n <Media\n  queries={{\n   small: '(max-width: 599px)',\n   medium: '(min-width: 600px) and (max-width:1199px)',\n   large: '(min-width: 1200px)',\n  }}>\n  {matches => (\n   <>\n    {matches.small && <ScreenSmall />}\n    {matches.medium && <ScreenLarge />}\n    {matches.large && <ScreenLarge />}\n   </>\n  )}\n </Media>\n};\n\nexport const ScreenLarge = () => (\n <div className='wrp-btn-valid-exh'>\n  <Btn />\n </div>\n);\nexport const ScreenSmall = () => (\n <div className='wrp-btn-valid-exh-sm'>\n  <Btn />\n </div>\n);\nexport const Btn = () => {\n\n let pushDocs = new Array();\n const [state, setState] = React.useState();\n\n const navigation = useNavigate();\n const handlepath = (event) => {\n  event.preventDefault();\n  navigation('/send-blocked');\n };\n\n React.useEffect(async () => {\n\n  const querySnapshot = await getDocs(collection(db, \"client\"));\n  querySnapshot.forEach((doc) => {\n   pushDocs.push(doc.id);\n  });\n  const verifier = pushDocs.some(value => value == phoneX);\n\n  const docRef = doc(db, verifier ? \"client\" : \"agent\", phoneX);\n  const docSnap = await getDoc(docRef);\n\n  if (docSnap.exists()) {\n   setState(docSnap.data().state)\n  }\n\n }, []);\n\n return (\n  <button onClick={handlepath} className={'Btn-Closed'}>\n   <span>\n    {state == \"client\" ? \"Retrait\" : \"Envoyer\"}\n   </span>\n   <div><HiLockClosed size={'1em'} /></div>\n  </button>\n );\n};"]},"metadata":{},"sourceType":"module"}