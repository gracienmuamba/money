{"ast":null,"code":"var _jsxFileName = \"/Users/USER/Desktop/Agent/src/Remove/Client/Char.js\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport './Char.css';\nimport { doc, onSnapshot, collection, getDocs } from \"firebase/firestore\";\nimport { db } from '../../firebase';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nlet pushArray = new Array(); // Phone Component \n\nexport default function RetuRnChArs() {\n  _s();\n\n  const [first, setFirst] = React.useState(' ');\n  React.useEffect(async () => {\n    const querySnapshot = await getDocs(collection(db, \"client\"));\n    querySnapshot.forEach(doc => {\n      // doc.data() is never undefined for query doc snapshots\n      pushArray.push(doc.id);\n    });\n    const verifier = pushArray.some(value => value == JSON.parse(window.localStorage.getItem('PHONE_USER_REMOVE'))); // onSnapshot(doc(db, verifier ? \"client\" : \"agent\", JSON.parse(window.localStorage.getItem('PHONE_USER_REMOVE'))), (doc) => {\n    //  setFirst(doc.data().firstname);\n    // });\n\n    const docRef = doc(db, verifier ? \"client\" : \"agent\", JSON.parse(window.localStorage.getItem('PHONE_USER_REMOVE')));\n    const docSnap = await getDoc(docRef);\n\n    if (docSnap.exists()) {\n      setFirst(docSnap.data().firstname);\n    } else {\n      // doc.data() will be undefined in this case\n      console.log(\"No such document!\");\n    }\n  }, []);\n  let user = `${first}`;\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"char-user-client\",\n    children: /*#__PURE__*/_jsxDEV(\"h1\", {\n      children: user[0].toUpperCase()\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 37\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 43,\n    columnNumber: 3\n  }, this);\n}\n\n_s(RetuRnChArs, \"AaVSCRjmZCXlcacH162xe3/Mf44=\");\n\n_c = RetuRnChArs;\n;\n\nvar _c;\n\n$RefreshReg$(_c, \"RetuRnChArs\");","map":{"version":3,"sources":["/Users/USER/Desktop/Agent/src/Remove/Client/Char.js"],"names":["React","doc","onSnapshot","collection","getDocs","db","pushArray","Array","RetuRnChArs","first","setFirst","useState","useEffect","querySnapshot","forEach","push","id","verifier","some","value","JSON","parse","window","localStorage","getItem","docRef","docSnap","getDoc","exists","data","firstname","console","log","user","toUpperCase"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAO,YAAP;AACA,SAASC,GAAT,EAAcC,UAAd,EAA0BC,UAA1B,EAAsCC,OAAtC,QAAqD,oBAArD;AACA,SAASC,EAAT,QAAmB,gBAAnB;;AAEA,IAAIC,SAAS,GAAG,IAAIC,KAAJ,EAAhB,C,CAEA;;AACA,eAAe,SAASC,WAAT,GAAuB;AAAA;;AAErC,QAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBV,KAAK,CAACW,QAAN,CAAe,GAAf,CAA1B;AAEAX,EAAAA,KAAK,CAACY,SAAN,CAAgB,YAAY;AAE3B,UAAMC,aAAa,GAAG,MAAMT,OAAO,CAACD,UAAU,CAACE,EAAD,EAAK,QAAL,CAAX,CAAnC;AACAQ,IAAAA,aAAa,CAACC,OAAd,CAAuBb,GAAD,IAAS;AAC9B;AACAK,MAAAA,SAAS,CAACS,IAAV,CAAed,GAAG,CAACe,EAAnB;AACA,KAHD;AAKA,UAAMC,QAAQ,GAAGX,SAAS,CAACY,IAAV,CAAeC,KAAK,IAAIA,KAAK,IAAIC,IAAI,CAACC,KAAL,CAAWC,MAAM,CAACC,YAAP,CAAoBC,OAApB,CAA4B,mBAA5B,CAAX,CAAjC,CAAjB,CAR2B,CAU3B;AACA;AACA;;AAEA,UAAMC,MAAM,GAAGxB,GAAG,CAACI,EAAD,EAAKY,QAAQ,GAAG,QAAH,GAAc,OAA3B,EAAoCG,IAAI,CAACC,KAAL,CAAWC,MAAM,CAACC,YAAP,CAAoBC,OAApB,CAA4B,mBAA5B,CAAX,CAApC,CAAlB;AACA,UAAME,OAAO,GAAG,MAAMC,MAAM,CAACF,MAAD,CAA5B;;AAEA,QAAIC,OAAO,CAACE,MAAR,EAAJ,EAAsB;AACrBlB,MAAAA,QAAQ,CAACgB,OAAO,CAACG,IAAR,GAAeC,SAAhB,CAAR;AACA,KAFD,MAEO;AACN;AACAC,MAAAA,OAAO,CAACC,GAAR,CAAY,mBAAZ;AACA;AAGD,GAzBD,EAyBG,EAzBH;AA2BA,MAAIC,IAAI,GAAI,GAAExB,KAAM,EAApB;AAEA,sBACC;AAAK,IAAA,SAAS,EAAC,kBAAf;AAAA,2BAAkC;AAAA,gBAAKwB,IAAI,CAAC,CAAD,CAAJ,CAAQC,WAAR;AAAL;AAAA;AAAA;AAAA;AAAA;AAAlC;AAAA;AAAA;AAAA;AAAA,UADD;AAGA;;GApCuB1B,W;;KAAAA,W;AAoCvB","sourcesContent":["import React from 'react';\nimport './Char.css';\nimport { doc, onSnapshot, collection, getDocs } from \"firebase/firestore\";\nimport { db } from '../../firebase';\n\nlet pushArray = new Array();\n\n// Phone Component \nexport default function RetuRnChArs() {\n\n const [first, setFirst] = React.useState(' ');\n\n React.useEffect(async () => {\n\n  const querySnapshot = await getDocs(collection(db, \"client\"));\n  querySnapshot.forEach((doc) => {\n   // doc.data() is never undefined for query doc snapshots\n   pushArray.push(doc.id);\n  });\n\n  const verifier = pushArray.some(value => value == JSON.parse(window.localStorage.getItem('PHONE_USER_REMOVE')));\n\n  // onSnapshot(doc(db, verifier ? \"client\" : \"agent\", JSON.parse(window.localStorage.getItem('PHONE_USER_REMOVE'))), (doc) => {\n  //  setFirst(doc.data().firstname);\n  // });\n\n  const docRef = doc(db, verifier ? \"client\" : \"agent\", JSON.parse(window.localStorage.getItem('PHONE_USER_REMOVE')));\n  const docSnap = await getDoc(docRef);\n\n  if (docSnap.exists()) {\n   setFirst(docSnap.data().firstname);\n  } else {\n   // doc.data() will be undefined in this case\n   console.log(\"No such document!\");\n  }\n\n\n }, []);\n\n let user = `${first}`;\n\n return (\n  <div className='char-user-client'><h1>{user[0].toUpperCase()}</h1></div>\n );\n};"]},"metadata":{},"sourceType":"module"}