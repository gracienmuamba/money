{"ast":null,"code":"var _jsxFileName = \"/Users/USER/Desktop/Money/src/Current/Input.js\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport './Input.css';\nimport REturnPriX from './Prix';\nimport Media from 'react-media';\nimport { useForm } from 'react-hook-form';\nimport { useNavigate } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport let exchAnge = 0; // Return Phone input component\n\nexport default function REturnInputPhone() {\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(Media, {\n      queries: {\n        small: '(max-width: 599px)',\n        medium: '(min-width: 600px) and (max-width:1199px)',\n        large: '(min-width: 1200px)'\n      },\n      children: matches => /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [matches.small && /*#__PURE__*/_jsxDEV(ScreenSmall, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 25,\n          columnNumber: 25\n        }, this), matches.medium && /*#__PURE__*/_jsxDEV(ScreenLarge, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 26,\n          columnNumber: 26\n        }, this), matches.large && /*#__PURE__*/_jsxDEV(ScreenLarge, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 27,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 4\n    }, this)\n  }, void 0, false);\n}\n_c = REturnInputPhone;\n;\nexport const ScreenLarge = () => {\n  return /*#__PURE__*/_jsxDEV(FormInputValue, {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 37,\n    columnNumber: 3\n  }, this);\n};\n_c2 = ScreenLarge;\nexport const ScreenSmall = () => {\n  return /*#__PURE__*/_jsxDEV(FormInputValue, {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 42,\n    columnNumber: 3\n  }, this);\n};\n_c3 = ScreenSmall;\nexport const FormInputValue = () => {\n  _s();\n\n  const navigation = useNavigate();\n  const [prix, setPrix] = React.useState(5000);\n  const {\n    register,\n    handleSubmit,\n    watch\n  } = useForm();\n  let entry = watch('count');\n  let value = entry === undefined ? prix : prix - entry;\n  entry > prix && window.alert('Valeur entre non disponible.');\n  let notFound = entry > prix ? true : false;\n  let frais = entry * 3 / 100;\n  let count = Number(entry) - Number(frais);\n\n  const onSubmit = async data => {\n    window.alert(count);\n    navigation('/dash');\n  };\n\n  exchAnge = count > prix ? 0 : count;\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(REturnPriX, {\n      count: `${value}`\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 4\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"wrp-frais-current\",\n      children: [/*#__PURE__*/_jsxDEV(\"span\", {\n        children: `Disponible Compte Current`\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n        children: `${new Date()}`\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 5\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 4\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"wrp-inputphone-send-current\",\n      children: /*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: handleSubmit(onSubmit),\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: 'text',\n          ...register('count', {\n            required: true\n          }),\n          name: \"count\",\n          placeholder: '0',\n          className: \"input-count\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 79,\n          columnNumber: 6\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"wrp-Btn-input-current\",\n          children: /*#__PURE__*/_jsxDEV(\"button\", {\n            disabled: notFound,\n            className: \"Btn\",\n            children: \"Ajouter\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 85,\n            columnNumber: 7\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 84,\n          columnNumber: 6\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 5\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 4\n    }, this)]\n  }, void 0, true);\n};\n\n_s(FormInputValue, \"Q4kk/scz4fCPkEQgaGDK7jMNNpM=\", false, function () {\n  return [useNavigate, useForm];\n});\n\n_c4 = FormInputValue;\n\nvar _c, _c2, _c3, _c4;\n\n$RefreshReg$(_c, \"REturnInputPhone\");\n$RefreshReg$(_c2, \"ScreenLarge\");\n$RefreshReg$(_c3, \"ScreenSmall\");\n$RefreshReg$(_c4, \"FormInputValue\");","map":{"version":3,"sources":["/Users/USER/Desktop/Money/src/Current/Input.js"],"names":["React","REturnPriX","Media","useForm","useNavigate","exchAnge","REturnInputPhone","small","medium","large","matches","ScreenLarge","ScreenSmall","FormInputValue","navigation","prix","setPrix","useState","register","handleSubmit","watch","entry","value","undefined","window","alert","notFound","frais","count","Number","onSubmit","data","Date","required"],"mappings":"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","sourcesContent":["\nimport React from 'react';\nimport './Input.css';\nimport REturnPriX from './Prix';\nimport Media from 'react-media';\nimport {\n useForm\n} from 'react-hook-form';\nimport { useNavigate } from 'react-router-dom';\n\nexport let exchAnge = 0;\n\n// Return Phone input component\nexport default function REturnInputPhone() {\n return (\n  <>\n   <Media\n    queries={{\n     small: '(max-width: 599px)',\n     medium: '(min-width: 600px) and (max-width:1199px)',\n     large: '(min-width: 1200px)',\n    }}>\n    {matches => (\n     <>\n      {matches.small && <ScreenSmall />}\n      {matches.medium && <ScreenLarge />}\n      {matches.large && <ScreenLarge />}\n     </>\n    )}\n   </Media>\n  </>\n );\n};\n\nexport const ScreenLarge = () => {\n return (\n  <FormInputValue />\n );\n};\nexport const ScreenSmall = () => {\n return (\n  <FormInputValue />\n )\n};\nexport const FormInputValue = () => {\n\n const navigation = useNavigate();\n const [prix, setPrix] = React.useState(5000);\n const { register, handleSubmit, watch } = useForm();\n\n let entry = watch('count');\n let value = entry === undefined ? prix : prix - entry;\n entry > prix && window.alert('Valeur entre non disponible.')\n let notFound = entry > prix ? true : false;\n\n let frais = (entry * 3) / 100;\n let count = (Number(entry) - Number(frais));\n\n\n\n const onSubmit = async data => {\n\n  window.alert(count);\n  navigation('/dash');\n };\n\n exchAnge = count > prix ? 0 : count;\n\n return (\n  <>\n   <REturnPriX count={`${value}`} />\n   <div className='wrp-frais-current'>\n    <span>{`Disponible Compte Current`}</span>\n    <span>{`${new Date()}`}</span>\n   </div>\n\n   <div className='wrp-inputphone-send-current'>\n    <form onSubmit={handleSubmit(onSubmit)}>\n     <input\n      type={'text'} {...register('count', { required: true })}\n      name=\"count\" placeholder={'0'} className='input-count'\n\n     />\n     <div className='wrp-Btn-input-current'>\n      <button disabled={notFound} className='Btn'>Ajouter</button>\n     </div>\n\n    </form>\n   </div>\n  </>\n );\n\n};"]},"metadata":{},"sourceType":"module"}