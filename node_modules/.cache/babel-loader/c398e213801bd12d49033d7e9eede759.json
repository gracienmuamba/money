{"ast":null,"code":"var _jsxFileName = \"/Users/USER/Desktop/Money/src/Dash/Header/User/User.js\";\nimport './User.css';\nimport REturnnAme from './Name';\nimport Box from './Box/Main';\nimport Media from 'react-media'; // User available\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport default function REturnUseR() {\n  return /*#__PURE__*/_jsxDEV(Media, {\n    queries: {\n      small: '(max-width: 599px)',\n      medium: '(min-width: 600px) and (max-width:1199px)',\n      large: '(min-width: 1200px)'\n    },\n    children: matches => /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [matches.small && /*#__PURE__*/_jsxDEV(ScreenSmall, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 18,\n        columnNumber: 24\n      }, this), matches.medium && /*#__PURE__*/_jsxDEV(ScreenLarge, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 19,\n        columnNumber: 25\n      }, this), matches.large && /*#__PURE__*/_jsxDEV(ScreenLarge, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 20,\n        columnNumber: 24\n      }, this)]\n    }, void 0, true)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 10,\n    columnNumber: 3\n  }, this);\n}\n_c = REturnUseR;\n;\nexport const ScreenLarge = () => /*#__PURE__*/_jsxDEV(\"div\", {\n  className: \"flx-usr-dash\",\n  children: [/*#__PURE__*/_jsxDEV(REturnnAme, {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 30,\n    columnNumber: 3\n  }, this), /*#__PURE__*/_jsxDEV(Box, {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 31,\n    columnNumber: 3\n  }, this)]\n}, void 0, true, {\n  fileName: _jsxFileName,\n  lineNumber: 29,\n  columnNumber: 2\n}, this); // small\n\n_c2 = ScreenLarge;\nexport const ScreenSmall = () => /*#__PURE__*/_jsxDEV(\"div\", {\n  className: \"flx-usr-dash-sm\",\n  children: [/*#__PURE__*/_jsxDEV(REturnnAme, {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 37,\n    columnNumber: 3\n  }, this), /*#__PURE__*/_jsxDEV(Box, {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 38,\n    columnNumber: 3\n  }, this)]\n}, void 0, true, {\n  fileName: _jsxFileName,\n  lineNumber: 36,\n  columnNumber: 2\n}, this);\n_c3 = ScreenSmall;\n\nvar _c, _c2, _c3;\n\n$RefreshReg$(_c, \"REturnUseR\");\n$RefreshReg$(_c2, \"ScreenLarge\");\n$RefreshReg$(_c3, \"ScreenSmall\");","map":{"version":3,"sources":["/Users/USER/Desktop/Money/src/Dash/Header/User/User.js"],"names":["REturnnAme","Box","Media","REturnUseR","small","medium","large","matches","ScreenLarge","ScreenSmall"],"mappings":";AACA,OAAO,YAAP;AACA,OAAOA,UAAP,MAAuB,QAAvB;AACA,OAAOC,GAAP,MAAgB,YAAhB;AACA,OAAOC,KAAP,MAAkB,aAAlB,C,CAEA;;;;AACA,eAAe,SAASC,UAAT,GAAsB;AACpC,sBACC,QAAC,KAAD;AACC,IAAA,OAAO,EAAE;AACRC,MAAAA,KAAK,EAAE,oBADC;AAERC,MAAAA,MAAM,EAAE,2CAFA;AAGRC,MAAAA,KAAK,EAAE;AAHC,KADV;AAAA,cAMEC,OAAO,iBACP;AAAA,iBACEA,OAAO,CAACH,KAAR,iBAAiB,QAAC,WAAD;AAAA;AAAA;AAAA;AAAA,cADnB,EAEEG,OAAO,CAACF,MAAR,iBAAkB,QAAC,WAAD;AAAA;AAAA;AAAA;AAAA,cAFpB,EAGEE,OAAO,CAACD,KAAR,iBAAiB,QAAC,WAAD;AAAA;AAAA;AAAA;AAAA,cAHnB;AAAA;AAPF;AAAA;AAAA;AAAA;AAAA,UADD;AAgBA;KAjBuBH,U;AAiBvB;AAGD,OAAO,MAAMK,WAAW,GAAG,mBAC1B;AAAK,EAAA,SAAS,EAAC,cAAf;AAAA,0BACC,QAAC,UAAD;AAAA;AAAA;AAAA;AAAA,UADD,eAEC,QAAC,GAAD;AAAA;AAAA;AAAA;AAAA,UAFD;AAAA;AAAA;AAAA;AAAA;AAAA,QADM,C,CAMP;;MANaA,W;AAOb,OAAO,MAAMC,WAAW,GAAG,mBAC1B;AAAK,EAAA,SAAS,EAAC,iBAAf;AAAA,0BACC,QAAC,UAAD;AAAA;AAAA;AAAA;AAAA,UADD,eAEC,QAAC,GAAD;AAAA;AAAA;AAAA;AAAA,UAFD;AAAA;AAAA;AAAA;AAAA;AAAA,QADM;MAAMA,W","sourcesContent":["\nimport './User.css';\nimport REturnnAme from './Name';\nimport Box from './Box/Main';\nimport Media from 'react-media';\n\n// User available\nexport default function REturnUseR() {\n return (\n  <Media\n   queries={{\n    small: '(max-width: 599px)',\n    medium: '(min-width: 600px) and (max-width:1199px)',\n    large: '(min-width: 1200px)',\n   }}>\n   {matches => (\n    <>\n     {matches.small && <ScreenSmall />}\n     {matches.medium && <ScreenLarge />}\n     {matches.large && <ScreenLarge />}\n    </>\n   )}\n  </Media>\n );\n};\n\n\nexport const ScreenLarge = () => (\n <div className='flx-usr-dash'>\n  <REturnnAme />\n  <Box />\n </div>\n);\n// small\nexport const ScreenSmall = () => (\n <div className='flx-usr-dash-sm'>\n  <REturnnAme />\n  <Box />\n </div>\n);"]},"metadata":{},"sourceType":"module"}