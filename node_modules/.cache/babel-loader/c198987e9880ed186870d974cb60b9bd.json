{"ast":null,"code":"var _jsxFileName = \"/Users/USER/Desktop/Agent/src/Hm/Sign/Input.js\",\n    _s = $RefreshSig$();\n\nimport './Input.css';\nimport { useForm } from 'react-hook-form';\nimport { useNavigate } from 'react-router-dom';\nimport { auth } from '../../firebase';\nimport { createUserWithEmailAndPassword, signInWithEmailAndPassword } from \"firebase/auth\"; // Input form field \n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function ReturnInPut() {\n  _s();\n\n  const navigation = useNavigate();\n  const {\n    register,\n    handleSubmit\n  } = useForm({\n    defaultValues: {\n      phone: '+243'\n    }\n  }); // Ref collection database!\n\n  const onSubmit = async data => {\n    await createUserWithEmailAndPassword(auth, data.email, data.password).then(userCredential => {\n      // Signed in \n      const user = userCredential.user;\n      console.log(user.uid);\n    }).catch(error => {\n      const errorCode = error.code;\n      const errorMessage = error.message;\n      window.console.log(errorCode + ' ' + errorMessage);\n      window.alert(`L'e-mail et le mot de passe ne sont pas corrects, veuillez vérifier `);\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"wrp-input-sign\",\n    children: /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit(onSubmit),\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        placeholder: \"example@email.com\",\n        ...register('email', {\n          required: true\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"password\",\n        placeholder: \"\\u2022\\u2022\\u2022\\u2022\\u2022\\u2022\\u2022\",\n        ...register('password', {\n          required: true\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"Btn\",\n        children: \"Connexion\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 5\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 4\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 40,\n    columnNumber: 3\n  }, this);\n}\n\n_s(ReturnInPut, \"HnQY2ZQNORi9JuL+2SWAjITfMiU=\", false, function () {\n  return [useNavigate, useForm];\n});\n\n_c = ReturnInPut;\n;\n\nvar _c;\n\n$RefreshReg$(_c, \"ReturnInPut\");","map":{"version":3,"sources":["/Users/USER/Desktop/Agent/src/Hm/Sign/Input.js"],"names":["useForm","useNavigate","auth","createUserWithEmailAndPassword","signInWithEmailAndPassword","ReturnInPut","navigation","register","handleSubmit","defaultValues","phone","onSubmit","data","email","password","then","userCredential","user","console","log","uid","catch","error","errorCode","code","errorMessage","message","window","alert","required"],"mappings":";;;AACA,OAAO,aAAP;AACA,SAASA,OAAT,QAAwB,iBAAxB;AACA,SAASC,WAAT,QAA4B,kBAA5B;AACA,SAASC,IAAT,QAAqB,gBAArB;AACA,SAASC,8BAAT,EAAyCC,0BAAzC,QAA2E,eAA3E,C,CAEA;;;AACA,eAAe,SAASC,WAAT,GAAuB;AAAA;;AAErC,QAAMC,UAAU,GAAGL,WAAW,EAA9B;AACA,QAAM;AAAEM,IAAAA,QAAF;AAAYC,IAAAA;AAAZ,MAA6BR,OAAO,CAAC;AAC1CS,IAAAA,aAAa,EAAE;AACdC,MAAAA,KAAK,EAAE;AADO;AAD2B,GAAD,CAA1C,CAHqC,CASrC;;AACA,QAAMC,QAAQ,GAAG,MAAOC,IAAP,IAAgB;AAGhC,UAAMT,8BAA8B,CAACD,IAAD,EAAOU,IAAI,CAACC,KAAZ,EAAmBD,IAAI,CAACE,QAAxB,CAA9B,CACJC,IADI,CACEC,cAAD,IAAoB;AACzB;AACA,YAAMC,IAAI,GAAGD,cAAc,CAACC,IAA5B;AACAC,MAAAA,OAAO,CAACC,GAAR,CAAYF,IAAI,CAACG,GAAjB;AACA,KALI,EAMJC,KANI,CAMGC,KAAD,IAAW;AACjB,YAAMC,SAAS,GAAGD,KAAK,CAACE,IAAxB;AACA,YAAMC,YAAY,GAAGH,KAAK,CAACI,OAA3B;AACAC,MAAAA,MAAM,CAACT,OAAP,CAAeC,GAAf,CAAmBI,SAAS,GAAG,GAAZ,GAAkBE,YAArC;AACAE,MAAAA,MAAM,CAACC,KAAP,CAAc,sEAAd;AACA,KAXI,CAAN;AAeA,GAlBD;;AAoBA,sBACC;AAAK,IAAA,SAAS,EAAC,gBAAf;AAAA,2BACC;AAAM,MAAA,QAAQ,EAAEpB,YAAY,CAACG,QAAD,CAA5B;AAAA,8BACC;AAAO,QAAA,IAAI,EAAC,MAAZ;AAAmB,QAAA,WAAW,EAAC,mBAA/B;AAAA,WAAwDJ,QAAQ,CAAC,OAAD,EAAU;AAAEsB,UAAAA,QAAQ,EAAE;AAAZ,SAAV;AAAhE;AAAA;AAAA;AAAA;AAAA,cADD,eAEC;AAAO,QAAA,IAAI,EAAC,UAAZ;AAAuB,QAAA,WAAW,EAAC,4CAAnC;AAAA,WAAkDtB,QAAQ,CAAC,UAAD,EAAa;AAAEsB,UAAAA,QAAQ,EAAE;AAAZ,SAAb;AAA1D;AAAA;AAAA;AAAA;AAAA,cAFD,eAGC;AAAQ,QAAA,SAAS,EAAC,KAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAHD;AAAA;AAAA;AAAA;AAAA;AAAA;AADD;AAAA;AAAA;AAAA;AAAA,UADD;AAUA;;GAxCuBxB,W;UAEJJ,W,EACgBD,O;;;KAHZK,W;AAwCvB","sourcesContent":["\nimport './Input.css';\nimport { useForm } from 'react-hook-form';\nimport { useNavigate } from 'react-router-dom';\nimport { auth } from '../../firebase';\nimport { createUserWithEmailAndPassword, signInWithEmailAndPassword } from \"firebase/auth\";\n\n// Input form field \nexport default function ReturnInPut() {\n\n const navigation = useNavigate();\n const { register, handleSubmit } = useForm({\n  defaultValues: {\n   phone: '+243'\n  }\n });\n\n // Ref collection database!\n const onSubmit = async (data) => {\n\n\n  await createUserWithEmailAndPassword(auth, data.email, data.password)\n   .then((userCredential) => {\n    // Signed in \n    const user = userCredential.user;\n    console.log(user.uid);\n   })\n   .catch((error) => {\n    const errorCode = error.code;\n    const errorMessage = error.message;\n    window.console.log(errorCode + ' ' + errorMessage);\n    window.alert(`L'e-mail et le mot de passe ne sont pas corrects, veuillez vérifier `);\n   });\n\n\n\n };\n\n return (\n  <div className='wrp-input-sign'>\n   <form onSubmit={handleSubmit(onSubmit)}>\n    <input type='text' placeholder='example@email.com'  {...register('email', { required: true })} />\n    <input type='password' placeholder='•••••••'  {...register('password', { required: true })} />\n    <button className='Btn'>Connexion</button>\n\n   </form>\n  </div>\n );\n};"]},"metadata":{},"sourceType":"module"}