{"ast":null,"code":"var _jsxFileName = \"/Users/USER/Desktop/Money/src/Fran/Input.js\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport './Input.css';\nimport REturnPriX from './Prix';\nimport Media from 'react-media';\nimport { useForm } from 'react-hook-form'; // Return Phone input component\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport default function REturnInputPhone() {\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(Media, {\n      queries: {\n        small: '(max-width: 599px)',\n        medium: '(min-width: 600px) and (max-width:1199px)',\n        large: '(min-width: 1200px)'\n      },\n      children: matches => /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [matches.small && /*#__PURE__*/_jsxDEV(ScreenSmall, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 23,\n          columnNumber: 25\n        }, this), matches.medium && /*#__PURE__*/_jsxDEV(ScreenLarge, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 24,\n          columnNumber: 26\n        }, this), matches.large && /*#__PURE__*/_jsxDEV(ScreenLarge, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 25,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 15,\n      columnNumber: 4\n    }, this)\n  }, void 0, false);\n}\n_c = REturnInputPhone;\n;\nexport const ScreenLarge = () => {\n  return /*#__PURE__*/_jsxDEV(FormInputValue, {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 35,\n    columnNumber: 3\n  }, this);\n};\n_c2 = ScreenLarge;\nexport const ScreenSmall = () => {\n  return /*#__PURE__*/_jsxDEV(FormInputValue, {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 40,\n    columnNumber: 3\n  }, this);\n};\n_c3 = ScreenSmall;\nexport const FormInputValue = () => {\n  _s();\n\n  const [prix, setPrix] = React.useState(5000);\n  const {\n    register,\n    handleSubmit,\n    watch\n  } = useForm();\n\n  const onSubmit = async data => {\n    window.alert(data.count);\n  };\n\n  let entry = watch('count');\n  let value = entry === undefined ? prix : prix - entry;\n  let frais = entry * 3 / 100;\n  let count = entry - frais;\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(REturnPriX, {\n      count: `${value}`\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 4\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"wrp-frais-withdraw\",\n      children: `3% Frais ${count}`\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 4\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"wrp-inputphone-send\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Enter your withdraw\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: handleSubmit(onSubmit),\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: 'text',\n          ...register('count', {\n            required: true\n          }),\n          name: \"count\",\n          placeholder: '0',\n          className: \"input-count\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 67,\n          columnNumber: 6\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"wrp-Btn-input-withdraw\",\n          children: /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"Btn\",\n            children: \"Suivant\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 70,\n            columnNumber: 7\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 69,\n          columnNumber: 6\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 5\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 4\n    }, this)]\n  }, void 0, true);\n};\n\n_s(FormInputValue, \"p1GrOBVQa26e7KusJruOGOwN5Ec=\", false, function () {\n  return [useForm];\n});\n\n_c4 = FormInputValue;\n\nvar _c, _c2, _c3, _c4;\n\n$RefreshReg$(_c, \"REturnInputPhone\");\n$RefreshReg$(_c2, \"ScreenLarge\");\n$RefreshReg$(_c3, \"ScreenSmall\");\n$RefreshReg$(_c4, \"FormInputValue\");","map":{"version":3,"sources":["/Users/USER/Desktop/Money/src/Fran/Input.js"],"names":["React","REturnPriX","Media","useForm","REturnInputPhone","small","medium","large","matches","ScreenLarge","ScreenSmall","FormInputValue","prix","setPrix","useState","register","handleSubmit","watch","onSubmit","data","window","alert","count","entry","value","undefined","frais","required"],"mappings":"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","sourcesContent":["\nimport React from 'react';\nimport './Input.css';\nimport REturnPriX from './Prix';\nimport Media from 'react-media';\nimport {\n useForm\n} from 'react-hook-form';\n\n\n// Return Phone input component\nexport default function REturnInputPhone() {\n return (\n  <>\n   <Media\n    queries={{\n     small: '(max-width: 599px)',\n     medium: '(min-width: 600px) and (max-width:1199px)',\n     large: '(min-width: 1200px)',\n    }}>\n    {matches => (\n     <>\n      {matches.small && <ScreenSmall />}\n      {matches.medium && <ScreenLarge />}\n      {matches.large && <ScreenLarge />}\n     </>\n    )}\n   </Media>\n  </>\n );\n};\n\nexport const ScreenLarge = () => {\n return (\n  <FormInputValue />\n );\n};\nexport const ScreenSmall = () => {\n return (\n  <FormInputValue />\n )\n};\n\nexport const FormInputValue = () => {\n\n const [prix, setPrix] = React.useState(5000);\n const { register, handleSubmit, watch } = useForm();\n\n const onSubmit = async data => {\n  window.alert(data.count);\n };\n\n let entry = watch('count');\n let value = entry === undefined ? prix : prix - entry;\n let frais = (entry * 3) / 100;\n let count = (entry - frais);\n\n return (\n  <>\n   <REturnPriX count={`${value}`} />\n   <div className='wrp-frais-withdraw'>{`3% Frais ${count}`}</div>\n\n   <div className='wrp-inputphone-send'>\n    <h2>Enter your withdraw</h2>\n\n    <form onSubmit={handleSubmit(onSubmit)}>\n     <input type={'text'} {...register('count', { required: true })} name=\"count\" placeholder={'0'} className='input-count' />\n\n     <div className='wrp-Btn-input-withdraw'>\n      <button className='Btn'>Suivant</button>\n     </div>\n\n    </form>\n\n   </div>\n  </>\n );\n\n};"]},"metadata":{},"sourceType":"module"}