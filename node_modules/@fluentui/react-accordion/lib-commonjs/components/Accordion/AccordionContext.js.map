{"version":3,"names":["react_context_selector_1","require","exports","AccordionContext","createContext","undefined","accordionContextDefaultValue","openItems","collapsible","requestToggle","AccordionProvider","Provider","useAccordionContext_unstable","selector","useContextSelector","ctx"],"sources":["../src/packages/react-components/react-accordion/src/components/Accordion/AccordionContext.ts"],"sourcesContent":["import { createContext, ContextSelector, useContextSelector } from '@fluentui/react-context-selector';\nimport type { Context } from '@fluentui/react-context-selector';\nimport type { AccordionContextValue } from './Accordion.types';\n\nexport const AccordionContext: Context<AccordionContextValue> = createContext<AccordionContextValue | undefined>(\n  undefined,\n) as Context<AccordionContextValue>;\n\nconst accordionContextDefaultValue: AccordionContextValue = {\n  openItems: [],\n  collapsible: false,\n  requestToggle() {\n    /* noop */\n  },\n};\n\nexport const AccordionProvider = AccordionContext.Provider;\nexport const useAccordionContext_unstable = <T>(selector: ContextSelector<AccordionContextValue, T>): T =>\n  useContextSelector(AccordionContext, (ctx = accordionContextDefaultValue) => selector(ctx));\n"],"mappings":";;;;;;AAAA,MAAAA,wBAAA,gBAAAC,OAAA;AAIaC,OAAA,CAAAC,gBAAgB,gBAAmCH,wBAAA,CAAAI,aAAa,CAC3EC,SAAS,CACwB;AAEnC,MAAMC,4BAA4B,GAA0B;EAC1DC,SAAS,EAAE,EAAE;EACbC,WAAW,EAAE,KAAK;EAClBC,aAAaA,CAAA;IACX;EAAA;CAEH;AAEYP,OAAA,CAAAQ,iBAAiB,GAAGR,OAAA,CAAAC,gBAAgB,CAACQ,QAAQ;AACnD,MAAMC,4BAA4B,GAAOC,QAAmD,IACjGb,wBAAA,CAAAc,kBAAkB,CAACZ,OAAA,CAAAC,gBAAgB,EAAE,CAACY,GAAG,GAAGT,4BAA4B,KAAKO,QAAQ,CAACE,GAAG,CAAC,CAAC;AADhFb,OAAA,CAAAU,4BAA4B,GAAAA,4BAAA"}