{"version":3,"names":["React","require","react_utilities_1","react_icons_1","menuListContext_1","useMenuItem_1","useMenuItemCheckbox_unstable","props","ref","toggleCheckbox","useMenuListContext_unstable","context","name","value","checked","checkedItems","_a","checkedValues","indexOf","state","useMenuItem_unstable","role","persistOnClick","checkmark","resolveShorthand","defaultProps","children","createElement","Checkmark16Filled","required","onClick","e","call","exports"],"sources":["../src/packages/react-components/react-menu/src/components/MenuItemCheckbox/useMenuItemCheckbox.tsx"],"sourcesContent":["import * as React from 'react';\nimport { resolveShorthand } from '@fluentui/react-utilities';\nimport { Checkmark16Filled } from '@fluentui/react-icons';\nimport { useMenuListContext_unstable } from '../../contexts/menuListContext';\nimport { useMenuItem_unstable } from '../MenuItem/useMenuItem';\nimport type { MenuItemCheckboxProps, MenuItemCheckboxState } from './MenuItemCheckbox.types';\nimport type { ARIAButtonElement, ARIAButtonElementIntersection } from '@fluentui/react-aria';\n\n/** Returns the props and state required to render the component */\nexport const useMenuItemCheckbox_unstable = (\n  props: MenuItemCheckboxProps,\n  ref: React.Ref<ARIAButtonElement<'div'>>,\n): MenuItemCheckboxState => {\n  const toggleCheckbox = useMenuListContext_unstable(context => context.toggleCheckbox);\n  const { name, value } = props;\n\n  const checked = useMenuListContext_unstable(context => {\n    const checkedItems = context.checkedValues?.[name] || [];\n    return checkedItems.indexOf(value) !== -1;\n  });\n\n  const state: MenuItemCheckboxState = {\n    ...useMenuItem_unstable(\n      {\n        role: 'menuitemcheckbox',\n        persistOnClick: true,\n        ...props,\n        'aria-checked': checked,\n        checkmark: resolveShorthand(props.checkmark, {\n          defaultProps: { children: <Checkmark16Filled /> },\n          required: true,\n        }),\n        onClick: (e: React.MouseEvent<ARIAButtonElementIntersection<'div'>>) => {\n          toggleCheckbox?.(e, name, value, checked);\n          props.onClick?.(e);\n        },\n      },\n      ref,\n    ),\n    name,\n    value,\n    checked,\n  };\n\n  return state;\n};\n"],"mappings":";;;;;;AAAA,MAAAA,KAAA,gBAAAC,OAAA;AACA,MAAAC,iBAAA,gBAAAD,OAAA;AACA,MAAAE,aAAA,gBAAAF,OAAA;AACA,MAAAG,iBAAA,gBAAAH,OAAA;AACA,MAAAI,aAAA,gBAAAJ,OAAA;AAIA;AACO,MAAMK,4BAA4B,GAAGA,CAC1CC,KAA4B,EAC5BC,GAAwC,KACf;EACzB,MAAMC,cAAc,GAAGL,iBAAA,CAAAM,2BAA2B,CAACC,OAAO,IAAIA,OAAO,CAACF,cAAc,CAAC;EACrF,MAAM;IAAEG,IAAI;IAAEC;EAAK,CAAE,GAAGN,KAAK;EAE7B,MAAMO,OAAO,GAAGV,iBAAA,CAAAM,2BAA2B,CAACC,OAAO,IAAG;;IACpD,MAAMI,YAAY,GAAG,EAAAC,EAAA,GAAAL,OAAO,CAACM,aAAa,cAAAD,EAAA,uBAAAA,EAAA,CAAGJ,IAAI,CAAC,KAAI,EAAE;IACxD,OAAOG,YAAY,CAACG,OAAO,CAACL,KAAK,CAAC,KAAK,CAAC,CAAC;EAC3C,CAAC,CAAC;EAEF,MAAMM,KAAK,GAA0B;IACnC,GAAGd,aAAA,CAAAe,oBAAoB,CACrB;MACEC,IAAI,EAAE,kBAAkB;MACxBC,cAAc,EAAE,IAAI;MACpB,GAAGf,KAAK;MACR,cAAc,EAAEO,OAAO;MACvBS,SAAS,EAAErB,iBAAA,CAAAsB,gBAAgB,CAACjB,KAAK,CAACgB,SAAS,EAAE;QAC3CE,YAAY,EAAE;UAAEC,QAAQ,EAAE1B,KAAA,CAAA2B,aAAA,CAACxB,aAAA,CAAAyB,iBAAiB;QAAG,CAAE;QACjDC,QAAQ,EAAE;OACX,CAAC;MACFC,OAAO,EAAGC,CAAyD,IAAI;;QACrEtB,cAAc,aAAdA,cAAc,uBAAdA,cAAc,CAAGsB,CAAC,EAAEnB,IAAI,EAAEC,KAAK,EAAEC,OAAO,CAAC;QACzC,CAAAE,EAAA,GAAAT,KAAK,CAACuB,OAAO,cAAAd,EAAA,uBAAAA,EAAA,CAAAgB,IAAA,CAAbzB,KAAK,EAAWwB,CAAC,CAAC;MACpB;KACD,EACDvB,GAAG,CACJ;IACDI,IAAI;IACJC,KAAK;IACLC;GACD;EAED,OAAOK,KAAK;AACd,CAAC;AApCYc,OAAA,CAAA3B,4BAA4B,GAAAA,4BAAA"}