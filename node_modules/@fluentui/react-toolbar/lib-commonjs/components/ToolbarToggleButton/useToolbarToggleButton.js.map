{"version":3,"names":["react_button_1","require","ToolbarContext_1","useToolbarToggleButton_unstable","props","ref","handleToggleButton","useToolbarContext_unstable","ctx","checked","_a","checkedValues","name","includes","value","size","onClick","onClickOriginal","toggleButtonState","useToggleButton_unstable","state","handleOnClick","e","disabled","preventDefault","stopPropagation","root","exports"],"sources":["../src/packages/react-components/react-toolbar/src/components/ToolbarToggleButton/useToolbarToggleButton.ts"],"sourcesContent":["import * as React from 'react';\nimport { useToggleButton_unstable } from '@fluentui/react-button';\nimport { useToolbarContext_unstable } from '../Toolbar/ToolbarContext';\nimport { ToolbarToggleButtonProps, ToolbarToggleButtonState } from './ToolbarToggleButton.types';\n\n/**\n * Given user props, defines default props for the ToggleButton, calls useButtonState and useChecked, and returns\n * processed state.\n * @param props - User provided props to the ToggleButton component.\n * @param ref - User provided ref to be passed to the ToggleButton component.\n */\nexport const useToolbarToggleButton_unstable = (\n  props: ToolbarToggleButtonProps,\n  ref: React.Ref<HTMLButtonElement | HTMLAnchorElement>,\n): ToolbarToggleButtonState => {\n  const handleToggleButton = useToolbarContext_unstable(ctx => ctx.handleToggleButton);\n  const checked = useToolbarContext_unstable(ctx => !!ctx.checkedValues[props.name]?.includes(props.value));\n  const size = useToolbarContext_unstable(ctx => ctx.size);\n\n  const { onClick: onClickOriginal } = props;\n  const toggleButtonState = useToggleButton_unstable({ size, checked, ...props }, ref);\n  const state: ToolbarToggleButtonState = {\n    ...toggleButtonState,\n    name: props.name,\n    value: props.value,\n  };\n\n  const handleOnClick = (\n    e: React.MouseEvent<HTMLButtonElement, MouseEvent> & React.MouseEvent<HTMLAnchorElement, MouseEvent>,\n  ) => {\n    if (state.disabled) {\n      e.preventDefault();\n      e.stopPropagation();\n      return;\n    }\n\n    handleToggleButton?.(e, state.name, state.value, state.checked);\n    onClickOriginal?.(e);\n  };\n\n  state.root.onClick = handleOnClick;\n  return state;\n};\n"],"mappings":";;;;;;AACA,MAAAA,cAAA,gBAAAC,OAAA;AACA,MAAAC,gBAAA,gBAAAD,OAAA;AAGA;;;;;;AAMO,MAAME,+BAA+B,GAAGA,CAC7CC,KAA+B,EAC/BC,GAAqD,KACzB;EAC5B,MAAMC,kBAAkB,GAAGJ,gBAAA,CAAAK,0BAA0B,CAACC,GAAG,IAAIA,GAAG,CAACF,kBAAkB,CAAC;EACpF,MAAMG,OAAO,GAAGP,gBAAA,CAAAK,0BAA0B,CAACC,GAAG,IAAG;IAAA,IAAAE,EAAA;IAAC,QAAC,EAAC,CAAAA,EAAA,GAAAF,GAAG,CAACG,aAAa,CAACP,KAAK,CAACQ,IAAI,CAAC,cAAAF,EAAA,uBAAAA,EAAA,CAAEG,QAAQ,CAACT,KAAK,CAACU,KAAK,CAAC;EAAA,EAAC;EACzG,MAAMC,IAAI,GAAGb,gBAAA,CAAAK,0BAA0B,CAACC,GAAG,IAAIA,GAAG,CAACO,IAAI,CAAC;EAExD,MAAM;IAAEC,OAAO,EAAEC;EAAe,CAAE,GAAGb,KAAK;EAC1C,MAAMc,iBAAiB,GAAGlB,cAAA,CAAAmB,wBAAwB,CAAC;IAAEJ,IAAI;IAAEN,OAAO;IAAE,GAAGL;EAAK,CAAE,EAAEC,GAAG,CAAC;EACpF,MAAMe,KAAK,GAA6B;IACtC,GAAGF,iBAAiB;IACpBN,IAAI,EAAER,KAAK,CAACQ,IAAI;IAChBE,KAAK,EAAEV,KAAK,CAACU;GACd;EAED,MAAMO,aAAa,GACjBC,CAAoG,IAClG;IACF,IAAIF,KAAK,CAACG,QAAQ,EAAE;MAClBD,CAAC,CAACE,cAAc,EAAE;MAClBF,CAAC,CAACG,eAAe,EAAE;MACnB;;IAGFnB,kBAAkB,aAAlBA,kBAAkB,uBAAlBA,kBAAkB,CAAGgB,CAAC,EAAEF,KAAK,CAACR,IAAI,EAAEQ,KAAK,CAACN,KAAK,EAAEM,KAAK,CAACX,OAAO,CAAC;IAC/DQ,eAAe,aAAfA,eAAe,uBAAfA,eAAe,CAAGK,CAAC,CAAC;EACtB,CAAC;EAEDF,KAAK,CAACM,IAAI,CAACV,OAAO,GAAGK,aAAa;EAClC,OAAOD,KAAK;AACd,CAAC;AA/BYO,OAAA,CAAAxB,+BAA+B,GAAAA,+BAAA"}