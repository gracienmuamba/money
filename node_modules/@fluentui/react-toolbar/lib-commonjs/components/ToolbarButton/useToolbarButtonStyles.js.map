{"version":3,"names":["react_1","require","react_button_1","useBaseStyles","__styles","vertical","Beiy3e4","verticalIcon","Be2twd7","d","useToolbarButtonStyles_unstable","state","useButtonStyles_unstable","buttonStyles","root","className","mergeClasses","icon","exports"],"sources":["../src/packages/react-components/react-toolbar/src/components/ToolbarButton/useToolbarButtonStyles.ts"],"sourcesContent":["import { makeStyles, mergeClasses } from '@griffel/react';\nimport { useButtonStyles_unstable } from '@fluentui/react-button';\nimport { ToolbarButtonState } from './ToolbarButton.types';\n\nconst useBaseStyles = makeStyles({\n  vertical: {\n    flexDirection: 'column',\n  },\n  verticalIcon: {\n    fontSize: '24px',\n  },\n});\n\n/**\n * Apply styling to the ToolbarButton slots based on the state\n */\nexport const useToolbarButtonStyles_unstable = (state: ToolbarButtonState) => {\n  useButtonStyles_unstable(state);\n  const buttonStyles = useBaseStyles();\n\n  state.root.className = mergeClasses(state.root.className, state.vertical && buttonStyles.vertical);\n  if (state.icon) {\n    state.icon.className = mergeClasses(state.icon.className, state.vertical && buttonStyles.verticalIcon);\n  }\n};\n"],"mappings":";;;;;;AAAA,MAAAA,OAAA,gBAAAC,OAAA;AACA,MAAAC,cAAA,gBAAAD,OAAA;AAGA,MAAME,aAAa,gBAAGH,OAAA,CAAAI,QAAU;EAAAC,QAAA;IAAAC,OAAA;EAAA;EAAAC,YAAA;IAAAC,OAAA;EAAA;AAAA;EAAAC,CAAA;AAAA,EAO9B;AAEF;;;AAGO,MAAMC,+BAA+B,GAAIC,KAAyB,IAAI;EAC3ET,cAAA,CAAAU,wBAAwB,CAACD,KAAK,CAAC;EAC/B,MAAME,YAAY,GAAGV,aAAa,EAAE;EAEpCQ,KAAK,CAACG,IAAI,CAACC,SAAS,GAAGf,OAAA,CAAAgB,YAAY,CAACL,KAAK,CAACG,IAAI,CAACC,SAAS,EAAEJ,KAAK,CAACN,QAAQ,IAAIQ,YAAY,CAACR,QAAQ,CAAC;EAClG,IAAIM,KAAK,CAACM,IAAI,EAAE;IACdN,KAAK,CAACM,IAAI,CAACF,SAAS,GAAGf,OAAA,CAAAgB,YAAY,CAACL,KAAK,CAACM,IAAI,CAACF,SAAS,EAAEJ,KAAK,CAACN,QAAQ,IAAIQ,YAAY,CAACN,YAAY,CAAC;;AAE1G,CAAC;AARYW,OAAA,CAAAR,+BAA+B,GAAAA,+BAAA"}