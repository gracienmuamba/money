{"version":3,"file":"renderFluentProvider.js","sourceRoot":"","sources":["../../../../../../../../../packages/react-components/react-provider/src/components/FluentProvider/renderFluentProvider.tsx"],"names":[],"mappings":";;;;IAcA;;OAEG;IACI,IAAM,6BAA6B,GAAG,UAC3C,KAA0B,EAC1B,aAA0C;QAEpC,IAAA,KAAuB,0BAAQ,CAAsB,KAAK,CAAC,EAAzD,KAAK,WAAA,EAAE,SAAS,eAAyC,CAAC;QAElE,+FAA+F;QAC/F,oFAAoF;QACpF,0GAA0G;QAE1G,OAAO,CACL,oBAAC,yCAAQ,IAAC,KAAK,EAAE,aAAa,CAAC,QAAQ;YACrC,oBAAC,8CAAa,IAAC,KAAK,EAAE,aAAa,CAAC,KAAK;gBACvC,oBAAC,uDAAsB,IAAC,KAAK,EAAE,aAAa,CAAC,cAAc;oBACzD,oBAAC,yDAAwB,IACvB,KAAK,EAAE,aAAa,CAAC,yBAAmE;wBAExF,oBAAC,0DAAyB,IAAC,KAAK,EAAE,aAAa,CAAC,OAAO;4BACrD,oBAAC,6BAAqB,IAAC,GAAG,EAAE,aAAa,CAAC,aAAa;gCACrD,oBAAC,kDAAiB,IAAC,KAAK,EAAE,aAAa,CAAC,kBAAkB;oCACxD,oBAAC,KAAK,CAAC,IAAI,uBAAK,SAAS,CAAC,IAAI,GAAG,KAAK,CAAC,IAAI,CAAC,QAAQ,CAAc,CAChD,CACE,CACE,CACH,CACJ,CACX,CACP,CACZ,CAAC;IACJ,CAAC,CAAC;IA7BW,QAAA,6BAA6B,iCA6BxC","sourcesContent":["import * as React from 'react';\nimport { TextDirectionProvider } from '@griffel/react';\nimport {\n  OverridesProvider_unstable as OverridesProvider,\n  Provider_unstable as Provider,\n  TooltipVisibilityProvider_unstable as TooltipVisibilityProvider,\n  ThemeProvider_unstable as ThemeProvider,\n  ThemeClassNameProvider_unstable as ThemeClassNameProvider,\n  CustomStyleHooksProvider_unstable as CustomStyleHooksProvider,\n  CustomStyleHooksContextValue_unstable as CustomStyleHooksContextValue,\n} from '@fluentui/react-shared-contexts';\nimport { getSlots } from '@fluentui/react-utilities';\nimport type { FluentProviderSlots, FluentProviderContextValues, FluentProviderState } from './FluentProvider.types';\n\n/**\n * Render the final JSX of FluentProvider\n */\nexport const renderFluentProvider_unstable = (\n  state: FluentProviderState,\n  contextValues: FluentProviderContextValues,\n) => {\n  const { slots, slotProps } = getSlots<FluentProviderSlots>(state);\n\n  // Typescript (vscode) incorrectly references the FluentProviderProps.customStyleHooks_unstable\n  // instead of FluentProviderContextValues.customStyleHooks_unstable and thinks it is\n  // Partial<CustomStyleHooksContextValue>, so it needs to be cast to Required<CustomStyleHooksContextValue>\n\n  return (\n    <Provider value={contextValues.provider}>\n      <ThemeProvider value={contextValues.theme}>\n        <ThemeClassNameProvider value={contextValues.themeClassName}>\n          <CustomStyleHooksProvider\n            value={contextValues.customStyleHooks_unstable as Required<CustomStyleHooksContextValue>}\n          >\n            <TooltipVisibilityProvider value={contextValues.tooltip}>\n              <TextDirectionProvider dir={contextValues.textDirection}>\n                <OverridesProvider value={contextValues.overrides_unstable}>\n                  <slots.root {...slotProps.root}>{state.root.children}</slots.root>\n                </OverridesProvider>\n              </TextDirectionProvider>\n            </TooltipVisibilityProvider>\n          </CustomStyleHooksProvider>\n        </ThemeClassNameProvider>\n      </ThemeProvider>\n    </Provider>\n  );\n};\n"]}