{"version":3,"names":["useDialogTrigger_1","require","renderDialogTrigger_1","DialogTrigger","props","state","useDialogTrigger_unstable","renderDialogTrigger_unstable","exports","displayName","isFluentTriggerComponent"],"sources":["../src/packages/react-components/react-dialog/src/components/DialogTrigger/DialogTrigger.tsx"],"sourcesContent":["import * as React from 'react';\nimport { useDialogTrigger_unstable } from './useDialogTrigger';\nimport { renderDialogTrigger_unstable } from './renderDialogTrigger';\nimport type { DialogTriggerProps } from './DialogTrigger.types';\nimport type { FluentTriggerComponent } from '@fluentui/react-utilities';\n\n/**\n * A non-visual component that wraps its child\n * and configures them to be the trigger that will open or close a `Dialog`.\n * This component should only accept one child.\n *\n * In case the trigger is used outside `Dialog` component\n * it'll still provide basic ARIA related attributes\n * to it's wrapped child, but it won't be able to alter the dialog `open` state anymore,\n * in that case the user must provide a `controlled state`\n */\nexport const DialogTrigger: React.FC<DialogTriggerProps> = props => {\n  const state = useDialogTrigger_unstable(props);\n\n  return renderDialogTrigger_unstable(state);\n};\n\nDialogTrigger.displayName = 'DialogTrigger';\n// type casting here is required to ensure internal type FluentTriggerComponent is not leaked\n(DialogTrigger as FluentTriggerComponent).isFluentTriggerComponent = true;\n"],"mappings":";;;;;;AACA,MAAAA,kBAAA,gBAAAC,OAAA;AACA,MAAAC,qBAAA,gBAAAD,OAAA;AAIA;;;;;;;;;;AAUO,MAAME,aAAa,GAAiCC,KAAK,IAAG;EACjE,MAAMC,KAAK,GAAGL,kBAAA,CAAAM,yBAAyB,CAACF,KAAK,CAAC;EAE9C,OAAOF,qBAAA,CAAAK,4BAA4B,CAACF,KAAK,CAAC;AAC5C,CAAC;AAJYG,OAAA,CAAAL,aAAa,GAAAA,aAAA;AAM1BK,OAAA,CAAAL,aAAa,CAACM,WAAW,GAAG,eAAe;AAC3C;AACCD,OAAA,CAAAL,aAAwC,CAACO,wBAAwB,GAAG,IAAI"}