{"version":3,"names":["React","require","useDialog_1","renderDialog_1","useDialogContextValues_1","exports","Dialog","memo","props","state","useDialog_unstable","contextValues","useDialogContextValues_unstable","renderDialog_unstable","displayName"],"sources":["../src/packages/react-components/react-dialog/src/components/Dialog/Dialog.tsx"],"sourcesContent":["import * as React from 'react';\nimport { useDialog_unstable } from './useDialog';\nimport { renderDialog_unstable } from './renderDialog';\nimport type { DialogProps } from './Dialog.types';\nimport { useDialogContextValues_unstable } from './useDialogContextValues';\n\n/**\n * The `Dialog` root level component serves as an interface for interaction with all possible behaviors exposed.\n * It provides context down the hierarchy to `children` compound components to allow functionality.\n * This component expects to receive as children either a `DialogSurface` or a `DialogTrigger`\n * and a `DialogSurface` (or some component that will eventually render one of those compound components)\n * in this specific order\n */\nexport const Dialog: React.FC<DialogProps> = React.memo(props => {\n  const state = useDialog_unstable(props);\n  const contextValues = useDialogContextValues_unstable(state);\n\n  return renderDialog_unstable(state, contextValues);\n});\n\nDialog.displayName = 'Dialog';\n"],"mappings":";;;;;;AAAA,MAAAA,KAAA,gBAAAC,OAAA;AACA,MAAAC,WAAA,gBAAAD,OAAA;AACA,MAAAE,cAAA,gBAAAF,OAAA;AAEA,MAAAG,wBAAA,gBAAAH,OAAA;AAEA;;;;;;;AAOaI,OAAA,CAAAC,MAAM,gBAA0BN,KAAK,CAACO,IAAI,CAACC,KAAK,IAAG;EAC9D,MAAMC,KAAK,GAAGP,WAAA,CAAAQ,kBAAkB,CAACF,KAAK,CAAC;EACvC,MAAMG,aAAa,GAAGP,wBAAA,CAAAQ,+BAA+B,CAACH,KAAK,CAAC;EAE5D,OAAON,cAAA,CAAAU,qBAAqB,CAACJ,KAAK,EAAEE,aAAa,CAAC;AACpD,CAAC,CAAC;AAEFN,OAAA,CAAAC,MAAM,CAACQ,WAAW,GAAG,QAAQ"}