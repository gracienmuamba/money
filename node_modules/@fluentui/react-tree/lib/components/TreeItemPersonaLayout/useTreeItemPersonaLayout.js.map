{"version":3,"names":["getNativeElementProps","resolveShorthand","useTreeContext_unstable","useTreeItemContext_unstable","treeAvatarSize","useTreeItemPersonaLayout_unstable","props","ref","media","content","children","main","description","aside","as","size","ctx","isActionsVisible","components","root","avatarSize","required","defaultProps"],"sources":["../src/packages/react-components/react-tree/src/components/TreeItemPersonaLayout/useTreeItemPersonaLayout.ts"],"sourcesContent":["import * as React from 'react';\nimport type { TreeItemPersonaLayoutProps, TreeItemPersonaLayoutState } from './TreeItemPersonaLayout.types';\nimport { getNativeElementProps, resolveShorthand } from '@fluentui/react-utilities';\nimport { useTreeContext_unstable, useTreeItemContext_unstable } from '../../contexts';\nimport { treeAvatarSize } from '../../utils/tokens';\n\n/**\n * Create the state required to render TreeItemPersonaLayout.\n *\n * The returned state can be modified with hooks such as useTreeItemPersonaLayoutStyles_unstable,\n * before being passed to renderTreeItemPersonaLayout_unstable.\n *\n * @param props - props from this instance of TreeItemPersonaLayout\n * @param ref - reference to root HTMLElement of TreeItemPersonaLayout\n */\nexport const useTreeItemPersonaLayout_unstable = (\n  props: TreeItemPersonaLayoutProps,\n  ref: React.Ref<HTMLSpanElement>,\n): TreeItemPersonaLayoutState => {\n  const { media, content, children, main, description, aside, as = 'span' } = props;\n  const size = useTreeContext_unstable(ctx => ctx.size);\n  const { isActionsVisible } = useTreeItemContext_unstable();\n  return {\n    components: {\n      content: 'div',\n      main: 'span',\n      description: 'span',\n      root: 'span',\n      media: 'span',\n      aside: 'span',\n    },\n    isActionsVisible,\n    avatarSize: treeAvatarSize[size],\n    root: getNativeElementProps(as, { ...props, ref }),\n    main: resolveShorthand(main, { required: true, defaultProps: { children } }),\n    media: resolveShorthand(media, { required: true }),\n    content: resolveShorthand(content, { required: true }),\n    description: resolveShorthand(description),\n    aside: resolveShorthand(aside),\n  };\n};\n"],"mappings":"AAEA,SAASA,qBAAqB,EAAEC,gBAAgB,QAAQ,2BAA2B;AACnF,SAASC,uBAAuB,EAAEC,2BAA2B,QAAQ,gBAAgB;AACrF,SAASC,cAAc,QAAQ,oBAAoB;AAEnD;;;;;;;;;AASA,OAAO,MAAMC,iCAAiC,GAAGA,CAC/CC,KAAiC,EACjCC,GAA+B,KACD;EAC9B,MAAM;IAAEC,KAAK;IAAEC,OAAO;IAAEC,QAAQ;IAAEC,IAAI;IAAEC,WAAW;IAAEC,KAAK;IAAEC,EAAE,GAAG;EAAM,CAAE,GAAGR,KAAK;EACjF,MAAMS,IAAI,GAAGb,uBAAuB,CAACc,GAAG,IAAIA,GAAG,CAACD,IAAI,CAAC;EACrD,MAAM;IAAEE;EAAgB,CAAE,GAAGd,2BAA2B,EAAE;EAC1D,OAAO;IACLe,UAAU,EAAE;MACVT,OAAO,EAAE,KAAK;MACdE,IAAI,EAAE,MAAM;MACZC,WAAW,EAAE,MAAM;MACnBO,IAAI,EAAE,MAAM;MACZX,KAAK,EAAE,MAAM;MACbK,KAAK,EAAE;KACR;IACDI,gBAAgB;IAChBG,UAAU,EAAEhB,cAAc,CAACW,IAAI,CAAC;IAChCI,IAAI,EAAEnB,qBAAqB,CAACc,EAAE,EAAE;MAAE,GAAGR,KAAK;MAAEC;IAAG,CAAE,CAAC;IAClDI,IAAI,EAAEV,gBAAgB,CAACU,IAAI,EAAE;MAAEU,QAAQ,EAAE,IAAI;MAAEC,YAAY,EAAE;QAAEZ;MAAQ;IAAE,CAAE,CAAC;IAC5EF,KAAK,EAAEP,gBAAgB,CAACO,KAAK,EAAE;MAAEa,QAAQ,EAAE;IAAI,CAAE,CAAC;IAClDZ,OAAO,EAAER,gBAAgB,CAACQ,OAAO,EAAE;MAAEY,QAAQ,EAAE;IAAI,CAAE,CAAC;IACtDT,WAAW,EAAEX,gBAAgB,CAACW,WAAW,CAAC;IAC1CC,KAAK,EAAEZ,gBAAgB,CAACY,KAAK;GAC9B;AACH,CAAC"}