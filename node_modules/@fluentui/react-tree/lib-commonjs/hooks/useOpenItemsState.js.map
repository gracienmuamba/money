{"version":3,"names":["react_utilities_1","require","React","ImmutableSet_1","useOpenItemsState","props","openItems","setOpenItems","useControllableState","state","useMemo","createImmutableSet","defaultState","defaultOpenItems","initialState","emptyImmutableSet","updateOpenItems","useEventCallback","data","currentOpenItems","createNextOpenItems","exports","previousOpenItems","id","target","previousOpenItemsHasId","has","open","nextOpenItems","add","delete"],"sources":["../src/packages/react-components/react-tree/src/hooks/useOpenItemsState.ts"],"sourcesContent":["import { useControllableState, useEventCallback } from '@fluentui/react-utilities';\nimport * as React from 'react';\nimport { TreeItemId, TreeOpenChangeData, TreeProps } from '../Tree';\nimport { createImmutableSet, emptyImmutableSet, ImmutableSet } from '../utils/ImmutableSet';\n\nexport function useOpenItemsState(props: Pick<TreeProps, 'openItems' | 'defaultOpenItems'>) {\n  const [openItems, setOpenItems] = useControllableState({\n    state: React.useMemo(() => props.openItems && createImmutableSet(props.openItems), [props.openItems]),\n    defaultState: React.useMemo(\n      () => props.defaultOpenItems && createImmutableSet(props.defaultOpenItems),\n      [props.defaultOpenItems],\n    ),\n    initialState: emptyImmutableSet,\n  });\n  const updateOpenItems = useEventCallback((data: TreeOpenChangeData) =>\n    setOpenItems(currentOpenItems => createNextOpenItems(data, currentOpenItems)),\n  );\n  return [openItems, updateOpenItems] as const;\n}\n\nfunction createNextOpenItems(\n  data: TreeOpenChangeData,\n  previousOpenItems: ImmutableSet<TreeItemId>,\n): ImmutableSet<TreeItemId> {\n  const id = data.target.id;\n  const previousOpenItemsHasId = previousOpenItems.has(id);\n  if (data.open ? previousOpenItemsHasId : !previousOpenItemsHasId) {\n    return previousOpenItems;\n  }\n  const nextOpenItems = createImmutableSet(previousOpenItems);\n  return data.open ? nextOpenItems.add(id) : nextOpenItems.delete(id);\n}\n"],"mappings":";;;;;;AAAA,MAAAA,iBAAA,gBAAAC,OAAA;AACA,MAAAC,KAAA,gBAAAD,OAAA;AAEA,MAAAE,cAAA,gBAAAF,OAAA;AAEA,SAAgBG,iBAAiBA,CAACC,KAAwD;EACxF,MAAM,CAACC,SAAS,EAAEC,YAAY,CAAC,GAAGP,iBAAA,CAAAQ,oBAAoB,CAAC;IACrDC,KAAK,EAAEP,KAAK,CAACQ,OAAO,CAAC,MAAML,KAAK,CAACC,SAAS,IAAIH,cAAA,CAAAQ,kBAAkB,CAACN,KAAK,CAACC,SAAS,CAAC,EAAE,CAACD,KAAK,CAACC,SAAS,CAAC,CAAC;IACrGM,YAAY,EAAEV,KAAK,CAACQ,OAAO,CACzB,MAAML,KAAK,CAACQ,gBAAgB,IAAIV,cAAA,CAAAQ,kBAAkB,CAACN,KAAK,CAACQ,gBAAgB,CAAC,EAC1E,CAACR,KAAK,CAACQ,gBAAgB,CAAC,CACzB;IACDC,YAAY,EAAEX,cAAA,CAAAY;GACf,CAAC;EACF,MAAMC,eAAe,GAAGhB,iBAAA,CAAAiB,gBAAgB,CAAEC,IAAwB,IAChEX,YAAY,CAACY,gBAAgB,IAAIC,mBAAmB,CAACF,IAAI,EAAEC,gBAAgB,CAAC,CAAC,CAC9E;EACD,OAAO,CAACb,SAAS,EAAEU,eAAe,CAAU;AAC9C;AAbAK,OAAA,CAAAjB,iBAAA,GAAAA,iBAAA;AAeA,SAASgB,mBAAmBA,CAC1BF,IAAwB,EACxBI,iBAA2C;EAE3C,MAAMC,EAAE,GAAGL,IAAI,CAACM,MAAM,CAACD,EAAE;EACzB,MAAME,sBAAsB,GAAGH,iBAAiB,CAACI,GAAG,CAACH,EAAE,CAAC;EACxD,IAAIL,IAAI,CAACS,IAAI,GAAGF,sBAAsB,GAAG,CAACA,sBAAsB,EAAE;IAChE,OAAOH,iBAAiB;;EAE1B,MAAMM,aAAa,GAAGzB,cAAA,CAAAQ,kBAAkB,CAACW,iBAAiB,CAAC;EAC3D,OAAOJ,IAAI,CAACS,IAAI,GAAGC,aAAa,CAACC,GAAG,CAACN,EAAE,CAAC,GAAGK,aAAa,CAACE,MAAM,CAACP,EAAE,CAAC;AACrE"}