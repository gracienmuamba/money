"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.useOpenItemsState = void 0;
const react_utilities_1 = /*#__PURE__*/require("@fluentui/react-utilities");
const React = /*#__PURE__*/require("react");
const ImmutableSet_1 = /*#__PURE__*/require("../utils/ImmutableSet");
function useOpenItemsState(props) {
  const [openItems, setOpenItems] = react_utilities_1.useControllableState({
    state: React.useMemo(() => props.openItems && ImmutableSet_1.createImmutableSet(props.openItems), [props.openItems]),
    defaultState: React.useMemo(() => props.defaultOpenItems && ImmutableSet_1.createImmutableSet(props.defaultOpenItems), [props.defaultOpenItems]),
    initialState: ImmutableSet_1.emptyImmutableSet
  });
  const updateOpenItems = react_utilities_1.useEventCallback(data => setOpenItems(currentOpenItems => createNextOpenItems(data, currentOpenItems)));
  return [openItems, updateOpenItems];
}
exports.useOpenItemsState = useOpenItemsState;
function createNextOpenItems(data, previousOpenItems) {
  const id = data.target.id;
  const previousOpenItemsHasId = previousOpenItems.has(id);
  if (data.open ? previousOpenItemsHasId : !previousOpenItemsHasId) {
    return previousOpenItems;
  }
  const nextOpenItems = ImmutableSet_1.createImmutableSet(previousOpenItems);
  return data.open ? nextOpenItems.add(id) : nextOpenItems.delete(id);
}
//# sourceMappingURL=useOpenItemsState.js.map