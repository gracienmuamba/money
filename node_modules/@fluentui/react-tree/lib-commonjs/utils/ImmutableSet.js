"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.dangerouslyCreateImmutableSet = exports.createImmutableSet = exports.emptyImmutableSet = void 0;
exports.emptyImmutableSet = /*#__PURE__*/createImmutableSet();
/**
 * properly creates an ImmutableSet instance from an iterable
 */
function createImmutableSet(iterable) {
  const internalSet = new Set(iterable);
  return dangerouslyCreateImmutableSet(internalSet);
}
exports.createImmutableSet = createImmutableSet;
/**
 * Avoid using *dangerouslyCreateImmutableSet*, since this method will expose internally used set, use  createImmutableSet instead,
 * @param internalSet - a set that is used internally to store values.
 */
function dangerouslyCreateImmutableSet(internalSet) {
  return {
    size: internalSet.size,
    add(value) {
      const nextSet = new Set(internalSet);
      nextSet.add(value);
      return dangerouslyCreateImmutableSet(nextSet);
    },
    clear() {
      return exports.emptyImmutableSet;
    },
    delete(value) {
      const nextSet = new Set(internalSet);
      nextSet.delete(value);
      return dangerouslyCreateImmutableSet(nextSet);
    },
    has(value) {
      return internalSet.has(value);
    },
    [Symbol.iterator]() {
      return internalSet[Symbol.iterator]();
    }
  };
}
exports.dangerouslyCreateImmutableSet = dangerouslyCreateImmutableSet;
//# sourceMappingURL=ImmutableSet.js.map