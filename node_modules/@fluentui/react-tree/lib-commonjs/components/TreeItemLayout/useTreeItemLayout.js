"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.useTreeItemLayout_unstable = void 0;
const react_utilities_1 = /*#__PURE__*/require("@fluentui/react-utilities");
const treeItemContext_1 = /*#__PURE__*/require("../../contexts/treeItemContext");
/**
 * Create the state required to render TreeItemLayout.
 *
 * The returned state can be modified with hooks such as useTreeItemLayoutStyles_unstable,
 * before being passed to renderTreeItemLayout_unstable.
 *
 * @param props - props from this instance of TreeItemLayout
 * @param ref - reference to root HTMLElement of TreeItemLayout
 */
const useTreeItemLayout_unstable = (props, ref) => {
  const {
    iconAfter,
    iconBefore,
    aside,
    as = 'div'
  } = props;
  const treeItemContext = treeItemContext_1.useTreeItemContext_unstable();
  return {
    ...treeItemContext,
    components: {
      root: 'div',
      iconBefore: 'span',
      iconAfter: 'span',
      aside: 'span'
    },
    root: react_utilities_1.getNativeElementProps(as, {
      ...props,
      ref
    }),
    iconBefore: react_utilities_1.resolveShorthand(iconBefore, {
      defaultProps: {
        'aria-hidden': true
      }
    }),
    iconAfter: react_utilities_1.resolveShorthand(iconAfter, {
      defaultProps: {
        'aria-hidden': true
      }
    }),
    aside: react_utilities_1.resolveShorthand(aside, {
      defaultProps: {
        'aria-hidden': true
      }
    })
  };
};
exports.useTreeItemLayout_unstable = useTreeItemLayout_unstable;
//# sourceMappingURL=useTreeItemLayout.js.map