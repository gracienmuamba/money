{"version":3,"names":["react_1","require","react_theme_1","react_tabster_1","index_1","tokens_1","exports","treeItemClassNames","root","content","subtree","expandIcon","actions","useRootStyles","__styles","level1","iytv0q","level2","level3","level4","level5","level6","level7","level8","level9","level10","d","useContentStyles","base","qhf8xq","Bceei9c","mc9l5x","De3pzq","sj55zd","z189sj","uwmqm3","Bbmb7ep","Beyfa6y","B7oj6ja","Btl43ni","lj723h","ecr2s2","Ixpawx","Bi91k9c","Jwef8y","B0t702g","focusIndicator","Brovlpu","B486eqv","B8q5s1w","Bci5o5g","n8qw10","Bdrgwmp","Bm4h7ae","B7ys5i9","Busjfv9","Bhk32uz","Bf4ptjt","kclons","Bhdgwq3","Blkhhs4","Bqtpl0w","clg4pj","hgwjuy","Bonggc9","B1tsrr9","Dah5zi","Bkh64rk","qqdqy8","B6dhp37","i03rao","Boxcth7","Bsom6fd","J0r882","Bjwuhne","Ghsupd","Bule8hv","subtle","transparent","leaf","a","h","f","i","useExpandIconStyles","Bt984gj","Brf1p80","Bf4jedk","B7ck84d","z8tnut","Byoj8tv","useActionsStyles","Frg6f3","open","expandIconInlineStyles","transform","useTreeItemStyles_unstable","state","rootStyles","contentStyles","expandIconStyles","actionsStyles","appearance","useTreeContext_unstable","ctx","isActionsVisible","showActions","level","className","mergeClasses","isStaticallyDefinedLevel","isLeaf"],"sources":["../src/packages/react-components/react-tree/src/components/TreeItem/useTreeItemStyles.ts"],"sourcesContent":["import { GriffelStyle, makeStyles, mergeClasses, shorthands } from '@griffel/react';\nimport type { TreeItemCSSProperties, TreeItemSlots, TreeItemState } from './TreeItem.types';\nimport type { SlotClassNames } from '@fluentui/react-utilities';\nimport { tokens } from '@fluentui/react-theme';\nimport { createFocusOutlineStyle } from '@fluentui/react-tabster';\nimport { useTreeContext_unstable } from '../../contexts/index';\nimport { treeItemLevelToken } from '../../utils/tokens';\n\nexport const treeItemClassNames: SlotClassNames<TreeItemSlots> = {\n  root: 'fui-TreeItem',\n  content: 'fui-TreeItem__content',\n  subtree: 'fui-TreeItem__subtree',\n  expandIcon: 'fui-TreeItem__expandIcon',\n  actions: 'fui-TreeItem__actions',\n};\n\ntype StaticLevel = 1 | 2 | 3 | 4 | 5 | 6 | 7 | 8 | 9 | 10;\ntype StaticLevelProperty = `level${StaticLevel}`;\n\nconst useRootStyles = makeStyles({\n  ...(Object.fromEntries(\n    Array.from<never, [StaticLevelProperty, TreeItemCSSProperties]>({ length: 10 }, (_, index) => [\n      `level${(index + 1) as StaticLevel}`,\n      { [treeItemLevelToken]: index + 1 },\n    ]),\n  ) as Record<StaticLevelProperty, GriffelStyle>),\n});\n\n/**\n * Styles for the content slot\n */\nconst useContentStyles = makeStyles({\n  base: {\n    position: 'relative',\n    cursor: 'pointer',\n    display: 'flex',\n    backgroundColor: tokens.colorSubtleBackground,\n    color: tokens.colorNeutralForeground2,\n    paddingRight: tokens.spacingHorizontalNone,\n    paddingLeft: `calc((var(${treeItemLevelToken}, 1) - 1) * ${tokens.spacingHorizontalXXL})`,\n    ...shorthands.borderRadius(tokens.borderRadiusMedium),\n    ':active': {\n      color: tokens.colorNeutralForeground2Pressed,\n      backgroundColor: tokens.colorSubtleBackgroundPressed,\n      // TODO: stop using treeItemClassNames.expandIcon for styling\n      [`& .${treeItemClassNames.expandIcon}`]: {\n        color: tokens.colorNeutralForeground3Pressed,\n      },\n    },\n    ':hover': {\n      color: tokens.colorNeutralForeground2Hover,\n      backgroundColor: tokens.colorSubtleBackgroundHover,\n      // TODO: stop using treeItemClassNames.expandIcon  for styling\n      [`& .${treeItemClassNames.expandIcon}`]: {\n        color: tokens.colorNeutralForeground3Hover,\n      },\n    },\n  },\n  focusIndicator: createFocusOutlineStyle(),\n  // Appearance variations\n  subtle: {},\n  'subtle-alpha': {\n    ':hover': {\n      backgroundColor: tokens.colorSubtleBackgroundLightAlphaHover,\n    },\n    ':active': {\n      backgroundColor: tokens.colorSubtleBackgroundLightAlphaPressed,\n    },\n  },\n  transparent: {\n    backgroundColor: tokens.colorTransparentBackground,\n    ':hover': {\n      backgroundColor: tokens.colorTransparentBackgroundHover,\n    },\n    ':active': {\n      backgroundColor: tokens.colorTransparentBackgroundPressed,\n    },\n  },\n  leaf: {\n    paddingLeft: `calc(var(${treeItemLevelToken}, 1) * ${tokens.spacingHorizontalXXL})`,\n  },\n});\n\n/**\n * Styles for the expand icon slot\n */\nconst useExpandIconStyles = makeStyles({\n  base: {\n    display: 'flex',\n    alignItems: 'center',\n    justifyContent: 'center',\n    minWidth: '24px',\n    boxSizing: 'border-box',\n    color: tokens.colorNeutralForeground3,\n    ...shorthands.padding(tokens.spacingVerticalXS, 0),\n  },\n});\n\n/**\n * Styles for the action icon slot\n */\nconst useActionsStyles = makeStyles({\n  base: {\n    display: 'none',\n    marginLeft: 'auto',\n    ...shorthands.padding(0, tokens.spacingHorizontalS),\n  },\n  open: {\n    display: 'flex',\n    position: 'relative',\n  },\n});\n\nexport const expandIconInlineStyles = {\n  90: { transform: `rotate(90deg)` },\n  0: { transform: `rotate(0deg)` },\n  180: { transform: `rotate(180deg)` },\n} as const;\n\n/**\n * Apply styling to the TreeItem slots based on the state\n */\nexport const useTreeItemStyles_unstable = (state: TreeItemState): TreeItemState => {\n  const rootStyles = useRootStyles();\n  const contentStyles = useContentStyles();\n  const expandIconStyles = useExpandIconStyles();\n  const actionsStyles = useActionsStyles();\n\n  const appearance = useTreeContext_unstable(ctx => ctx.appearance);\n\n  const { actions, subtree, expandIcon, isActionsVisible: showActions, level } = state;\n\n  state.root.className = mergeClasses(\n    treeItemClassNames.root,\n    isStaticallyDefinedLevel(level) && rootStyles[`level${level}` as StaticLevelProperty],\n    state.root.className,\n  );\n\n  state.content.className = mergeClasses(\n    treeItemClassNames.content,\n    contentStyles.base,\n    contentStyles[appearance],\n    contentStyles.focusIndicator,\n    state.isLeaf && contentStyles.leaf,\n    state.content.className,\n  );\n\n  if (expandIcon) {\n    expandIcon.className = mergeClasses(treeItemClassNames.expandIcon, expandIconStyles.base, expandIcon.className);\n  }\n  if (actions) {\n    actions.className = mergeClasses(\n      treeItemClassNames.actions,\n      actionsStyles.base,\n      showActions && actionsStyles.open,\n      actions.className,\n    );\n  }\n  if (subtree) {\n    subtree.className = mergeClasses(treeItemClassNames.subtree, subtree.className);\n  }\n\n  return state;\n};\n\nfunction isStaticallyDefinedLevel(level: number): level is StaticLevel {\n  return level >= 1 && level <= 10;\n}\n"],"mappings":"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"}