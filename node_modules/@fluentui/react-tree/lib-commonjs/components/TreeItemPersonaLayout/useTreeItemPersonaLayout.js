"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.useTreeItemPersonaLayout_unstable = void 0;
const react_utilities_1 = /*#__PURE__*/require("@fluentui/react-utilities");
const contexts_1 = /*#__PURE__*/require("../../contexts");
const tokens_1 = /*#__PURE__*/require("../../utils/tokens");
/**
 * Create the state required to render TreeItemPersonaLayout.
 *
 * The returned state can be modified with hooks such as useTreeItemPersonaLayoutStyles_unstable,
 * before being passed to renderTreeItemPersonaLayout_unstable.
 *
 * @param props - props from this instance of TreeItemPersonaLayout
 * @param ref - reference to root HTMLElement of TreeItemPersonaLayout
 */
const useTreeItemPersonaLayout_unstable = (props, ref) => {
  const {
    media,
    content,
    children,
    main,
    description,
    aside,
    as = 'span'
  } = props;
  const size = contexts_1.useTreeContext_unstable(ctx => ctx.size);
  const {
    isActionsVisible
  } = contexts_1.useTreeItemContext_unstable();
  return {
    components: {
      content: 'div',
      main: 'span',
      description: 'span',
      root: 'span',
      media: 'span',
      aside: 'span'
    },
    isActionsVisible,
    avatarSize: tokens_1.treeAvatarSize[size],
    root: react_utilities_1.getNativeElementProps(as, {
      ...props,
      ref
    }),
    main: react_utilities_1.resolveShorthand(main, {
      required: true,
      defaultProps: {
        children
      }
    }),
    media: react_utilities_1.resolveShorthand(media, {
      required: true
    }),
    content: react_utilities_1.resolveShorthand(content, {
      required: true
    }),
    description: react_utilities_1.resolveShorthand(description),
    aside: react_utilities_1.resolveShorthand(aside)
  };
};
exports.useTreeItemPersonaLayout_unstable = useTreeItemPersonaLayout_unstable;
//# sourceMappingURL=useTreeItemPersonaLayout.js.map