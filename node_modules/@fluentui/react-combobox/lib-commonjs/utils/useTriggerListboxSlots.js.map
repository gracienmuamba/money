{"version":3,"names":["React","require","react_utilities_1","dropdownKeyActions_1","useTriggerListboxSlots","props","state","ref","triggerSlot","listboxSlot","multiselect","activeOption","getCount","getIndexOfId","getOptionAtIndex","ignoreNextBlur","open","selectOption","setActiveOption","setFocusVisible","setHasFocus","setOpen","triggerRef","useRef","listboxId","useId","id","listbox","tabIndex","undefined","trigger","role","useMergedRefs","listboxOnClick","useEventCallback","mergeCallbacks","event","_a","current","focus","onClick","listboxOnMouseOver","onMouseOver","listboxOnMouseDown","onMouseDown","onBlur","onFocus","onKeyDown","action","getDropdownActionFromKey","maxIndex","activeIndex","newIndex","preventDefault","stopPropagation","disabled","getIndexFromAction","exports"],"sources":["../src/packages/react-components/react-combobox/src/utils/useTriggerListboxSlots.ts"],"sourcesContent":["import * as React from 'react';\nimport { mergeCallbacks, useId, useEventCallback, useMergedRefs } from '@fluentui/react-utilities';\nimport type { ExtractSlotProps, Slot } from '@fluentui/react-utilities';\nimport { getDropdownActionFromKey, getIndexFromAction } from '../utils/dropdownKeyActions';\nimport { Listbox } from '../components/Listbox/Listbox';\nimport type { ComboboxBaseProps, ComboboxBaseState } from './ComboboxBase.types';\n\nexport function useTriggerListboxSlots(\n  props: ComboboxBaseProps,\n  state: ComboboxBaseState,\n  ref: React.Ref<HTMLButtonElement>,\n  triggerSlot?: ExtractSlotProps<Slot<'button'>>,\n  listboxSlot?: ExtractSlotProps<Slot<typeof Listbox>>,\n): [trigger: ExtractSlotProps<Slot<'button'>>, listbox?: ExtractSlotProps<Slot<typeof Listbox>>];\nexport function useTriggerListboxSlots(\n  props: ComboboxBaseProps,\n  state: ComboboxBaseState,\n  ref: React.Ref<HTMLInputElement>,\n  triggerSlot?: ExtractSlotProps<Slot<'input'>>,\n  listboxSlot?: ExtractSlotProps<Slot<typeof Listbox>>,\n): [trigger: ExtractSlotProps<Slot<'input'>>, listbox?: ExtractSlotProps<Slot<typeof Listbox>>];\n\n/*\n * useTriggerListboxSlots returns a tuple of trigger/listbox shorthand,\n * with the semantics and event handlers needed for the Combobox and Dropdown components.\n * The element type of the ref should always match the element type used in the trigger shorthand.\n */\nexport function useTriggerListboxSlots(\n  props: ComboboxBaseProps,\n  state: ComboboxBaseState,\n  ref: React.Ref<HTMLButtonElement | HTMLInputElement>,\n  triggerSlot?: ExtractSlotProps<Slot<'input'>> | ExtractSlotProps<Slot<'button'>>,\n  listboxSlot?: ExtractSlotProps<Slot<typeof Listbox>>,\n): [\n  trigger: ExtractSlotProps<Slot<'input'>> | ExtractSlotProps<Slot<'button'>>,\n  listbox?: ExtractSlotProps<Slot<typeof Listbox>>,\n] {\n  const { multiselect } = props;\n  const {\n    activeOption,\n    getCount,\n    getIndexOfId,\n    getOptionAtIndex,\n    ignoreNextBlur,\n    open,\n    selectOption,\n    setActiveOption,\n    setFocusVisible,\n    setHasFocus,\n    setOpen,\n  } = state;\n\n  // handle trigger focus/blur\n  const triggerRef: typeof ref = React.useRef(null);\n\n  // resolve listbox shorthand props\n  const listboxId = useId('fluent-listbox', listboxSlot?.id);\n  const listbox: typeof listboxSlot = listboxSlot && {\n    id: listboxId,\n    multiselect,\n    tabIndex: undefined,\n    ...listboxSlot,\n  };\n\n  // resolve trigger shorthand props\n  const trigger: typeof triggerSlot = {\n    'aria-expanded': open,\n    'aria-activedescendant': open ? activeOption?.id : undefined,\n    role: 'combobox',\n    ...triggerSlot,\n    // explicitly type the ref as an intersection here to prevent type errors\n    // since the `children` prop has mutually incompatible types between input/button\n    // functionally both ref and triggerRef will always be the same element type\n    ref: useMergedRefs(ref, triggerSlot?.ref, triggerRef) as React.Ref<HTMLButtonElement & HTMLInputElement>,\n  };\n\n  /*\n   * Handle focus when clicking the listbox popup:\n   * 1. Move focus back to the button/input when the listbox is clicked (otherwise it goes to body)\n   * 2. Do not close the listbox on button/input blur when clicking into the listbox\n   */\n  const listboxOnClick = useEventCallback(\n    mergeCallbacks((event: React.MouseEvent<HTMLDivElement>) => {\n      triggerRef.current?.focus();\n    }, listbox?.onClick),\n  );\n\n  const listboxOnMouseOver = useEventCallback(\n    mergeCallbacks((event: React.MouseEvent<HTMLDivElement>) => {\n      setFocusVisible(false);\n    }, listbox?.onMouseOver),\n  );\n\n  const listboxOnMouseDown = useEventCallback(\n    mergeCallbacks((event: React.MouseEvent<HTMLDivElement>) => {\n      ignoreNextBlur.current = true;\n    }, listbox?.onMouseDown),\n  );\n\n  // listbox is nullable, only add event handlers if it exists\n  if (listbox) {\n    listbox.onClick = listboxOnClick;\n    listbox.onMouseOver = listboxOnMouseOver;\n    listbox.onMouseDown = listboxOnMouseDown;\n  }\n\n  // the trigger should open/close the popup on click or blur\n  trigger.onBlur = mergeCallbacks((event: React.FocusEvent<HTMLButtonElement> & React.FocusEvent<HTMLInputElement>) => {\n    if (!ignoreNextBlur.current) {\n      setOpen(event, false);\n    }\n\n    ignoreNextBlur.current = false;\n\n    setHasFocus(false);\n  }, trigger.onBlur);\n\n  trigger.onClick = mergeCallbacks(\n    (event: React.MouseEvent<HTMLButtonElement> & React.MouseEvent<HTMLInputElement>) => {\n      setOpen(event, !open);\n    },\n    trigger.onClick,\n  );\n\n  trigger.onFocus = mergeCallbacks(\n    (event: React.FocusEvent<HTMLButtonElement> & React.FocusEvent<HTMLInputElement>) => {\n      setHasFocus(true);\n    },\n    trigger.onFocus,\n  );\n\n  // handle combobox keyboard interaction\n  trigger.onKeyDown = mergeCallbacks(\n    (event: React.KeyboardEvent<HTMLButtonElement> & React.KeyboardEvent<HTMLInputElement>) => {\n      const action = getDropdownActionFromKey(event, { open, multiselect });\n      const maxIndex = getCount() - 1;\n      const activeIndex = activeOption ? getIndexOfId(activeOption.id) : -1;\n      let newIndex = activeIndex;\n\n      switch (action) {\n        case 'Open':\n          event.preventDefault();\n          setFocusVisible(true);\n          setOpen(event, true);\n          break;\n        case 'Close':\n          // stop propagation for escape key to avoid dismissing any parent popups\n          event.stopPropagation();\n          event.preventDefault();\n          setOpen(event, false);\n          break;\n        case 'CloseSelect':\n          !multiselect && !activeOption?.disabled && setOpen(event, false);\n        // fallthrough\n        case 'Select':\n          activeOption && selectOption(event, activeOption);\n          event.preventDefault();\n          break;\n        case 'Tab':\n          !multiselect && activeOption && selectOption(event, activeOption);\n          break;\n        default:\n          newIndex = getIndexFromAction(action, activeIndex, maxIndex);\n      }\n      if (newIndex !== activeIndex) {\n        // prevent default page scroll/keyboard action if the index changed\n        event.preventDefault();\n        setActiveOption(getOptionAtIndex(newIndex));\n        setFocusVisible(true);\n      }\n    },\n    trigger.onKeyDown,\n  );\n\n  trigger.onMouseOver = mergeCallbacks(\n    (event: React.MouseEvent<HTMLButtonElement> & React.MouseEvent<HTMLInputElement>) => {\n      setFocusVisible(false);\n    },\n    trigger.onMouseOver,\n  );\n\n  return [trigger, listbox];\n}\n"],"mappings":";;;;;;AAAA,MAAAA,KAAA,gBAAAC,OAAA;AACA,MAAAC,iBAAA,gBAAAD,OAAA;AAEA,MAAAE,oBAAA,gBAAAF,OAAA;AAmBA;;;;;AAKA,SAAgBG,sBAAsBA,CACpCC,KAAwB,EACxBC,KAAwB,EACxBC,GAAoD,EACpDC,WAAgF,EAChFC,WAAoD;EAKpD,MAAM;IAAEC;EAAW,CAAE,GAAGL,KAAK;EAC7B,MAAM;IACJM,YAAY;IACZC,QAAQ;IACRC,YAAY;IACZC,gBAAgB;IAChBC,cAAc;IACdC,IAAI;IACJC,YAAY;IACZC,eAAe;IACfC,eAAe;IACfC,WAAW;IACXC;EAAO,CACR,GAAGf,KAAK;EAET;EACA,MAAMgB,UAAU,GAAetB,KAAK,CAACuB,MAAM,CAAC,IAAI,CAAC;EAEjD;EACA,MAAMC,SAAS,GAAGtB,iBAAA,CAAAuB,KAAK,CAAC,gBAAgB,EAAEhB,WAAW,aAAXA,WAAW,uBAAXA,WAAW,CAAEiB,EAAE,CAAC;EAC1D,MAAMC,OAAO,GAAuBlB,WAAW,IAAI;IACjDiB,EAAE,EAAEF,SAAS;IACbd,WAAW;IACXkB,QAAQ,EAAEC,SAAS;IACnB,GAAGpB;GACJ;EAED;EACA,MAAMqB,OAAO,GAAuB;IAClC,eAAe,EAAEd,IAAI;IACrB,uBAAuB,EAAEA,IAAI,GAAGL,YAAY,aAAZA,YAAY,uBAAZA,YAAY,CAAEe,EAAE,GAAGG,SAAS;IAC5DE,IAAI,EAAE,UAAU;IAChB,GAAGvB,WAAW;IACd;IACA;IACA;IACAD,GAAG,EAAEL,iBAAA,CAAA8B,aAAa,CAACzB,GAAG,EAAEC,WAAW,aAAXA,WAAW,uBAAXA,WAAW,CAAED,GAAG,EAAEe,UAAU;GACrD;EAED;;;;;EAKA,MAAMW,cAAc,GAAG/B,iBAAA,CAAAgC,gBAAgB,CACrChC,iBAAA,CAAAiC,cAAc,CAAEC,KAAuC,IAAI;;IACzD,CAAAC,EAAA,GAAAf,UAAU,CAACgB,OAAO,cAAAD,EAAA,uBAAAA,EAAA,CAAEE,KAAK,EAAE;EAC7B,CAAC,EAAEZ,OAAO,aAAPA,OAAO,uBAAPA,OAAO,CAAEa,OAAO,CAAC,CACrB;EAED,MAAMC,kBAAkB,GAAGvC,iBAAA,CAAAgC,gBAAgB,CACzChC,iBAAA,CAAAiC,cAAc,CAAEC,KAAuC,IAAI;IACzDjB,eAAe,CAAC,KAAK,CAAC;EACxB,CAAC,EAAEQ,OAAO,aAAPA,OAAO,uBAAPA,OAAO,CAAEe,WAAW,CAAC,CACzB;EAED,MAAMC,kBAAkB,GAAGzC,iBAAA,CAAAgC,gBAAgB,CACzChC,iBAAA,CAAAiC,cAAc,CAAEC,KAAuC,IAAI;IACzDrB,cAAc,CAACuB,OAAO,GAAG,IAAI;EAC/B,CAAC,EAAEX,OAAO,aAAPA,OAAO,uBAAPA,OAAO,CAAEiB,WAAW,CAAC,CACzB;EAED;EACA,IAAIjB,OAAO,EAAE;IACXA,OAAO,CAACa,OAAO,GAAGP,cAAc;IAChCN,OAAO,CAACe,WAAW,GAAGD,kBAAkB;IACxCd,OAAO,CAACiB,WAAW,GAAGD,kBAAkB;;EAG1C;EACAb,OAAO,CAACe,MAAM,GAAG3C,iBAAA,CAAAiC,cAAc,CAAEC,KAA+E,IAAI;IAClH,IAAI,CAACrB,cAAc,CAACuB,OAAO,EAAE;MAC3BjB,OAAO,CAACe,KAAK,EAAE,KAAK,CAAC;;IAGvBrB,cAAc,CAACuB,OAAO,GAAG,KAAK;IAE9BlB,WAAW,CAAC,KAAK,CAAC;EACpB,CAAC,EAAEU,OAAO,CAACe,MAAM,CAAC;EAElBf,OAAO,CAACU,OAAO,GAAGtC,iBAAA,CAAAiC,cAAc,CAC7BC,KAA+E,IAAI;IAClFf,OAAO,CAACe,KAAK,EAAE,CAACpB,IAAI,CAAC;EACvB,CAAC,EACDc,OAAO,CAACU,OAAO,CAChB;EAEDV,OAAO,CAACgB,OAAO,GAAG5C,iBAAA,CAAAiC,cAAc,CAC7BC,KAA+E,IAAI;IAClFhB,WAAW,CAAC,IAAI,CAAC;EACnB,CAAC,EACDU,OAAO,CAACgB,OAAO,CAChB;EAED;EACAhB,OAAO,CAACiB,SAAS,GAAG7C,iBAAA,CAAAiC,cAAc,CAC/BC,KAAqF,IAAI;IACxF,MAAMY,MAAM,GAAG7C,oBAAA,CAAA8C,wBAAwB,CAACb,KAAK,EAAE;MAAEpB,IAAI;MAAEN;IAAW,CAAE,CAAC;IACrE,MAAMwC,QAAQ,GAAGtC,QAAQ,EAAE,GAAG,CAAC;IAC/B,MAAMuC,WAAW,GAAGxC,YAAY,GAAGE,YAAY,CAACF,YAAY,CAACe,EAAE,CAAC,GAAG,CAAC,CAAC;IACrE,IAAI0B,QAAQ,GAAGD,WAAW;IAE1B,QAAQH,MAAM;MACZ,KAAK,MAAM;QACTZ,KAAK,CAACiB,cAAc,EAAE;QACtBlC,eAAe,CAAC,IAAI,CAAC;QACrBE,OAAO,CAACe,KAAK,EAAE,IAAI,CAAC;QACpB;MACF,KAAK,OAAO;QACV;QACAA,KAAK,CAACkB,eAAe,EAAE;QACvBlB,KAAK,CAACiB,cAAc,EAAE;QACtBhC,OAAO,CAACe,KAAK,EAAE,KAAK,CAAC;QACrB;MACF,KAAK,aAAa;QAChB,CAAC1B,WAAW,IAAI,EAACC,YAAY,aAAZA,YAAY,uBAAZA,YAAY,CAAE4C,QAAQ,KAAIlC,OAAO,CAACe,KAAK,EAAE,KAAK,CAAC;MAClE;MACA,KAAK,QAAQ;QACXzB,YAAY,IAAIM,YAAY,CAACmB,KAAK,EAAEzB,YAAY,CAAC;QACjDyB,KAAK,CAACiB,cAAc,EAAE;QACtB;MACF,KAAK,KAAK;QACR,CAAC3C,WAAW,IAAIC,YAAY,IAAIM,YAAY,CAACmB,KAAK,EAAEzB,YAAY,CAAC;QACjE;MACF;QACEyC,QAAQ,GAAGjD,oBAAA,CAAAqD,kBAAkB,CAACR,MAAM,EAAEG,WAAW,EAAED,QAAQ,CAAC;IAAC;IAEjE,IAAIE,QAAQ,KAAKD,WAAW,EAAE;MAC5B;MACAf,KAAK,CAACiB,cAAc,EAAE;MACtBnC,eAAe,CAACJ,gBAAgB,CAACsC,QAAQ,CAAC,CAAC;MAC3CjC,eAAe,CAAC,IAAI,CAAC;;EAEzB,CAAC,EACDW,OAAO,CAACiB,SAAS,CAClB;EAEDjB,OAAO,CAACY,WAAW,GAAGxC,iBAAA,CAAAiC,cAAc,CACjCC,KAA+E,IAAI;IAClFjB,eAAe,CAAC,KAAK,CAAC;EACxB,CAAC,EACDW,OAAO,CAACY,WAAW,CACpB;EAED,OAAO,CAACZ,OAAO,EAAEH,OAAO,CAAC;AAC3B;AA3JA8B,OAAA,CAAArD,sBAAA,GAAAA,sBAAA"}