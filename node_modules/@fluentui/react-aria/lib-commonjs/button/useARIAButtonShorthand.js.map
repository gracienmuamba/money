{"version":3,"names":["react_utilities_1","require","useARIAButtonProps_1","useARIAButtonShorthand","slot","options","shorthand","resolveShorthand","shorthandARIAButton","useARIAButtonProps","_a","as","exports"],"sources":["../src/packages/react-components/react-aria/src/button/useARIAButtonShorthand.ts"],"sourcesContent":["import { resolveShorthand } from '@fluentui/react-utilities';\nimport { useARIAButtonProps } from './useARIAButtonProps';\nimport type { ResolveShorthandFunction } from '@fluentui/react-utilities';\nimport type { ARIAButtonProps, ARIAButtonSlotProps, ARIAButtonType } from './types';\n\n/**\n * @internal\n *\n * This function expects to receive a slot, if `as` property is not desired use `useARIAButtonProps` instead\n *\n * Button keyboard handling, role, disabled and tabIndex implementation that ensures ARIA spec\n * for multiple scenarios of shorthand properties. Ensuring 1st rule of ARIA for cases\n * where no attribute addition is required.\n */\nexport const useARIAButtonShorthand: ResolveShorthandFunction<ARIAButtonSlotProps> = (slot, options) => {\n  const shorthand = resolveShorthand(slot, options);\n  const shorthandARIAButton = useARIAButtonProps<ARIAButtonType, ARIAButtonProps>(shorthand?.as ?? 'button', shorthand);\n  return shorthand && shorthandARIAButton;\n};\n"],"mappings":";;;;;;AAAA,MAAAA,iBAAA,gBAAAC,OAAA;AACA,MAAAC,oBAAA,gBAAAD,OAAA;AAIA;;;;;;;;;AASO,MAAME,sBAAsB,GAAkDA,CAACC,IAAI,EAAEC,OAAO,KAAI;;EACrG,MAAMC,SAAS,GAAGN,iBAAA,CAAAO,gBAAgB,CAACH,IAAI,EAAEC,OAAO,CAAC;EACjD,MAAMG,mBAAmB,GAAGN,oBAAA,CAAAO,kBAAkB,CAAkC,CAAAC,EAAA,GAAAJ,SAAS,aAATA,SAAS,uBAATA,SAAS,CAAEK,EAAE,cAAAD,EAAA,cAAAA,EAAA,GAAI,QAAQ,EAAEJ,SAAS,CAAC;EACrH,OAAOA,SAAS,IAAIE,mBAAmB;AACzC,CAAC;AAJYI,OAAA,CAAAT,sBAAsB,GAAAA,sBAAA"}