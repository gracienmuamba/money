{"version":3,"names":["React","require","react_utilities_1","react_icons_1","react_label_1","react_tabster_1","useCheckbox_unstable","props","ref","disabled","required","shape","size","labelPosition","onChange","checked","setChecked","useControllableState","defaultState","defaultChecked","state","initialState","nativeProps","getPartitionedNativeProps","primarySlotTagName","excludedPropNames","mixed","id","useId","primary","checkmarkIcon","createElement","CircleFilled","Square16Filled","Square12Filled","Checkmark16Filled","Checkmark12Filled","components","root","input","indicator","label","Label","resolveShorthand","defaultProps","useFocusWithin","type","htmlFor","children","useEventCallback","ev","val","currentTarget","indeterminate","inputRef","useMergedRefs","useIsomorphicLayoutEffect","current","exports"],"sources":["../src/packages/react-components/react-checkbox/src/components/Checkbox/useCheckbox.tsx"],"sourcesContent":["import * as React from 'react';\nimport {\n  getPartitionedNativeProps,\n  resolveShorthand,\n  useControllableState,\n  useEventCallback,\n  useId,\n  useIsomorphicLayoutEffect,\n  useMergedRefs,\n} from '@fluentui/react-utilities';\nimport { CheckboxProps, CheckboxState } from './Checkbox.types';\nimport {\n  Checkmark12Filled,\n  Checkmark16Filled,\n  Square12Filled,\n  Square16Filled,\n  CircleFilled,\n} from '@fluentui/react-icons';\nimport { Label } from '@fluentui/react-label';\nimport { useFocusWithin } from '@fluentui/react-tabster';\n\n/**\n * Create the state required to render Checkbox.\n *\n * The returned state can be modified with hooks such as useCheckboxStyles_unstable,\n * before being passed to renderCheckbox_unstable.\n *\n * @param props - props from this instance of Checkbox\n * @param ref - reference to `<input>` element of Checkbox\n */\nexport const useCheckbox_unstable = (props: CheckboxProps, ref: React.Ref<HTMLInputElement>): CheckboxState => {\n  const { disabled = false, required, shape = 'square', size = 'medium', labelPosition = 'after', onChange } = props;\n\n  const [checked, setChecked] = useControllableState({\n    defaultState: props.defaultChecked,\n    state: props.checked,\n    initialState: false,\n  });\n\n  const nativeProps = getPartitionedNativeProps({\n    props,\n    primarySlotTagName: 'input',\n    excludedPropNames: ['checked', 'defaultChecked', 'size', 'onChange'],\n  });\n\n  const mixed = checked === 'mixed';\n  const id = useId('checkbox-', nativeProps.primary.id);\n\n  let checkmarkIcon;\n  if (mixed) {\n    if (shape === 'circular') {\n      checkmarkIcon = <CircleFilled />;\n    } else {\n      checkmarkIcon = size === 'large' ? <Square16Filled /> : <Square12Filled />;\n    }\n  } else if (checked) {\n    checkmarkIcon = size === 'large' ? <Checkmark16Filled /> : <Checkmark12Filled />;\n  }\n\n  const state: CheckboxState = {\n    shape,\n    checked,\n    disabled,\n    size,\n    labelPosition,\n    components: {\n      root: 'span',\n      input: 'input',\n      indicator: 'div',\n      label: Label,\n    },\n    root: resolveShorthand(props.root, {\n      required: true,\n      defaultProps: {\n        ref: useFocusWithin<HTMLSpanElement>(),\n        ...nativeProps.root,\n      },\n    }),\n    input: resolveShorthand(props.input, {\n      required: true,\n      defaultProps: {\n        type: 'checkbox',\n        id,\n        ref,\n        checked: checked === true,\n        ...nativeProps.primary,\n      },\n    }),\n    label: resolveShorthand(props.label, {\n      required: false,\n      defaultProps: {\n        htmlFor: id,\n        disabled,\n        required,\n        size: 'medium', // Even if the checkbox itself is large\n      },\n    }),\n    indicator: resolveShorthand(props.indicator, {\n      required: true,\n      defaultProps: {\n        'aria-hidden': true,\n        children: checkmarkIcon,\n      },\n    }),\n  };\n\n  state.input.onChange = useEventCallback(ev => {\n    const val = ev.currentTarget.indeterminate ? 'mixed' : ev.currentTarget.checked;\n    onChange?.(ev, { checked: val });\n    setChecked(val);\n  });\n\n  // Create a ref object for the input element so we can use it to set the indeterminate prop.\n  // Use useMergedRefs, since the ref might be undefined or a function-ref (no .current)\n  const inputRef = useMergedRefs(state.input.ref);\n  state.input.ref = inputRef;\n\n  // Set the <input> element's checked and indeterminate properties based on our tri-state property.\n  // Since indeterminate can only be set via javascript, it has to be done in a layout effect.\n  useIsomorphicLayoutEffect(() => {\n    if (inputRef.current) {\n      inputRef.current.indeterminate = mixed;\n    }\n  }, [inputRef, mixed]);\n\n  return state;\n};\n"],"mappings":"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"}