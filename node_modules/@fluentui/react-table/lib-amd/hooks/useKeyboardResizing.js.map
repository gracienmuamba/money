{"version":3,"file":"useKeyboardResizing.js","sourceRoot":"","sources":["../../../../../../../../packages/react-components/react-table/src/hooks/useKeyboardResizing.ts"],"names":[],"mappings":"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","sourcesContent":["import * as React from 'react';\nimport { ArrowLeft, ArrowRight, Enter, Escape, Shift, Space } from '@fluentui/keyboard-keys';\nimport { useEventCallback } from '@fluentui/react-utilities';\nimport { ColumnResizeState, EnableKeyboardModeOnChangeCallback, TableColumnId } from './types';\nimport { useFluent_unstable as useFluent } from '@fluentui/react-shared-contexts';\n\nconst STEP = 20;\nconst PRECISION_MODIFIER = Shift;\nconst PRECISION_FACTOR = 1 / 4;\n\nexport function useKeyboardResizing(columnResizeState: ColumnResizeState) {\n  const columnId = React.useRef<TableColumnId>();\n  const onChangeRef = React.useRef<EnableKeyboardModeOnChangeCallback>();\n  const addListenerTimeout = React.useRef<number>();\n\n  const columnResizeStateRef = React.useRef<ColumnResizeState>(columnResizeState);\n  React.useEffect(() => {\n    columnResizeStateRef.current = columnResizeState;\n  }, [columnResizeState]);\n\n  const { targetDocument } = useFluent();\n\n  const keyboardHandler = useEventCallback((event: KeyboardEvent) => {\n    const colId = columnId.current;\n\n    if (!colId) {\n      return;\n    }\n\n    const width = columnResizeStateRef.current.getColumnWidth(colId);\n    const precisionModifier = event.getModifierState(PRECISION_MODIFIER);\n\n    const stopEvent = () => {\n      event.preventDefault();\n      event.stopPropagation();\n    };\n\n    switch (event.key) {\n      case ArrowLeft:\n        stopEvent();\n        columnResizeStateRef.current.setColumnWidth(event, {\n          columnId: colId,\n          width: width - (precisionModifier ? STEP * PRECISION_FACTOR : STEP),\n        });\n        return;\n\n      case ArrowRight:\n        stopEvent();\n        columnResizeStateRef.current.setColumnWidth(event, {\n          columnId: colId,\n          width: width + (precisionModifier ? STEP * PRECISION_FACTOR : STEP),\n        });\n        return;\n\n      case Space:\n      case Enter:\n      case Escape:\n        stopEvent();\n        disableInteractiveMode();\n        break;\n    }\n  });\n\n  // On component unmout, cancel any timer for adding a listener (if it exists) and remove the listener\n  React.useEffect(\n    () => () => {\n      targetDocument?.defaultView?.clearTimeout(addListenerTimeout.current);\n      targetDocument?.defaultView?.removeEventListener('keydown', keyboardHandler);\n    },\n    [keyboardHandler, targetDocument?.defaultView],\n  );\n\n  const enableInteractiveMode = React.useCallback(\n    (colId: TableColumnId) => {\n      columnId.current = colId;\n      onChangeRef.current?.(colId, true);\n      // Create the listener in the next tick, because the event that triggered this is still propagating\n      // when Enter was pressed and would be caught in the keyboardHandler, disabling the keyboard mode immediately.\n      // No idea why this is happening, but this is a working workaround.\n      // Tracked here: https://github.com/microsoft/fluentui/issues/27177\n      addListenerTimeout.current = targetDocument?.defaultView?.setTimeout(() => {\n        targetDocument?.defaultView?.addEventListener('keydown', keyboardHandler);\n      }, 0);\n    },\n    [keyboardHandler, targetDocument?.defaultView],\n  );\n\n  const disableInteractiveMode = React.useCallback(() => {\n    if (columnId.current) {\n      onChangeRef.current?.(columnId.current, false);\n    }\n    columnId.current = undefined;\n    targetDocument?.defaultView?.removeEventListener('keydown', keyboardHandler);\n  }, [keyboardHandler, targetDocument?.defaultView]);\n\n  const toggleInteractiveMode = (colId: TableColumnId, onChange?: EnableKeyboardModeOnChangeCallback) => {\n    onChangeRef.current = onChange;\n    if (!columnId.current) {\n      enableInteractiveMode(colId);\n    } else if (colId && columnId.current !== colId) {\n      columnId.current = colId;\n      onChange?.(columnId.current, true);\n    } else {\n      disableInteractiveMode();\n    }\n  };\n\n  return {\n    toggleInteractiveMode,\n  };\n}\n"]}