{"version":3,"file":"useTableSelection.js","sourceRoot":"","sources":["../../../../../../../../packages/react-components/react-table/src/hooks/useTableSelection.ts"],"names":[],"mappings":"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","sourcesContent":["import * as React from 'react';\nimport { useControllableState, useEventCallback } from '@fluentui/react-utilities';\nimport { createSelectionManager } from './selectionManager';\nimport type { TableRowId, TableSelectionState, TableFeaturesState, UseTableSelectionOptions } from './types';\n\nconst noop = () => undefined;\n\nexport const defaultTableSelectionState: TableSelectionState = {\n  allRowsSelected: false,\n  clearRows: noop,\n  deselectRow: noop,\n  isRowSelected: () => false,\n  selectRow: noop,\n  selectedRows: new Set(),\n  someRowsSelected: false,\n  toggleAllRows: noop,\n  toggleRow: noop,\n  selectionMode: 'multiselect',\n};\n\nexport function useTableSelection<TItem>(options: UseTableSelectionOptions) {\n  // False positive, these plugin hooks are intended to be run on every render\n  // eslint-disable-next-line react-hooks/rules-of-hooks\n  return (tableState: TableFeaturesState<TItem>) => useTableSelectionState(tableState, options);\n}\n\nexport function useTableSelectionState<TItem>(\n  tableState: TableFeaturesState<TItem>,\n  options: UseTableSelectionOptions,\n): TableFeaturesState<TItem> {\n  const { items, getRowId } = tableState;\n  const { selectionMode, defaultSelectedItems, selectedItems, onSelectionChange } = options;\n\n  const [selected, setSelected] = useControllableState<Set<TableRowId>>({\n    initialState: new Set(),\n    defaultState: React.useMemo(\n      () => defaultSelectedItems && createSetFromIterable(defaultSelectedItems),\n      [defaultSelectedItems],\n    ),\n    state: React.useMemo(() => selectedItems && createSetFromIterable(selectedItems), [selectedItems]),\n  });\n\n  const selectionManager = React.useMemo(() => {\n    return createSelectionManager(selectionMode, (e, newSelectedItems) => {\n      setSelected(() => {\n        onSelectionChange?.(e as React.SyntheticEvent, { selectedItems: newSelectedItems });\n        return newSelectedItems;\n      });\n    });\n  }, [onSelectionChange, selectionMode, setSelected]);\n\n  const toggleAllRows: TableSelectionState['toggleAllRows'] = useEventCallback(e => {\n    selectionManager.toggleAllItems(\n      e,\n      items.map((item, i) => getRowId?.(item) ?? i),\n      selected,\n    );\n  });\n\n  const toggleRow: TableSelectionState['toggleRow'] = useEventCallback((e, rowId: TableRowId) =>\n    selectionManager.toggleItem(e, rowId, selected),\n  );\n\n  const deselectRow: TableSelectionState['deselectRow'] = useEventCallback((e, rowId: TableRowId) =>\n    selectionManager.deselectItem(e, rowId, selected),\n  );\n\n  const selectRow: TableSelectionState['selectRow'] = useEventCallback((e, rowId: TableRowId) =>\n    selectionManager.selectItem(e, rowId, selected),\n  );\n\n  const isRowSelected: TableSelectionState['isRowSelected'] = (rowId: TableRowId) =>\n    selectionManager.isSelected(rowId, selected);\n\n  return {\n    ...tableState,\n    selection: {\n      selectionMode,\n      someRowsSelected: selected.size > 0,\n      allRowsSelected: selectionMode === 'single' ? selected.size > 0 : selected.size === items.length,\n      selectedRows: selected,\n      toggleRow,\n      toggleAllRows,\n      clearRows: selectionManager.clearItems,\n      deselectRow,\n      selectRow,\n      isRowSelected,\n    },\n  };\n}\n\n/**\n * Creates a set from a given iterable, in case the iterable is a set itself, returns the given set instead.\n */\nfunction createSetFromIterable<V>(iterable: Iterable<V>): Set<V> {\n  return iterable instanceof Set ? iterable : new Set(iterable);\n}\n"]}