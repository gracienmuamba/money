{"version":3,"names":["React","require","TableResizeHandle_1","useMeasureElement_1","useTableColumnResizeMouseHandler_1","useTableColumnResizeState_1","useKeyboardResizing_1","exports","defaultColumnSizingState","getColumnWidths","getOnMouseDown","setColumnWidth","getTableHeaderCellProps","style","columnId","getTableCellProps","enableKeyboardMode","useTableColumnSizing_unstable","params","tableState","useTableColumnSizingState","getColumnStyles","column","width","minWidth","maxWidth","columns","measureElementRef","useMeasureElement","columnResizeState","useTableColumnResizeState","containerWidthOffset","mouseHandler","useTableColumnResizeMouseHandler","keyboardResizing","useKeyboardResizing","useCallback","onChange","e","preventDefault","nativeEvent","stopPropagation","toggleInteractiveMode","tableRef","columnSizing_unstable","w","undefined","getColumns","col","getColumnById","aside","createElement","TableResizeHandle","onMouseDown","onTouchStart"],"sources":["../src/packages/react-components/react-table/src/hooks/useTableColumnSizing.tsx"],"sourcesContent":["import * as React from 'react';\nimport { TableResizeHandle } from '../TableResizeHandle';\nimport {\n  ColumnWidthState,\n  EnableKeyboardModeOnChangeCallback,\n  TableColumnId,\n  TableColumnSizingState,\n  TableFeaturesState,\n  UseTableColumnSizingParams,\n} from './types';\nimport { useMeasureElement } from './useMeasureElement';\nimport { useTableColumnResizeMouseHandler } from './useTableColumnResizeMouseHandler';\nimport { useTableColumnResizeState } from './useTableColumnResizeState';\nimport { useKeyboardResizing } from './useKeyboardResizing';\n\nexport const defaultColumnSizingState: TableColumnSizingState = {\n  getColumnWidths: () => [],\n  getOnMouseDown: () => () => null,\n  setColumnWidth: () => null,\n  getTableHeaderCellProps: () => ({ style: {}, columnId: '' }),\n  getTableCellProps: () => ({ style: {}, columnId: '' }),\n  enableKeyboardMode: () => () => null,\n};\n\nexport function useTableColumnSizing_unstable<TItem>(params?: UseTableColumnSizingParams) {\n  // False positive, these plugin hooks are intended to be run on every render\n  // eslint-disable-next-line react-hooks/rules-of-hooks\n  return (tableState: TableFeaturesState<TItem>) => useTableColumnSizingState(tableState, params);\n}\n\nfunction getColumnStyles(column: ColumnWidthState): React.CSSProperties {\n  const width = column.width;\n\n  return {\n    // native styles\n    width,\n    // non-native element styles (flex layout)\n    minWidth: width,\n    maxWidth: width,\n  };\n}\n\nfunction useTableColumnSizingState<TItem>(\n  tableState: TableFeaturesState<TItem>,\n  params?: UseTableColumnSizingParams,\n): TableFeaturesState<TItem> {\n  const { columns } = tableState;\n\n  // Gets the container width\n  const { width, measureElementRef } = useMeasureElement();\n  // Creates the state based on columns and available containerWidth\n  const columnResizeState = useTableColumnResizeState(columns, width + (params?.containerWidthOffset || 0), params);\n  // Creates the mouse handler and attaches the state to it\n  const mouseHandler = useTableColumnResizeMouseHandler(columnResizeState);\n  // Creates the keyboard handler for resizing columns\n  const keyboardResizing = useKeyboardResizing(columnResizeState);\n\n  const enableKeyboardMode = React.useCallback(\n    (columnId: TableColumnId, onChange?: EnableKeyboardModeOnChangeCallback) =>\n      (e: React.MouseEvent | React.TouchEvent) => {\n        e.preventDefault();\n        e.nativeEvent.stopPropagation();\n        keyboardResizing.toggleInteractiveMode(columnId, onChange);\n      },\n    [keyboardResizing],\n  );\n\n  return {\n    ...tableState,\n    tableRef: measureElementRef,\n    // eslint-disable-next-line @typescript-eslint/naming-convention\n    columnSizing_unstable: {\n      getOnMouseDown: mouseHandler.getOnMouseDown,\n      setColumnWidth: (columnId: TableColumnId, w: number) =>\n        columnResizeState.setColumnWidth(undefined, { columnId, width: w }),\n      getColumnWidths: columnResizeState.getColumns,\n      getTableHeaderCellProps: (columnId: TableColumnId) => {\n        const col = columnResizeState.getColumnById(columnId);\n\n        const aside = (\n          <TableResizeHandle\n            onMouseDown={mouseHandler.getOnMouseDown(columnId)}\n            onTouchStart={mouseHandler.getOnMouseDown(columnId)}\n          />\n        );\n        return col ? { style: getColumnStyles(col), aside } : {};\n      },\n      getTableCellProps: (columnId: TableColumnId) => {\n        const col = columnResizeState.getColumnById(columnId);\n        return col ? { style: getColumnStyles(col) } : {};\n      },\n      enableKeyboardMode,\n    },\n  };\n}\n"],"mappings":"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"}