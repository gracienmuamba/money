{"version":3,"names":["React","require","react_tabster_1","useTable_1","hooks_1","TableSelectionCell_1","react_utilities_1","keyboard_keys_1","useDataGrid_unstable","props","ref","items","columns","focusMode","selectionMode","onSortChange","onSelectionChange","defaultSortState","sortState","selectedItems","defaultSelectedItems","subtleSelection","selectionAppearance","getRowId","resizableColumns","columnSizingOptions","onColumnResize","navigable","keyboardNavAttr","useArrowNavigationGroup","axis","tableState","useTableFeatures","useTableSort","useTableSelection","useTableColumnSizing_unstable","containerWidthOffset","CELL_WIDTH","innerRef","useRef","findFirstFocusable","findLastFocusable","useFocusFinders","onKeyDown","useEventCallback","e","_a","call","current","ctrlKey","defaultPrevented","key","Home","firstRow","querySelector","_b","focus","End","rows","querySelectorAll","length","lastRow","item","_c","baseTableState","useTable_unstable","role","as","noNativeElements","useMergedRefs","tableRef","selectableRows","exports"],"sources":["../src/packages/react-components/react-table/src/components/DataGrid/useDataGrid.ts"],"sourcesContent":["import * as React from 'react';\nimport { useArrowNavigationGroup, useFocusFinders } from '@fluentui/react-tabster';\nimport type { DataGridProps, DataGridState } from './DataGrid.types';\nimport { useTable_unstable } from '../Table/useTable';\nimport { useTableFeatures, useTableSort, useTableSelection, useTableColumnSizing_unstable } from '../../hooks';\nimport { CELL_WIDTH } from '../TableSelectionCell';\nimport { useEventCallback, useMergedRefs } from '@fluentui/react-utilities';\nimport { End, Home } from '@fluentui/keyboard-keys';\n\n/**\n * Create the state required to render DataGrid.\n *\n * The returned state can be modified with hooks such as useDataGridStyles_unstable,\n * before being passed to renderDataGrid_unstable.\n *\n * @param props - props from this instance of DataGrid\n * @param ref - reference to root HTMLElement of DataGrid\n */\nexport const useDataGrid_unstable = (props: DataGridProps, ref: React.Ref<HTMLElement>): DataGridState => {\n  const {\n    items,\n    columns,\n    focusMode = 'cell',\n    selectionMode,\n    onSortChange,\n    onSelectionChange,\n    defaultSortState,\n    sortState,\n    selectedItems,\n    defaultSelectedItems,\n    subtleSelection = false,\n    selectionAppearance = 'brand',\n    getRowId,\n    resizableColumns,\n    columnSizingOptions,\n    onColumnResize,\n  } = props;\n\n  const navigable = focusMode !== 'none';\n  const keyboardNavAttr = useArrowNavigationGroup({\n    axis: 'grid',\n  });\n\n  const tableState = useTableFeatures({ items, columns, getRowId }, [\n    useTableSort({\n      defaultSortState,\n      sortState,\n      onSortChange,\n    }),\n    useTableSelection({\n      defaultSelectedItems,\n      selectedItems,\n      onSelectionChange,\n      selectionMode: selectionMode ?? 'multiselect',\n    }),\n    useTableColumnSizing_unstable({\n      onColumnResize,\n      columnSizingOptions,\n      // The selection cell is not part of the columns, therefore its width needs to be subtracted\n      // from the container to make sure the columns don't overflow the table.\n      containerWidthOffset: selectionMode ? -CELL_WIDTH : 0,\n    }),\n  ]);\n\n  const innerRef = React.useRef<HTMLDivElement>(null);\n  const { findFirstFocusable, findLastFocusable } = useFocusFinders();\n  const onKeyDown = useEventCallback((e: React.KeyboardEvent<HTMLTableElement>) => {\n    props.onKeyDown?.(e);\n    if (!innerRef.current || !e.ctrlKey || e.defaultPrevented) {\n      return;\n    }\n\n    if (e.key === Home) {\n      const firstRow = innerRef.current.querySelector('[role=\"row\"]') as HTMLElement | null;\n      if (firstRow) {\n        findFirstFocusable(firstRow)?.focus();\n      }\n    }\n\n    if (e.key === End) {\n      const rows = innerRef.current.querySelectorAll('[role=\"row\"]');\n      if (rows.length) {\n        const lastRow = rows.item(rows.length - 1);\n        findLastFocusable(lastRow as HTMLElement)?.focus();\n      }\n    }\n  });\n\n  const baseTableState = useTable_unstable(\n    {\n      role: 'grid',\n      as: 'div',\n      noNativeElements: true,\n      ...(navigable && keyboardNavAttr),\n      ...props,\n      onKeyDown,\n    },\n    useMergedRefs(ref, tableState.tableRef, innerRef),\n  );\n\n  return {\n    ...baseTableState,\n    focusMode,\n    tableState,\n    selectableRows: !!selectionMode,\n    subtleSelection,\n    selectionAppearance,\n    resizableColumns,\n  };\n};\n"],"mappings":"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"}