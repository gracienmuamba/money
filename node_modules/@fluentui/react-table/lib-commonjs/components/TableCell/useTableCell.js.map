{"version":3,"names":["react_utilities_1","require","tableContext_1","useTableCell_unstable","props","ref","noNativeElements","size","useTableContext","rootComponent","_a","as","components","root","getNativeElementProps","role","undefined","exports"],"sources":["../src/packages/react-components/react-table/src/components/TableCell/useTableCell.ts"],"sourcesContent":["import * as React from 'react';\nimport { getNativeElementProps } from '@fluentui/react-utilities';\nimport type { TableCellProps, TableCellState } from './TableCell.types';\nimport { useTableContext } from '../../contexts/tableContext';\n\n/**\n * Create the state required to render TableCell.\n *\n * The returned state can be modified with hooks such as useTableCellStyles_unstable,\n * before being passed to renderTableCell_unstable.\n *\n * @param props - props from this instance of TableCell\n * @param ref - reference to root HTMLElement of TableCell\n */\nexport const useTableCell_unstable = (props: TableCellProps, ref: React.Ref<HTMLElement>): TableCellState => {\n  const { noNativeElements, size } = useTableContext();\n\n  const rootComponent = props.as ?? noNativeElements ? 'div' : 'td';\n\n  return {\n    components: {\n      root: rootComponent,\n    },\n    root: getNativeElementProps(rootComponent, {\n      ref,\n      role: rootComponent === 'div' ? 'cell' : undefined,\n      ...props,\n    }),\n    noNativeElements,\n    size,\n  };\n};\n"],"mappings":";;;;;;AACA,MAAAA,iBAAA,gBAAAC,OAAA;AAEA,MAAAC,cAAA,gBAAAD,OAAA;AAEA;;;;;;;;;AASO,MAAME,qBAAqB,GAAGA,CAACC,KAAqB,EAAEC,GAA2B,KAAoB;;EAC1G,MAAM;IAAEC,gBAAgB;IAAEC;EAAI,CAAE,GAAGL,cAAA,CAAAM,eAAe,EAAE;EAEpD,MAAMC,aAAa,GAAG,EAAAC,EAAA,GAAAN,KAAK,CAACO,EAAE,cAAAD,EAAA,cAAAA,EAAA,GAAIJ,gBAAgB,IAAG,KAAK,GAAG,IAAI;EAEjE,OAAO;IACLM,UAAU,EAAE;MACVC,IAAI,EAAEJ;KACP;IACDI,IAAI,EAAEb,iBAAA,CAAAc,qBAAqB,CAACL,aAAa,EAAE;MACzCJ,GAAG;MACHU,IAAI,EAAEN,aAAa,KAAK,KAAK,GAAG,MAAM,GAAGO,SAAS;MAClD,GAAGZ;KACJ,CAAC;IACFE,gBAAgB;IAChBC;GACD;AACH,CAAC;AAjBYU,OAAA,CAAAd,qBAAqB,GAAAA,qBAAA"}