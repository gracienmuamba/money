{"version":3,"names":["react_utilities_1","require","react_checkbox_1","react_radio_1","useTableCell_1","tableContext_1","useTableSelectionCell_unstable","props","ref","tableCellState","useTableCell_unstable","noNativeElements","useTableContext","type","checked","subtle","hidden","components","checkboxIndicator","Checkbox","radioIndicator","Radio","resolveShorthand","required","defaultProps","input","name","useId","exports"],"sources":["../src/packages/react-components/react-table/src/components/TableSelectionCell/useTableSelectionCell.tsx"],"sourcesContent":["import * as React from 'react';\nimport { resolveShorthand, useId } from '@fluentui/react-utilities';\nimport { Checkbox } from '@fluentui/react-checkbox';\nimport { Radio } from '@fluentui/react-radio';\nimport type { TableSelectionCellProps, TableSelectionCellState } from './TableSelectionCell.types';\nimport { useTableCell_unstable } from '../TableCell/useTableCell';\nimport { useTableContext } from '../../contexts/tableContext';\n\n/**\n * Create the state required to render TableSelectionCell.\n *\n * The returned state can be modified with hooks such as useTableSelectionCellStyles_unstable,\n * before being passed to renderTableSelectionCell_unstable.\n *\n * @param props - props from this instance of TableSelectionCell\n * @param ref - reference to root HTMLElement of TableSelectionCell\n */\nexport const useTableSelectionCell_unstable = (\n  props: TableSelectionCellProps,\n  ref: React.Ref<HTMLElement>,\n): TableSelectionCellState => {\n  const tableCellState = useTableCell_unstable(props, ref);\n  const { noNativeElements } = useTableContext();\n  const { type = 'checkbox', checked = false, subtle = false, hidden = false } = props;\n\n  return {\n    ...tableCellState,\n    components: {\n      ...tableCellState.components,\n      checkboxIndicator: Checkbox,\n      radioIndicator: Radio,\n    },\n    checkboxIndicator: resolveShorthand(props.checkboxIndicator, {\n      required: type === 'checkbox',\n      defaultProps: { checked: props.checked },\n    }),\n    radioIndicator: resolveShorthand(props.radioIndicator, {\n      required: type === 'radio',\n      defaultProps: { checked: !!checked, input: { name: useId('table-selection-radio') } },\n    }),\n    type,\n    checked,\n    noNativeElements,\n    subtle,\n    hidden,\n  };\n};\n"],"mappings":";;;;;;AACA,MAAAA,iBAAA,gBAAAC,OAAA;AACA,MAAAC,gBAAA,gBAAAD,OAAA;AACA,MAAAE,aAAA,gBAAAF,OAAA;AAEA,MAAAG,cAAA,gBAAAH,OAAA;AACA,MAAAI,cAAA,gBAAAJ,OAAA;AAEA;;;;;;;;;AASO,MAAMK,8BAA8B,GAAGA,CAC5CC,KAA8B,EAC9BC,GAA2B,KACA;EAC3B,MAAMC,cAAc,GAAGL,cAAA,CAAAM,qBAAqB,CAACH,KAAK,EAAEC,GAAG,CAAC;EACxD,MAAM;IAAEG;EAAgB,CAAE,GAAGN,cAAA,CAAAO,eAAe,EAAE;EAC9C,MAAM;IAAEC,IAAI,GAAG,UAAU;IAAEC,OAAO,GAAG,KAAK;IAAEC,MAAM,GAAG,KAAK;IAAEC,MAAM,GAAG;EAAK,CAAE,GAAGT,KAAK;EAEpF,OAAO;IACL,GAAGE,cAAc;IACjBQ,UAAU,EAAE;MACV,GAAGR,cAAc,CAACQ,UAAU;MAC5BC,iBAAiB,EAAEhB,gBAAA,CAAAiB,QAAQ;MAC3BC,cAAc,EAAEjB,aAAA,CAAAkB;KACjB;IACDH,iBAAiB,EAAElB,iBAAA,CAAAsB,gBAAgB,CAACf,KAAK,CAACW,iBAAiB,EAAE;MAC3DK,QAAQ,EAAEV,IAAI,KAAK,UAAU;MAC7BW,YAAY,EAAE;QAAEV,OAAO,EAAEP,KAAK,CAACO;MAAO;KACvC,CAAC;IACFM,cAAc,EAAEpB,iBAAA,CAAAsB,gBAAgB,CAACf,KAAK,CAACa,cAAc,EAAE;MACrDG,QAAQ,EAAEV,IAAI,KAAK,OAAO;MAC1BW,YAAY,EAAE;QAAEV,OAAO,EAAE,CAAC,CAACA,OAAO;QAAEW,KAAK,EAAE;UAAEC,IAAI,EAAE1B,iBAAA,CAAA2B,KAAK,CAAC,uBAAuB;QAAC;MAAE;KACpF,CAAC;IACFd,IAAI;IACJC,OAAO;IACPH,gBAAgB;IAChBI,MAAM;IACNC;GACD;AACH,CAAC;AA7BYY,OAAA,CAAAtB,8BAA8B,GAAAA,8BAAA"}