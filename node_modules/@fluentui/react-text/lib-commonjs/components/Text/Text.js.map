{"version":3,"names":["React","require","useText_1","renderText_1","useTextStyles_1","react_shared_contexts_1","exports","Text","forwardRef","props","ref","state","useText_unstable","useTextStyles_unstable","useCustomStyles","useCustomStyleHooks_unstable","renderText_unstable","displayName"],"sources":["../src/packages/react-components/react-text/src/components/Text/Text.tsx"],"sourcesContent":["import * as React from 'react';\nimport { useText_unstable } from './useText';\nimport { renderText_unstable } from './renderText';\nimport { useTextStyles_unstable } from './useTextStyles';\nimport type { TextProps } from './Text.types';\nimport type { ForwardRefComponent } from '@fluentui/react-utilities';\nimport { useCustomStyleHooks_unstable } from '@fluentui/react-shared-contexts';\n\n/**\n * Typography and styling abstraction component used to ensure consistency of text.\n */\nexport const Text: ForwardRefComponent<TextProps> = React.forwardRef((props, ref) => {\n  const state = useText_unstable(props, ref);\n\n  useTextStyles_unstable(state);\n\n  const { useTextStyles_unstable: useCustomStyles } = useCustomStyleHooks_unstable();\n  useCustomStyles(state);\n\n  return renderText_unstable(state);\n  // Work around some small mismatches in inferred types which don't matter in practice\n}) as ForwardRefComponent<TextProps>;\n\nText.displayName = 'Text';\n"],"mappings":";;;;;;AAAA,MAAAA,KAAA,gBAAAC,OAAA;AACA,MAAAC,SAAA,gBAAAD,OAAA;AACA,MAAAE,YAAA,gBAAAF,OAAA;AACA,MAAAG,eAAA,gBAAAH,OAAA;AAGA,MAAAI,uBAAA,gBAAAJ,OAAA;AAEA;;;AAGaK,OAAA,CAAAC,IAAI,gBAAmCP,KAAK,CAACQ,UAAU,CAAC,CAACC,KAAK,EAAEC,GAAG,KAAI;EAClF,MAAMC,KAAK,GAAGT,SAAA,CAAAU,gBAAgB,CAACH,KAAK,EAAEC,GAAG,CAAC;EAE1CN,eAAA,CAAAS,sBAAsB,CAACF,KAAK,CAAC;EAE7B,MAAM;IAAEE,sBAAsB,EAAEC;EAAe,CAAE,GAAGT,uBAAA,CAAAU,4BAA4B,EAAE;EAClFD,eAAe,CAACH,KAAK,CAAC;EAEtB,OAAOR,YAAA,CAAAa,mBAAmB,CAACL,KAAK,CAAC;EACjC;AACF,CAAC,CAAmC;;AAEpCL,OAAA,CAAAC,IAAI,CAACU,WAAW,GAAG,MAAM"}