{"version":3,"file":"useCardStyles.js","sourceRoot":"","sources":["../../../../../../../../../packages/react-components/react-card/src/components/Card/useCardStyles.ts"],"names":[],"mappings":"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","sourcesContent":["import { shorthands, makeStyles, mergeClasses } from '@griffel/react';\nimport { tokens } from '@fluentui/react-theme';\nimport type { SlotClassNames } from '@fluentui/react-utilities';\nimport { createFocusOutlineStyle } from '@fluentui/react-tabster';\n\nimport { cardPreviewClassNames } from '../CardPreview/useCardPreviewStyles';\nimport { cardHeaderClassNames } from '../CardHeader/useCardHeaderStyles';\nimport { cardFooterClassNames } from '../CardFooter/useCardFooterStyles';\nimport type { CardSlots, CardState } from './Card.types';\n\n/**\n * Static CSS class names used internally for the component slots.\n */\nexport const cardClassNames: SlotClassNames<CardSlots> = {\n  root: 'fui-Card',\n  floatingAction: 'fui-Card__floatingAction',\n  checkbox: 'fui-Card__checkbox',\n};\n\n/**\n * CSS variable names used internally for uniform styling in Card.\n */\nexport const cardCSSVars = {\n  cardSizeVar: '--fui-Card--size',\n  cardBorderRadiusVar: '--fui-Card--border-radius',\n};\n\nconst focusOutlineStyle = {\n  outlineRadius: `var(${cardCSSVars.cardBorderRadiusVar})`,\n  outlineWidth: tokens.strokeWidthThick,\n};\n\nconst useStyles = makeStyles({\n  root: {\n    ...shorthands.overflow('hidden'),\n    ...shorthands.borderRadius(`var(${cardCSSVars.cardBorderRadiusVar})`),\n    ...shorthands.padding(`var(${cardCSSVars.cardSizeVar})`),\n    ...shorthands.gap(`var(${cardCSSVars.cardSizeVar})`),\n\n    display: 'flex',\n    position: 'relative',\n    boxSizing: 'border-box',\n    color: tokens.colorNeutralForeground1,\n\n    // Border setting using after pseudo element to allow CardPreview to render behind it.\n    '::after': {\n      position: 'absolute',\n      top: 0,\n      left: 0,\n      right: 0,\n      bottom: 0,\n      content: '\"\"',\n      pointerEvents: 'none',\n\n      ...shorthands.borderStyle('solid'),\n      ...shorthands.borderWidth(tokens.strokeWidthThin),\n      ...shorthands.borderRadius(`var(${cardCSSVars.cardBorderRadiusVar})`),\n    },\n\n    // Prevents CardHeader and CardFooter from shrinking.\n    [`> .${cardHeaderClassNames.root}, > .${cardFooterClassNames.root}`]: {\n      flexShrink: 0,\n    },\n    // Allows non-card components to grow to fill the available space.\n    [`> :not(.${cardPreviewClassNames.root}):not(.${cardHeaderClassNames.root}):not(.${cardFooterClassNames.root})`]: {\n      flexGrow: 1,\n    },\n\n    ...createFocusOutlineStyle({\n      style: focusOutlineStyle,\n      selector: 'focus',\n    }),\n  },\n\n  selectableFocused: createFocusOutlineStyle({\n    style: focusOutlineStyle,\n    selector: 'focus-within',\n  }),\n\n  orientationHorizontal: {\n    flexDirection: 'row',\n    alignItems: 'center',\n\n    // Remove vertical padding to keep CardPreview content flush with Card's borders.\n    [`> .${cardPreviewClassNames.root}`]: {\n      marginTop: `calc(var(${cardCSSVars.cardSizeVar}) * -1)`,\n      marginBottom: `calc(var(${cardCSSVars.cardSizeVar}) * -1)`,\n    },\n    // Due to Tabster's \"Groupper\" focus functionality, hidden elements are injected before and after Card's content.\n    // As such, the code below targets a CardPreview, when it's the first element.\n    // Since this is on horizontal cards, the left padding is removed to keep the content flush with the border.\n    [`> :not([aria-hidden=\"true\"]).${cardPreviewClassNames.root}:first-of-type`]: {\n      marginLeft: `calc(var(${cardCSSVars.cardSizeVar}) * -1)`,\n    },\n    // Due to Tabster's \"Groupper\" focus functionality, hidden elements are injected before and after Card's content.\n    // As such, the code below targets a CardPreview, when it's the last element.\n    // Since this is on horizontal cards, the right padding is removed to keep the content flush with the border.\n    [`> :not([aria-hidden=\"true\"]).${cardPreviewClassNames.root}:last-of-type`]: {\n      marginRight: `calc(var(${cardCSSVars.cardSizeVar}) * -1)`,\n    },\n\n    // If the last child is a CardHeader or CardFooter, allow it to grow to fill the available space.\n    [`> .${cardHeaderClassNames.root}:last-of-type, > .${cardFooterClassNames.root}:last-of-type`]: {\n      flexGrow: 1,\n    },\n  },\n  orientationVertical: {\n    flexDirection: 'column',\n\n    // Remove lateral padding to keep CardPreview content flush with Card's borders.\n    [`> .${cardPreviewClassNames.root}`]: {\n      marginLeft: `calc(var(${cardCSSVars.cardSizeVar}) * -1)`,\n      marginRight: `calc(var(${cardCSSVars.cardSizeVar}) * -1)`,\n    },\n\n    // Due to Tabster's \"Groupper\" focus functionality, hidden elements are injected before and after Card's content.\n    // As such, the code below targets a CardPreview, when it's the first element.\n    // Since this is on vertical cards, the top padding is removed to keep the content flush with the border.\n    [`> :not([aria-hidden=\"true\"]).${cardPreviewClassNames.root}:first-of-type`]: {\n      marginTop: `calc(var(${cardCSSVars.cardSizeVar}) * -1)`,\n    },\n    [`> .${cardClassNames.floatingAction} + .${cardPreviewClassNames.root}`]: {\n      marginTop: `calc(var(${cardCSSVars.cardSizeVar}) * -1)`,\n    },\n\n    // Due to Tabster's \"Groupper\" focus functionality, hidden elements are injected before and after Card's content.\n    // As such, the code below targets a CardPreview, when it's the first element.\n    // Since this is on vertical cards, the bottom padding is removed to keep the content flush with the border.\n    [`> :not([aria-hidden=\"true\"]).${cardPreviewClassNames.root}:last-of-type`]: {\n      marginBottom: `calc(var(${cardCSSVars.cardSizeVar}) * -1)`,\n    },\n  },\n\n  sizeSmall: {\n    [cardCSSVars.cardSizeVar]: '8px',\n    [cardCSSVars.cardBorderRadiusVar]: tokens.borderRadiusSmall,\n  },\n  sizeMedium: {\n    [cardCSSVars.cardSizeVar]: '12px',\n    [cardCSSVars.cardBorderRadiusVar]: tokens.borderRadiusMedium,\n  },\n  sizeLarge: {\n    [cardCSSVars.cardSizeVar]: '16px',\n    [cardCSSVars.cardBorderRadiusVar]: tokens.borderRadiusLarge,\n  },\n\n  filled: {\n    backgroundColor: tokens.colorNeutralBackground1,\n    boxShadow: tokens.shadow4,\n\n    '::after': {\n      ...shorthands.borderColor(tokens.colorTransparentStroke),\n    },\n  },\n  filledInteractive: {\n    cursor: 'pointer',\n    backgroundColor: tokens.colorNeutralBackground1,\n    boxShadow: tokens.shadow4,\n\n    '::after': {\n      ...shorthands.borderColor(tokens.colorTransparentStroke),\n    },\n\n    ':hover': {\n      backgroundColor: tokens.colorNeutralBackground1Hover,\n      boxShadow: tokens.shadow8,\n    },\n    ':active': {\n      backgroundColor: tokens.colorNeutralBackground1Pressed,\n    },\n  },\n  filledInteractiveSelected: {\n    backgroundColor: tokens.colorNeutralBackground1Selected,\n\n    '::after': {\n      ...shorthands.borderColor(tokens.colorNeutralStroke1Selected),\n    },\n\n    ':hover': {\n      backgroundColor: tokens.colorNeutralBackground1Selected,\n    },\n  },\n\n  filledAlternative: {\n    backgroundColor: tokens.colorNeutralBackground2,\n    boxShadow: tokens.shadow4,\n\n    '::after': {\n      ...shorthands.borderColor(tokens.colorTransparentStroke),\n    },\n  },\n  filledAlternativeInteractive: {\n    cursor: 'pointer',\n    backgroundColor: tokens.colorNeutralBackground2,\n    boxShadow: tokens.shadow4,\n\n    '::after': {\n      ...shorthands.borderColor(tokens.colorTransparentStroke),\n    },\n\n    ':hover': {\n      backgroundColor: tokens.colorNeutralBackground2Hover,\n      boxShadow: tokens.shadow8,\n    },\n    ':active': {\n      backgroundColor: tokens.colorNeutralBackground2Pressed,\n    },\n  },\n  filledAlternativeInteractiveSelected: {\n    backgroundColor: tokens.colorNeutralBackground2Selected,\n\n    '::after': {\n      ...shorthands.borderColor(tokens.colorNeutralStroke1Selected),\n    },\n\n    ':hover': {\n      backgroundColor: tokens.colorNeutralBackground2Selected,\n    },\n  },\n\n  outline: {\n    backgroundColor: tokens.colorTransparentBackground,\n    boxShadow: 'none',\n\n    '::after': {\n      ...shorthands.borderColor(tokens.colorNeutralStroke1),\n    },\n  },\n  outlineInteractive: {\n    cursor: 'pointer',\n    backgroundColor: tokens.colorTransparentBackground,\n    boxShadow: 'none',\n\n    '::after': {\n      ...shorthands.borderColor(tokens.colorNeutralStroke1),\n    },\n\n    ':hover': {\n      backgroundColor: tokens.colorTransparentBackgroundHover,\n\n      '::after': {\n        ...shorthands.borderColor(tokens.colorNeutralStroke1Hover),\n      },\n    },\n    ':active': {\n      backgroundColor: tokens.colorTransparentBackgroundPressed,\n\n      '::after': {\n        ...shorthands.borderColor(tokens.colorNeutralStroke1Pressed),\n      },\n    },\n  },\n  outlineInteractiveSelected: {\n    backgroundColor: tokens.colorTransparentBackgroundSelected,\n\n    '::after': {\n      ...shorthands.borderColor(tokens.colorNeutralStroke1Selected),\n    },\n\n    ':hover': {\n      backgroundColor: tokens.colorTransparentBackgroundSelected,\n    },\n  },\n\n  subtle: {\n    backgroundColor: tokens.colorSubtleBackground,\n    boxShadow: 'none',\n\n    '::after': {\n      ...shorthands.borderColor(tokens.colorTransparentStroke),\n    },\n  },\n  subtleInteractive: {\n    cursor: 'pointer',\n    backgroundColor: tokens.colorSubtleBackground,\n    boxShadow: 'none',\n\n    '::after': {\n      ...shorthands.borderColor(tokens.colorTransparentStroke),\n    },\n\n    ':hover': {\n      backgroundColor: tokens.colorSubtleBackgroundHover,\n    },\n    ':active': {\n      backgroundColor: tokens.colorSubtleBackgroundPressed,\n    },\n  },\n  subtleInteractiveSelected: {\n    backgroundColor: tokens.colorSubtleBackgroundSelected,\n\n    '::after': {\n      ...shorthands.borderColor(tokens.colorNeutralStroke1Selected),\n    },\n\n    ':hover': {\n      backgroundColor: tokens.colorSubtleBackgroundSelected,\n    },\n  },\n\n  select: {\n    position: 'absolute',\n    top: '4px',\n    right: '4px',\n    zIndex: 1,\n  },\n\n  hiddenCheckbox: {\n    ...shorthands.overflow('hidden'),\n    width: '1px',\n    height: '1px',\n    position: 'absolute',\n    clip: 'rect(0 0 0 0)',\n    clipPath: 'inset(50%)',\n    whiteSpace: 'nowrap',\n  },\n});\n\n/**\n * Apply styling to the Card slots based on the state.\n */\nexport const useCardStyles_unstable = (state: CardState): CardState => {\n  const styles = useStyles();\n\n  const orientationMap = {\n    horizontal: styles.orientationHorizontal,\n    vertical: styles.orientationVertical,\n  };\n\n  const sizeMap = {\n    small: styles.sizeSmall,\n    medium: styles.sizeMedium,\n    large: styles.sizeLarge,\n  };\n\n  const appearanceMap = {\n    filled: styles.filled,\n    'filled-alternative': styles.filledAlternative,\n    outline: styles.outline,\n    subtle: styles.subtle,\n  };\n\n  const selectedMap = {\n    filled: styles.filledInteractiveSelected,\n    'filled-alternative': styles.filledAlternativeInteractiveSelected,\n    outline: styles.outlineInteractiveSelected,\n    subtle: styles.subtleInteractiveSelected,\n  };\n  const interactiveMap = {\n    filled: styles.filledInteractive,\n    'filled-alternative': styles.filledAlternativeInteractive,\n    outline: styles.outlineInteractive,\n    subtle: styles.subtleInteractive,\n  };\n\n  state.root.className = mergeClasses(\n    cardClassNames.root,\n    styles.root,\n    orientationMap[state.orientation],\n    sizeMap[state.size],\n    appearanceMap[state.appearance],\n    (state.interactive || state.selectable) && interactiveMap[state.appearance],\n    state.selected && selectedMap[state.appearance],\n    state.selectFocused && styles.selectableFocused,\n    state.root.className,\n  );\n\n  if (state.floatingAction) {\n    state.floatingAction.className = mergeClasses(\n      cardClassNames.floatingAction,\n      styles.select,\n      state.floatingAction.className,\n    );\n  }\n\n  if (state.checkbox) {\n    state.checkbox.className = mergeClasses(cardClassNames.checkbox, styles.hiddenCheckbox, state.checkbox.className);\n  }\n\n  return state;\n};\n"]}