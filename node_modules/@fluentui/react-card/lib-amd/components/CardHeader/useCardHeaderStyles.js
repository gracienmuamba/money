define(["require", "exports", "@griffel/react"], function (require, exports, react_1) {
    "use strict";
    var _a;
    Object.defineProperty(exports, "__esModule", { value: true });
    exports.useCardHeaderStyles_unstable = exports.cardHeaderCSSVars = exports.cardHeaderClassNames = void 0;
    /**
     * Static CSS class names used internally for the component slots.
     */
    exports.cardHeaderClassNames = {
        root: 'fui-CardHeader',
        image: 'fui-CardHeader__image',
        header: 'fui-CardHeader__header',
        description: 'fui-CardHeader__description',
        action: 'fui-CardHeader__action',
    };
    /**
     * CSS variable names used internally for uniform styling in CardHeader.
     */
    exports.cardHeaderCSSVars = {
        cardHeaderGapVar: '--fui-CardHeader--gap',
    };
    var useStyles = react_1.makeStyles({
        root: (_a = {},
            _a[exports.cardHeaderCSSVars.cardHeaderGapVar] = '12px',
            _a.display = 'grid',
            _a.gridAutoColumns = 'min-content 1fr min-content',
            _a.gridAutoRows = '1fr min-content',
            _a.alignItems = 'center',
            _a),
        image: {
            display: 'inline-flex',
            marginRight: "var(" + exports.cardHeaderCSSVars.cardHeaderGapVar + ")",
            gridColumnStart: '1',
            gridRowStart: 'span 2',
        },
        header: {
            gridColumnStart: '2',
            gridRowStart: '1',
        },
        description: {
            gridColumnStart: '2',
            gridRowStart: '2',
        },
        action: {
            marginLeft: "var(" + exports.cardHeaderCSSVars.cardHeaderGapVar + ")",
            gridColumnStart: '3',
            gridRowStart: 'span 2',
        },
    });
    /**
     * Apply styling to the CardHeader slots based on the state.
     */
    var useCardHeaderStyles_unstable = function (state) {
        var styles = useStyles();
        state.root.className = react_1.mergeClasses(exports.cardHeaderClassNames.root, styles.root, state.root.className);
        if (state.image) {
            state.image.className = react_1.mergeClasses(exports.cardHeaderClassNames.image, styles.image, state.image.className);
        }
        if (state.header) {
            state.header.className = react_1.mergeClasses(exports.cardHeaderClassNames.header, styles.header, state.header.className);
        }
        if (state.description) {
            state.description.className = react_1.mergeClasses(exports.cardHeaderClassNames.description, styles.description, state.description.className);
        }
        if (state.action) {
            state.action.className = react_1.mergeClasses(exports.cardHeaderClassNames.action, styles.action, state.action.className);
        }
        return state;
    };
    exports.useCardHeaderStyles_unstable = useCardHeaderStyles_unstable;
});
//# sourceMappingURL=useCardHeaderStyles.js.map