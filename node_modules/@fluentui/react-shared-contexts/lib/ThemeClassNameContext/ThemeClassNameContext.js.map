{"version":3,"names":["React","ThemeClassNameContext","createContext","undefined","themeClassNameContextDefaultVaue","ThemeClassNameProvider","Provider","useThemeClassName","_a","useContext"],"sources":["../src/packages/react-components/react-shared-contexts/src/ThemeClassNameContext/ThemeClassNameContext.ts"],"sourcesContent":["import * as React from 'react';\n\nexport type ThemeClassNameContextValue = string;\n\n/**\n * @internal\n * Used to provide a CSS class that applies theme css variables\n *\n * Useful for elements in the React tree (can read context) but not in the DOM Tree. E.g. Portals\n */\nconst ThemeClassNameContext = React.createContext<ThemeClassNameContextValue | undefined>(\n  undefined,\n) as React.Context<ThemeClassNameContextValue>;\n\nconst themeClassNameContextDefaultVaue = '';\n\nexport const ThemeClassNameProvider = ThemeClassNameContext.Provider;\n\n/**\n * @returns CSS class that applies css variables\n */\nexport function useThemeClassName(): ThemeClassNameContextValue {\n  return React.useContext(ThemeClassNameContext) ?? themeClassNameContextDefaultVaue;\n}\n"],"mappings":"AAAA,OAAO,KAAKA,KAAK,MAAM,OAAO;AAI9B;;;;;;AAMA,MAAMC,qBAAqB,gBAAGD,KAAK,CAACE,aAAa,CAC/CC,SAAS,CACmC;AAE9C,MAAMC,gCAAgC,GAAG,EAAE;AAE3C,OAAO,MAAMC,sBAAsB,GAAGJ,qBAAqB,CAACK,QAAQ;AAEpE;;;AAGA,OAAM,SAAUC,iBAAiBA,CAAA;;EAC/B,OAAO,CAAAC,EAAA,GAAAR,KAAK,CAACS,UAAU,CAACR,qBAAqB,CAAC,cAAAO,EAAA,cAAAA,EAAA,GAAIJ,gCAAgC;AACpF"}