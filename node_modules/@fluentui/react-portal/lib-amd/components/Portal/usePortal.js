define(["require", "exports", "@fluentui/react-utilities", "react", "../../virtualParent/index", "./usePortalMountNode"], function (require, exports, react_utilities_1, React, index_1, usePortalMountNode_1) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
    exports.usePortal_unstable = exports.toMountNodeProps = void 0;
    function toMountNodeProps(mountNode) {
        if (react_utilities_1.isHTMLElement(mountNode)) {
            return { element: mountNode };
        }
        if (typeof mountNode === 'object') {
            if (mountNode === null) {
                return { element: null };
            }
            return mountNode;
        }
        return {};
    }
    exports.toMountNodeProps = toMountNodeProps;
    /**
     * Create the state required to render Portal.
     *
     * The returned state can be modified with hooks such as usePortalStyles, before being passed to renderPortal_unstable.
     *
     * @param props - props from this instance of Portal
     */
    var usePortal_unstable = function (props) {
        var _a = toMountNodeProps(props.mountNode), element = _a.element, className = _a.className;
        var virtualParentRootRef = React.useRef(null);
        var fallbackElement = usePortalMountNode_1.usePortalMountNode({ disabled: !!element, className: className });
        var state = {
            children: props.children,
            mountNode: element !== null && element !== void 0 ? element : fallbackElement,
            virtualParentRootRef: virtualParentRootRef,
        };
        React.useEffect(function () {
            if (state.virtualParentRootRef.current && state.mountNode) {
                index_1.setVirtualParent(state.mountNode, state.virtualParentRootRef.current);
            }
            return function () {
                if (state.mountNode) {
                    index_1.setVirtualParent(state.mountNode, undefined);
                }
            };
        }, [state.virtualParentRootRef, state.mountNode]);
        return state;
    };
    exports.usePortal_unstable = usePortal_unstable;
});
//# sourceMappingURL=usePortal.js.map