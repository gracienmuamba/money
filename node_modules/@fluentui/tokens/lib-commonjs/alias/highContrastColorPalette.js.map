{"version":3,"names":["colors_1","require","sharedColorNames_1","statusColorPaletteTokens","statusSharedColorNames","reduce","acc","sharedColor","color","slice","toUpperCase","sharedColorTokens","hcCanvas","hcCanvasText","hcHighlight","Object","assign","colorPaletteRedForegroundInverted","colorPaletteGreenForegroundInverted","colorPaletteYellowForegroundInverted","personaColorPaletteTokens","personaSharedColorNames","exports","colorPaletteTokens"],"sources":["../src/packages/tokens/src/alias/highContrastColorPalette.ts"],"sourcesContent":["import { hcHighlight, hcCanvas, hcCanvasText } from '../global/colors';\nimport { statusSharedColorNames, personaSharedColorNames } from '../sharedColorNames';\nimport { ColorPaletteTokens, PersonaColorPaletteTokens, StatusColorPaletteTokens } from '../types';\n\nconst statusColorPaletteTokens = statusSharedColorNames.reduce((acc, sharedColor) => {\n  const color = sharedColor.slice(0, 1).toUpperCase() + sharedColor.slice(1);\n  const sharedColorTokens = {\n    [`colorPalette${color}Background1`]: hcCanvas,\n    [`colorPalette${color}Background2`]: hcCanvas,\n    [`colorPalette${color}Background3`]: hcCanvasText,\n    [`colorPalette${color}Foreground1`]: hcCanvasText,\n    [`colorPalette${color}Foreground2`]: hcCanvasText,\n    [`colorPalette${color}Foreground3`]: hcCanvasText,\n    [`colorPalette${color}BorderActive`]: hcHighlight,\n    [`colorPalette${color}Border1`]: hcCanvasText,\n    [`colorPalette${color}Border2`]: hcCanvasText,\n  };\n\n  return Object.assign(acc, sharedColorTokens);\n}, {} as StatusColorPaletteTokens);\n\n// one-off patches\nstatusColorPaletteTokens.colorPaletteRedForegroundInverted = hcCanvasText;\nstatusColorPaletteTokens.colorPaletteGreenForegroundInverted = hcCanvasText;\nstatusColorPaletteTokens.colorPaletteYellowForegroundInverted = hcCanvasText;\n\nconst personaColorPaletteTokens = personaSharedColorNames.reduce((acc, sharedColor) => {\n  const color = sharedColor.slice(0, 1).toUpperCase() + sharedColor.slice(1);\n  const sharedColorTokens = {\n    [`colorPalette${color}Background2`]: hcCanvas,\n    [`colorPalette${color}Foreground2`]: hcCanvasText,\n    [`colorPalette${color}BorderActive`]: hcHighlight,\n  };\n\n  return Object.assign(acc, sharedColorTokens);\n}, {} as PersonaColorPaletteTokens);\n\nexport const colorPaletteTokens: ColorPaletteTokens = { ...statusColorPaletteTokens, ...personaColorPaletteTokens };\n"],"mappings":";;;;;;AAAA,MAAAA,QAAA,gBAAAC,OAAA;AACA,MAAAC,kBAAA,gBAAAD,OAAA;AAGA,MAAME,wBAAwB,gBAAGD,kBAAA,CAAAE,sBAAsB,CAACC,MAAM,CAAC,CAACC,GAAG,EAAEC,WAAW,KAAI;EAClF,MAAMC,KAAK,GAAGD,WAAW,CAACE,KAAK,CAAC,CAAC,EAAE,CAAC,CAAC,CAACC,WAAW,EAAE,GAAGH,WAAW,CAACE,KAAK,CAAC,CAAC,CAAC;EAC1E,MAAME,iBAAiB,GAAG;IACxB,CAAC,eAAeH,KAAK,aAAa,GAAGR,QAAA,CAAAY,QAAQ;IAC7C,CAAC,eAAeJ,KAAK,aAAa,GAAGR,QAAA,CAAAY,QAAQ;IAC7C,CAAC,eAAeJ,KAAK,aAAa,GAAGR,QAAA,CAAAa,YAAY;IACjD,CAAC,eAAeL,KAAK,aAAa,GAAGR,QAAA,CAAAa,YAAY;IACjD,CAAC,eAAeL,KAAK,aAAa,GAAGR,QAAA,CAAAa,YAAY;IACjD,CAAC,eAAeL,KAAK,aAAa,GAAGR,QAAA,CAAAa,YAAY;IACjD,CAAC,eAAeL,KAAK,cAAc,GAAGR,QAAA,CAAAc,WAAW;IACjD,CAAC,eAAeN,KAAK,SAAS,GAAGR,QAAA,CAAAa,YAAY;IAC7C,CAAC,eAAeL,KAAK,SAAS,GAAGR,QAAA,CAAAa;GAClC;EAED,OAAOE,MAAM,CAACC,MAAM,CAACV,GAAG,EAAEK,iBAAiB,CAAC;AAC9C,CAAC,EAAE,EAA8B,CAAC;AAElC;AACAR,wBAAwB,CAACc,iCAAiC,GAAGjB,QAAA,CAAAa,YAAY;AACzEV,wBAAwB,CAACe,mCAAmC,GAAGlB,QAAA,CAAAa,YAAY;AAC3EV,wBAAwB,CAACgB,oCAAoC,GAAGnB,QAAA,CAAAa,YAAY;AAE5E,MAAMO,yBAAyB,gBAAGlB,kBAAA,CAAAmB,uBAAuB,CAAChB,MAAM,CAAC,CAACC,GAAG,EAAEC,WAAW,KAAI;EACpF,MAAMC,KAAK,GAAGD,WAAW,CAACE,KAAK,CAAC,CAAC,EAAE,CAAC,CAAC,CAACC,WAAW,EAAE,GAAGH,WAAW,CAACE,KAAK,CAAC,CAAC,CAAC;EAC1E,MAAME,iBAAiB,GAAG;IACxB,CAAC,eAAeH,KAAK,aAAa,GAAGR,QAAA,CAAAY,QAAQ;IAC7C,CAAC,eAAeJ,KAAK,aAAa,GAAGR,QAAA,CAAAa,YAAY;IACjD,CAAC,eAAeL,KAAK,cAAc,GAAGR,QAAA,CAAAc;GACvC;EAED,OAAOC,MAAM,CAACC,MAAM,CAACV,GAAG,EAAEK,iBAAiB,CAAC;AAC9C,CAAC,EAAE,EAA+B,CAAC;AAEtBW,OAAA,CAAAC,kBAAkB,GAAuB;EAAE,GAAGpB,wBAAwB;EAAE,GAAGiB;AAAyB,CAAE"}