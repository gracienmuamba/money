{"version":3,"names":["hcHighlight","hcCanvas","hcCanvasText","statusSharedColorNames","personaSharedColorNames","statusColorPaletteTokens","reduce","acc","sharedColor","color","slice","toUpperCase","sharedColorTokens","Object","assign","colorPaletteRedForegroundInverted","colorPaletteGreenForegroundInverted","colorPaletteYellowForegroundInverted","personaColorPaletteTokens","colorPaletteTokens"],"sources":["../src/packages/tokens/src/alias/highContrastColorPalette.ts"],"sourcesContent":["import { hcHighlight, hcCanvas, hcCanvasText } from '../global/colors';\nimport { statusSharedColorNames, personaSharedColorNames } from '../sharedColorNames';\nimport { ColorPaletteTokens, PersonaColorPaletteTokens, StatusColorPaletteTokens } from '../types';\n\nconst statusColorPaletteTokens = statusSharedColorNames.reduce((acc, sharedColor) => {\n  const color = sharedColor.slice(0, 1).toUpperCase() + sharedColor.slice(1);\n  const sharedColorTokens = {\n    [`colorPalette${color}Background1`]: hcCanvas,\n    [`colorPalette${color}Background2`]: hcCanvas,\n    [`colorPalette${color}Background3`]: hcCanvasText,\n    [`colorPalette${color}Foreground1`]: hcCanvasText,\n    [`colorPalette${color}Foreground2`]: hcCanvasText,\n    [`colorPalette${color}Foreground3`]: hcCanvasText,\n    [`colorPalette${color}BorderActive`]: hcHighlight,\n    [`colorPalette${color}Border1`]: hcCanvasText,\n    [`colorPalette${color}Border2`]: hcCanvasText,\n  };\n\n  return Object.assign(acc, sharedColorTokens);\n}, {} as StatusColorPaletteTokens);\n\n// one-off patches\nstatusColorPaletteTokens.colorPaletteRedForegroundInverted = hcCanvasText;\nstatusColorPaletteTokens.colorPaletteGreenForegroundInverted = hcCanvasText;\nstatusColorPaletteTokens.colorPaletteYellowForegroundInverted = hcCanvasText;\n\nconst personaColorPaletteTokens = personaSharedColorNames.reduce((acc, sharedColor) => {\n  const color = sharedColor.slice(0, 1).toUpperCase() + sharedColor.slice(1);\n  const sharedColorTokens = {\n    [`colorPalette${color}Background2`]: hcCanvas,\n    [`colorPalette${color}Foreground2`]: hcCanvasText,\n    [`colorPalette${color}BorderActive`]: hcHighlight,\n  };\n\n  return Object.assign(acc, sharedColorTokens);\n}, {} as PersonaColorPaletteTokens);\n\nexport const colorPaletteTokens: ColorPaletteTokens = { ...statusColorPaletteTokens, ...personaColorPaletteTokens };\n"],"mappings":"AAAA,SAASA,WAAW,EAAEC,QAAQ,EAAEC,YAAY,QAAQ,kBAAkB;AACtE,SAASC,sBAAsB,EAAEC,uBAAuB,QAAQ,qBAAqB;AAGrF,MAAMC,wBAAwB,gBAAGF,sBAAsB,CAACG,MAAM,CAAC,CAACC,GAAG,EAAEC,WAAW,KAAI;EAClF,MAAMC,KAAK,GAAGD,WAAW,CAACE,KAAK,CAAC,CAAC,EAAE,CAAC,CAAC,CAACC,WAAW,EAAE,GAAGH,WAAW,CAACE,KAAK,CAAC,CAAC,CAAC;EAC1E,MAAME,iBAAiB,GAAG;IACxB,CAAC,eAAeH,KAAK,aAAa,GAAGR,QAAQ;IAC7C,CAAC,eAAeQ,KAAK,aAAa,GAAGR,QAAQ;IAC7C,CAAC,eAAeQ,KAAK,aAAa,GAAGP,YAAY;IACjD,CAAC,eAAeO,KAAK,aAAa,GAAGP,YAAY;IACjD,CAAC,eAAeO,KAAK,aAAa,GAAGP,YAAY;IACjD,CAAC,eAAeO,KAAK,aAAa,GAAGP,YAAY;IACjD,CAAC,eAAeO,KAAK,cAAc,GAAGT,WAAW;IACjD,CAAC,eAAeS,KAAK,SAAS,GAAGP,YAAY;IAC7C,CAAC,eAAeO,KAAK,SAAS,GAAGP;GAClC;EAED,OAAOW,MAAM,CAACC,MAAM,CAACP,GAAG,EAAEK,iBAAiB,CAAC;AAC9C,CAAC,EAAE,EAA8B,CAAC;AAElC;AACAP,wBAAwB,CAACU,iCAAiC,GAAGb,YAAY;AACzEG,wBAAwB,CAACW,mCAAmC,GAAGd,YAAY;AAC3EG,wBAAwB,CAACY,oCAAoC,GAAGf,YAAY;AAE5E,MAAMgB,yBAAyB,gBAAGd,uBAAuB,CAACE,MAAM,CAAC,CAACC,GAAG,EAAEC,WAAW,KAAI;EACpF,MAAMC,KAAK,GAAGD,WAAW,CAACE,KAAK,CAAC,CAAC,EAAE,CAAC,CAAC,CAACC,WAAW,EAAE,GAAGH,WAAW,CAACE,KAAK,CAAC,CAAC,CAAC;EAC1E,MAAME,iBAAiB,GAAG;IACxB,CAAC,eAAeH,KAAK,aAAa,GAAGR,QAAQ;IAC7C,CAAC,eAAeQ,KAAK,aAAa,GAAGP,YAAY;IACjD,CAAC,eAAeO,KAAK,cAAc,GAAGT;GACvC;EAED,OAAOa,MAAM,CAACC,MAAM,CAACP,GAAG,EAAEK,iBAAiB,CAAC;AAC9C,CAAC,EAAE,EAA+B,CAAC;AAEnC,OAAO,MAAMO,kBAAkB,GAAuB;EAAE,GAAGd,wBAAwB;EAAE,GAAGa;AAAyB,CAAE"}