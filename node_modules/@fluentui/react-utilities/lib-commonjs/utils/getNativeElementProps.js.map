{"version":3,"names":["properties_1","require","nativeElementMap","label","labelProperties","audio","audioProperties","video","videoProperties","ol","olProperties","li","liProperties","a","anchorProperties","button","buttonProperties","input","inputProperties","textarea","textAreaProperties","select","selectProperties","option","optionProperties","table","tableProperties","tr","trProperties","th","thProperties","td","tdProperties","colGroup","colGroupProperties","col","colProperties","fieldset","fieldsetProperties","form","formProperties","iframe","iframeProperties","img","imgProperties","time","timeProperties","dialog","dialogProperties","getNativeElementProps","tagName","props","excludedPropNames","allowedPropNames","htmlElementProperties","as","getNativeProps","exports","getPartitionedNativeProps","primarySlotTagName","root","style","className","primary"],"sources":["../src/packages/react-components/react-utilities/src/utils/getNativeElementProps.ts"],"sourcesContent":["import * as React from 'react';\nimport {\n  labelProperties,\n  audioProperties,\n  videoProperties,\n  olProperties,\n  liProperties,\n  anchorProperties,\n  buttonProperties,\n  inputProperties,\n  textAreaProperties,\n  selectProperties,\n  optionProperties,\n  tableProperties,\n  trProperties,\n  thProperties,\n  tdProperties,\n  colGroupProperties,\n  colProperties,\n  fieldsetProperties,\n  formProperties,\n  iframeProperties,\n  imgProperties,\n  htmlElementProperties,\n  getNativeProps,\n  timeProperties,\n  dialogProperties,\n} from './properties';\n\nconst nativeElementMap: Record<string, Record<string, number>> = {\n  label: labelProperties,\n  audio: audioProperties,\n  video: videoProperties,\n  ol: olProperties,\n  li: liProperties,\n  a: anchorProperties,\n  button: buttonProperties,\n  input: inputProperties,\n  textarea: textAreaProperties,\n  select: selectProperties,\n  option: optionProperties,\n  table: tableProperties,\n  tr: trProperties,\n  th: thProperties,\n  td: tdProperties,\n  colGroup: colGroupProperties,\n  col: colProperties,\n  fieldset: fieldsetProperties,\n  form: formProperties,\n  iframe: iframeProperties,\n  img: imgProperties,\n  time: timeProperties,\n  dialog: dialogProperties,\n};\n\n/**\n * Given an element tagname and user props, filters the props to only allowed props for the given\n * element type.\n * @param tagName - Tag name (e.g. \"div\")\n * @param props - Props object\n * @param excludedPropNames - List of props to disallow\n */\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\nexport function getNativeElementProps<TAttributes extends React.HTMLAttributes<any>>(\n  tagName: string,\n  props: {},\n  excludedPropNames?: string[],\n): TAttributes {\n  const allowedPropNames = (tagName && nativeElementMap[tagName]) || htmlElementProperties;\n  allowedPropNames.as = 1;\n\n  return getNativeProps(props, allowedPropNames, excludedPropNames);\n}\n\n/**\n * Splits the native props into ones that go to the `root` slot, and ones that go to the primary slot.\n *\n * This function is only for use with components that have a primary slot other than `root`.\n * Most components should use {@link getNativeElementProps} for their root slot if it is the primary slot.\n *\n * @returns An object containing the native props for the `root` and primary slots.\n */\nexport const getPartitionedNativeProps = <\n  Props extends Pick<React.HTMLAttributes<HTMLElement>, 'style' | 'className'>,\n  ExcludedPropKeys extends Extract<keyof Props, string> = never,\n>({\n  primarySlotTagName,\n  props,\n  excludedPropNames,\n}: {\n  /** The primary slot's element type (e.g. 'div') */\n  primarySlotTagName: keyof JSX.IntrinsicElements;\n\n  /** The component's props object */\n  props: Props;\n\n  /** List of native props to exclude from the returned value */\n  excludedPropNames?: ExcludedPropKeys[];\n}) => {\n  return {\n    root: { style: props.style, className: props.className },\n    primary: getNativeElementProps<Omit<Props, ExcludedPropKeys>>(primarySlotTagName, props, [\n      ...(excludedPropNames || []),\n      'style',\n      'className',\n    ]),\n  };\n};\n"],"mappings":";;;;;;AACA,MAAAA,YAAA,gBAAAC,OAAA;AA4BA,MAAMC,gBAAgB,GAA2C;EAC/DC,KAAK,EAAEH,YAAA,CAAAI,eAAe;EACtBC,KAAK,EAAEL,YAAA,CAAAM,eAAe;EACtBC,KAAK,EAAEP,YAAA,CAAAQ,eAAe;EACtBC,EAAE,EAAET,YAAA,CAAAU,YAAY;EAChBC,EAAE,EAAEX,YAAA,CAAAY,YAAY;EAChBC,CAAC,EAAEb,YAAA,CAAAc,gBAAgB;EACnBC,MAAM,EAAEf,YAAA,CAAAgB,gBAAgB;EACxBC,KAAK,EAAEjB,YAAA,CAAAkB,eAAe;EACtBC,QAAQ,EAAEnB,YAAA,CAAAoB,kBAAkB;EAC5BC,MAAM,EAAErB,YAAA,CAAAsB,gBAAgB;EACxBC,MAAM,EAAEvB,YAAA,CAAAwB,gBAAgB;EACxBC,KAAK,EAAEzB,YAAA,CAAA0B,eAAe;EACtBC,EAAE,EAAE3B,YAAA,CAAA4B,YAAY;EAChBC,EAAE,EAAE7B,YAAA,CAAA8B,YAAY;EAChBC,EAAE,EAAE/B,YAAA,CAAAgC,YAAY;EAChBC,QAAQ,EAAEjC,YAAA,CAAAkC,kBAAkB;EAC5BC,GAAG,EAAEnC,YAAA,CAAAoC,aAAa;EAClBC,QAAQ,EAAErC,YAAA,CAAAsC,kBAAkB;EAC5BC,IAAI,EAAEvC,YAAA,CAAAwC,cAAc;EACpBC,MAAM,EAAEzC,YAAA,CAAA0C,gBAAgB;EACxBC,GAAG,EAAE3C,YAAA,CAAA4C,aAAa;EAClBC,IAAI,EAAE7C,YAAA,CAAA8C,cAAc;EACpBC,MAAM,EAAE/C,YAAA,CAAAgD;CACT;AAED;;;;;;;AAOA;AACA,SAAgBC,qBAAqBA,CACnCC,OAAe,EACfC,KAAS,EACTC,iBAA4B;EAE5B,MAAMC,gBAAgB,GAAIH,OAAO,IAAIhD,gBAAgB,CAACgD,OAAO,CAAC,IAAKlD,YAAA,CAAAsD,qBAAqB;EACxFD,gBAAgB,CAACE,EAAE,GAAG,CAAC;EAEvB,OAAOvD,YAAA,CAAAwD,cAAc,CAACL,KAAK,EAAEE,gBAAgB,EAAED,iBAAiB,CAAC;AACnE;AATAK,OAAA,CAAAR,qBAAA,GAAAA,qBAAA;AAWA;;;;;;;;AAQO,MAAMS,yBAAyB,GAAGA,CAGvC;EACAC,kBAAkB;EAClBR,KAAK;EACLC;AAAiB,CAUlB,KAAI;EACH,OAAO;IACLQ,IAAI,EAAE;MAAEC,KAAK,EAAEV,KAAK,CAACU,KAAK;MAAEC,SAAS,EAAEX,KAAK,CAACW;IAAS,CAAE;IACxDC,OAAO,EAAEd,qBAAqB,CAAgCU,kBAAkB,EAAER,KAAK,EAAE,CACvF,IAAIC,iBAAiB,IAAI,EAAE,CAAC,EAC5B,OAAO,EACP,WAAW,CACZ;GACF;AACH,CAAC;AAzBYK,OAAA,CAAAC,yBAAyB,GAAAA,yBAAA"}