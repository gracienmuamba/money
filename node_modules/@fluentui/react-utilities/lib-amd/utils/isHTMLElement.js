define(["require", "exports"], function (require, exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
    exports.isHTMLElement = void 0;
    /**
     * @internal
     * Verifies if a given node is an HTMLElement,
     * this method works seamlessly with frames and elements from different documents
     *
     * This is required as simply using `instanceof`
     * might be problematic while operating with [multiple realms](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Operators/instanceof#instanceof_and_multiple_realms)
     *
     */
    function isHTMLElement(element, options) {
        var _a, _b;
        var typedElement = element;
        return Boolean(((_a = typedElement === null || typedElement === void 0 ? void 0 : typedElement.ownerDocument) === null || _a === void 0 ? void 0 : _a.defaultView) &&
            typedElement instanceof typedElement.ownerDocument.defaultView[(_b = options === null || options === void 0 ? void 0 : options.constructorName) !== null && _b !== void 0 ? _b : 'HTMLElement']);
    }
    exports.isHTMLElement = isHTMLElement;
});
//# sourceMappingURL=isHTMLElement.js.map