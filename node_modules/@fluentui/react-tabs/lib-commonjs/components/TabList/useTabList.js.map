{"version":3,"names":["React","require","react_tabster_1","react_utilities_1","useTabList_unstable","props","ref","appearance","reserveSelectedTabSpace","disabled","onTabSelect","size","vertical","innerRef","useRef","focusAttributes","useArrowNavigationGroup","circular","axis","memorizeCurrent","selectedValue","setSelectedValue","useControllableState","state","defaultState","defaultSelectedValue","initialState","undefined","currentSelectedValue","previousSelectedValue","useEffect","current","onSelect","useEventCallback","event","data","value","registeredTabs","onRegister","JSON","stringify","onUnregister","getRegisteredTabs","useCallback","components","root","getNativeElementProps","useMergedRefs","role","exports"],"sources":["../src/packages/react-components/react-tabs/src/components/TabList/useTabList.ts"],"sourcesContent":["import * as React from 'react';\nimport { useArrowNavigationGroup } from '@fluentui/react-tabster';\nimport {\n  getNativeElementProps,\n  useControllableState,\n  useEventCallback,\n  useMergedRefs,\n} from '@fluentui/react-utilities';\nimport type { TabRegisterData, SelectTabData, SelectTabEvent, TabListProps, TabListState } from './TabList.types';\nimport { TabValue } from '../Tab/Tab.types';\n\n/**\n * Create the state required to render TabList.\n *\n * The returned state can be modified with hooks such as useTabListStyles_unstable,\n * before being passed to renderTabList_unstable.\n *\n * @param props - props from this instance of TabList\n * @param ref - reference to root HTMLElement of TabList\n */\nexport const useTabList_unstable = (props: TabListProps, ref: React.Ref<HTMLElement>): TabListState => {\n  const {\n    appearance = 'transparent',\n    reserveSelectedTabSpace = true,\n    disabled = false,\n    onTabSelect,\n    size = 'medium',\n    vertical = false,\n  } = props;\n\n  const innerRef = React.useRef<HTMLElement>(null);\n\n  const focusAttributes = useArrowNavigationGroup({\n    circular: true,\n    axis: vertical ? 'vertical' : 'horizontal',\n    memorizeCurrent: true,\n  });\n\n  const [selectedValue, setSelectedValue] = useControllableState({\n    state: props.selectedValue,\n    defaultState: props.defaultSelectedValue,\n    initialState: undefined,\n  });\n\n  // considered usePrevious, but it is sensitive to re-renders\n  // this could cause the previous to move to current in the case where the tab list re-renders.\n  // these refs avoid getRegisteredTabs changing when selectedValue changes and causing\n  // renders for tabs that have not changed.\n  const currentSelectedValue = React.useRef<TabValue | undefined>(undefined);\n  const previousSelectedValue = React.useRef<TabValue | undefined>(undefined);\n\n  React.useEffect(() => {\n    previousSelectedValue.current = currentSelectedValue.current;\n    currentSelectedValue.current = selectedValue;\n  }, [selectedValue]);\n\n  const onSelect = useEventCallback((event: SelectTabEvent, data: SelectTabData) => {\n    setSelectedValue(data.value);\n    onTabSelect?.(event, data);\n  });\n\n  const registeredTabs = React.useRef<Record<string, TabRegisterData>>({});\n\n  const onRegister = useEventCallback((data: TabRegisterData) => {\n    registeredTabs.current[JSON.stringify(data.value)] = data;\n  });\n\n  const onUnregister = useEventCallback((data: TabRegisterData) => {\n    delete registeredTabs.current[JSON.stringify(data.value)];\n  });\n\n  const getRegisteredTabs = React.useCallback(() => {\n    return {\n      selectedValue: currentSelectedValue.current,\n      previousSelectedValue: previousSelectedValue.current,\n      registeredTabs: registeredTabs.current,\n    };\n  }, []);\n\n  return {\n    components: {\n      root: 'div',\n    },\n    root: getNativeElementProps('div', {\n      ref: useMergedRefs(ref, innerRef),\n      role: 'tablist',\n      ...focusAttributes,\n      ...props,\n    }),\n    appearance,\n    reserveSelectedTabSpace,\n    disabled,\n    selectedValue,\n    size,\n    vertical,\n    onRegister,\n    onUnregister,\n    onSelect,\n    getRegisteredTabs,\n  };\n};\n"],"mappings":"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"}