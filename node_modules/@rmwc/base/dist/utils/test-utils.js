"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.actWait = exports.wait = exports.mountHook = void 0;
var tslib_1 = require("tslib");
var react_1 = tslib_1.__importDefault(require("react"));
var enzyme_1 = require("enzyme");
var test_utils_1 = require("react-dom/test-utils");
var mountHook = function (hook) {
    enzyme_1.mount(react_1.default.createElement(HookWrapper, { hook: hook }));
};
exports.mountHook = mountHook;
function HookWrapper(_a) {
    var hook = _a.hook;
    hook();
    return react_1.default.createElement(react_1.default.Fragment, null);
}
var wait = function (timeout) {
    if (timeout === void 0) { timeout = 0; }
    return new Promise(function (resolve) {
        setTimeout(resolve, timeout);
    });
};
exports.wait = wait;
var actWait = function (timeout) {
    if (timeout === void 0) { timeout = 0; }
    return tslib_1.__awaiter(void 0, void 0, void 0, function () {
        return tslib_1.__generator(this, function (_a) {
            switch (_a.label) {
                case 0: return [4 /*yield*/, test_utils_1.act(function () { return tslib_1.__awaiter(void 0, void 0, void 0, function () {
                        return tslib_1.__generator(this, function (_a) {
                            switch (_a.label) {
                                case 0: return [4 /*yield*/, exports.wait(timeout)];
                                case 1:
                                    _a.sent();
                                    return [2 /*return*/];
                            }
                        });
                    }); })];
                case 1:
                    _a.sent();
                    return [2 /*return*/];
            }
        });
    });
};
exports.actWait = actWait;
